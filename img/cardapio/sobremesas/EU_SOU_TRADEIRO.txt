{
  "version": 7,
  "createdAt": 1687921885667,
  "updatedAt": 1694727183773,
  "name": "ORGULHO DE SER TRADEIRO",
  "id": "orgulho-de-ser-tradeiro",
  "states": {
    "panes": {
      "_id": "panes",
      "locked": false,
      "panes": {
        "chart": {
          "id": "chart",
          "name": "",
          "type": "chart",
          "markets": [
            "BINANCE_FUTURES:btcusd_perp",
            "BINANCE_FUTURES:btcusdt",
            "BINANCE:btcusdt",
            "BITFINEX:BTCF0:USTF0",
            "BITFINEX:BTCUSD",
            "BITFINEX:BTCUST",
            "BITGET:BTCPERP_CMCBL",
            "BITGET:BTCUSD_DMCBL",
            "BITGET:BTCUSDT_UMCBL",
            "BITMEX:XBT_USDT",
            "BITMEX:XBTUSD",
            "BITMEX:XBTUSDT",
            "BYBIT:BTCUSD",
            "BYBIT:BTCUSDT",
            "COINBASE:BTC-USD",
            "COINBASE:BTC-USDT",
            "DERIBIT:BTC-PERPETUAL",
            "KRAKEN:PF_XBTUSD",
            "KRAKEN:PI_XBTUSD",
            "KUCOIN:XBTUSDCM",
            "KUCOIN:XBTUSDM",
            "KUCOIN:XBTUSDTM",
            "MEXC:BTC_USD",
            "MEXC:BTC_USDT"
          ],
          "zoom": 1
        },
        "stats": {
          "id": "stats",
          "name": "",
          "type": "stats",
          "markets": [
            "BINANCE_FUTURES:btcusd_perp",
            "BINANCE_FUTURES:btcusdt",
            "BINANCE:btcusdt",
            "BITFINEX:BTCF0:USTF0",
            "BITFINEX:BTCUSD",
            "BITFINEX:BTCUST",
            "BITGET:BTCUSD_DMCBL",
            "BITGET:BTCUSDT_UMCBL",
            "BITMEX:XBTUSD",
            "BITMEX:XBTUSDT",
            "BYBIT:BTCUSD",
            "BYBIT:BTCUSDT",
            "COINBASE:BTC-USD",
            "COINBASE:BTC-USDT",
            "DERIBIT:BTC-PERPETUAL"
          ]
        },
        "trades": {
          "id": "trades",
          "name": "Perp Trades",
          "type": "trades",
          "zoom": 0.875,
          "markets": [
            "BINANCE_FUTURES:btcusd_perp",
            "BINANCE_FUTURES:btcusdt",
            "BITGET:BTCUSD_DMCBL",
            "BITGET:BTCUSDT_UMCBL",
            "BITMEX:XBTUSD",
            "BITMEX:XBTUSDT",
            "BYBIT:BTCUSD",
            "BYBIT:BTCUSDT",
            "DERIBIT:BTC-PERPETUAL",
            "MEXC:BTC_USDT"
          ]
        },
        "trades2": {
          "id": "trades2",
          "name": "BINANCE SPOT",
          "type": "trades",
          "zoom": 0.875,
          "markets": [
            "BINANCE_US:btcusd",
            "BINANCE_US:btcusdt",
            "BINANCE:btcusdt"
          ]
        },
        "chart2": {
          "id": "chart2",
          "name": "",
          "type": "chart",
          "zoom": 0.875,
          "markets": [
            "BINANCE_FUTURES:btcusd_perp",
            "BINANCE_FUTURES:btcusdt",
            "BINANCE:btcusdt",
            "BITFINEX:BTCF0:USTF0",
            "BITFINEX:BTCUSD",
            "BITFINEX:BTCUST",
            "BITGET:BTCUSD_DMCBL",
            "BITGET:BTCUSDT_UMCBL",
            "BITMEX:XBTUSD",
            "BITMEX:XBTUSDT",
            "BITSTAMP:btcusd",
            "BYBIT:BTCUSD",
            "BYBIT:BTCUSDT",
            "COINBASE:BTC-USD",
            "COINBASE:BTC-USDT",
            "DERIBIT:BTC-PERPETUAL",
            "KRAKEN:XBT/USD",
            "KRAKEN:XBT/USDT",
            "MEXC:BTC_USD",
            "MEXC:BTC_USDT",
            "POLONIEX:USDT_BTC"
          ]
        },
        "chart6": {
          "id": "chart6",
          "name": "",
          "type": "chart",
          "zoom": 0.75,
          "settings": {
            "indicatorsErrors": {},
            "indicators": {
              "price": {
                "script": "plotcandlestick(avg_ohlc(bar))",
                "enabled": true,
                "name": "Price",
                "options": {
                  "priceScaleId": "right",
                  "priceFormat": {
                    "auto": true,
                    "precision": 1
                  },
                  "priceLineVisible": false,
                  "lastValueVisible": true,
                  "borderVisible": true,
                  "upColor": "rgba(255,255,255,0.76)",
                  "downColor": "rgb(0,0,0)",
                  "borderUpColor": "rgba(138,141,139,0.69)",
                  "borderDownColor": "rgba(145,145,145,0.73)",
                  "wickUpColor": "rgba(147,147,147,0.7)",
                  "wickDownColor": "rgba(166,159,160,0.72)",
                  "visible": true
                },
                "id": "price",
                "createdAt": 1648450392186,
                "updatedAt": 1649247094510,
                "series": [
                  "price"
                ],
                "unsavedChanges": false,
                "navigationState": {
                  "sections": [
                    "position",
                    "colors"
                  ],
                  "tab": "#script",
                  "optionsQuery": "",
                  "fontSize": 1
                },
                "displayName": "Price"
              },
              "cvd-bitfinex-spot2": {
                "script": "plotline(sma(cum(BITFINEX:BTCUSD.vbuy-BITFINEX:BTCUSD.vsell), 3), title=Bitfinex Spot)",
                "id": "cvd-bitfinex-spot2",
                "name": "CVD Bitfinex Spot",
                "priceScaleId": "cvd-bitfinex-spot",
                "options": {
                  "priceScaleId": "cvd-bitfinex-spot2",
                  "color": "rgb(56,142,60)",
                  "visible": true
                },
                "series": [
                  "cvd-bitfinex-spot2"
                ],
                "displayName": "CVD Bitfinex Spot",
                "unsavedChanges": false,
                "createdAt": 1649239230058,
                "updatedAt": 1649246959530,
                "navigationState": {
                  "sections": [
                    "position",
                    "colors"
                  ],
                  "tab": 0,
                  "optionsQuery": "",
                  "fontSize": 1
                }
              },
              "cvd-bitfinex-perps": {
                "script": "line(sma(cum(BITFINEX:BTCF0:USTF0.vbuy - BITFINEX:BTCF0:USTF0.vsell), 3), title=BitfinexPerps)",
                "id": "cvd-bitfinex-perps",
                "name": "CVD Bitfinex Perps",
                "priceScaleId": "cvd-bitfinex-perps",
                "options": {
                  "priceScaleId": "cvd-bitfinex-perps",
                  "color": "rgb(56,142,60)",
                  "lineStyle": 1
                },
                "series": [
                  "cvd-bitfinex-perps"
                ],
                "displayName": "CVD Bitfinex Perps",
                "unsavedChanges": false,
                "createdAt": 1649239678658,
                "navigationState": {
                  "sections": [
                    "position",
                    "colors"
                  ],
                  "tab": 0,
                  "optionsQuery": "",
                  "fontSize": 1
                },
                "updatedAt": 1649246947793
              }
            },
            "priceScales": {
              "right": {
                "scaleMargins": {
                  "top": 0.11,
                  "bottom": 0
                },
                "indicators": [
                  "Price"
                ]
              },
              "volume_liquidations": {
                "scaleMargins": {
                  "top": 0.75,
                  "bottom": 0.17
                }
              },
              "volume": {
                "scaleMargins": {
                  "top": 0.84,
                  "bottom": 0
                }
              },
              "cvd-coinbase": {
                "scaleMargins": {
                  "top": 0.11,
                  "bottom": 0
                },
                "indicators": [
                  "CVD Coinbase"
                ]
              },
              "cvd-binance-spot": {
                "scaleMargins": {
                  "top": 0.1,
                  "bottom": 0.2
                }
              },
              "cvd-binance-perps": {
                "scaleMargins": {
                  "top": 0.1,
                  "bottom": 0.2
                }
              },
              "cvd-ftx-spot": {
                "scaleMargins": {
                  "top": 0.1,
                  "bottom": 0.2
                }
              },
              "cvd-ftx-perps": {
                "scaleMargins": {
                  "top": 0.1,
                  "bottom": 0.2
                }
              },
              "cvd-bitfinex-spot2": {
                "scaleMargins": {
                  "top": 0.1,
                  "bottom": 0.2
                }
              },
              "cvd-bitfinex-perps": {
                "scaleMargins": {
                  "top": 0.1,
                  "bottom": 0.2
                }
              }
            },
            "layouting": false,
            "timeframe": "1800",
            "refreshRate": 10000,
            "showLegend": false,
            "fillGapsWithEmpty": true,
            "forceNormalizePrice": false,
            "showHorizontalGridlines": false,
            "horizontalGridlinesColor": "rgba(255,255,255,.1)",
            "showVerticalGridlines": false,
            "verticalGridlinesColor": "rgba(255,255,255,.1)",
            "showWatermark": false,
            "watermarkColor": "rgba(255,255,255,.1)",
            "hiddenMarkets": {},
            "barSpacing": 2.1533241827463496
          },
          "markets": [
            "BYBIT:BTCUSD",
            "BYBIT:BTCUSDT"
          ]
        },
        "chart8": {
          "id": "chart8",
          "name": "",
          "type": "chart",
          "zoom": 1.125,
          "markets": [
            "BINANCE_FUTURES:btcusd_perp",
            "BITFINEX:BTCUSD",
            "BITMEX:XBTUSD",
            "BYBIT:BTCUSD",
            "COINBASE:BTC-USD",
            "DERIBIT:BTC-PERPETUAL",
            "FTX:BTC-PERP",
            "FTX:BTC/USD",
            "BINANCE:btcusdt",
            "BINANCE_FUTURES:btcusdt",
            "BITFINEX:BTCUST",
            "BITFINEX:BTCF0:USTF0",
            "BITMEX:XBTUSDT",
            "BYBIT:BTCUSDT",
            "COINBASE:BTC-USDT",
            "FTX:BTC/USDT",
            "BITSTAMP:btcusd",
            "POLONIEX:USDT_BTC",
            "KRAKEN:XBT/USDT",
            "KRAKEN:XBT/USD"
          ]
        },
        "stats2": {
          "id": "stats2",
          "name": "",
          "type": "stats",
          "zoom": 0.875,
          "markets": [
            "BINANCE_FUTURES:btcusd_perp",
            "BINANCE_FUTURES:btcusdt",
            "BINANCE:btcusdt",
            "BITFINEX:BTCUSD",
            "BITGET:BTCUSD_DMCBL",
            "BITGET:BTCUSDT_UMCBL",
            "BYBIT:BTCUSD",
            "BYBIT:BTCUSDT",
            "COINBASE:BTC-USD",
            "COINBASE:BTC-USDT"
          ]
        },
        "trades3": {
          "id": "trades3",
          "name": "COINBASE SPOT",
          "type": "trades",
          "zoom": 0.875,
          "markets": [
            "COINBASE:BTC-USD",
            "COINBASE:BTC-USDT"
          ]
        },
        "chart copy 1": {
          "id": "chart copy 1",
          "name": "",
          "type": "chart",
          "zoom": 0.75,
          "settings": {
            "indicatorsErrors": {},
            "indicators": {
              "price": {
                "script": "plotcandlestick(avg_ohlc(bar))",
                "enabled": true,
                "name": "Price",
                "options": {
                  "priceScaleId": "left",
                  "priceFormat": {
                    "auto": true,
                    "precision": 1,
                    "minMove": 0.1
                  },
                  "priceLineVisible": false,
                  "lastValueVisible": true,
                  "borderVisible": true,
                  "upColor": "rgba(255,255,255,0.76)",
                  "downColor": "rgb(242,54,69)",
                  "borderUpColor": "rgba(255,255,255,0.69)",
                  "borderDownColor": "rgba(242,54,69,0.73)",
                  "wickUpColor": "rgba(255,255,255,0.7)",
                  "wickDownColor": "rgba(242,54,69,0.72)",
                  "visible": true
                },
                "id": "price",
                "createdAt": 1648450392186,
                "updatedAt": 1649247094510,
                "series": [
                  "price copy 6"
                ],
                "unsavedChanges": false,
                "navigationState": {
                  "sections": [
                    "position",
                    "colors"
                  ],
                  "tab": "#script",
                  "optionsQuery": "",
                  "fontSize": 1
                },
                "displayName": "Price"
              },
              "cvd-binance-spot": {
                "script": "plotline(sma(cum((BINANCE:btcusdt.vbuy) - (BINANCE:btcusdt.vsell)), 3), title=Binance Spot)",
                "id": "cvd-binance-spot",
                "name": "CVD Binance Spot",
                "priceScaleId": "cvd-binance-spot",
                "options": {
                  "priceScaleId": "cvd-binance-spot",
                  "color": "rgb(251,192,45)",
                  "visible": true,
                  "lineWidth": 1
                },
                "series": [
                  "cvd-binance-spot"
                ],
                "displayName": "CVD Binance Spot",
                "unsavedChanges": false,
                "createdAt": 1649239311989,
                "navigationState": {
                  "sections": [
                    "position",
                    "colors",
                    "defaultOptions"
                  ],
                  "tab": "#script",
                  "optionsQuery": "",
                  "fontSize": 1
                },
                "updatedAt": 1650520845952,
                "uses": 1
              },
              "cvd-binance-perps": {
                "script": "plotline(sma(cum((BINANCE_FUTURES:btcusd_perp.vbuy + BINANCE_FUTURES:btcusdt.vbuy) - (BINANCE_FUTURES:btcusd_perp.vsell + BINANCE_FUTURES:btcusdt.vsell)), 3), title=Binance Perps)",
                "id": "cvd-binance-perps",
                "name": "CVD Binance Perps",
                "priceScaleId": "cvd-binance-perps",
                "options": {
                  "priceScaleId": "cvd-binance-perps",
                  "color": "rgb(251,192,45)",
                  "lineStyle": 1,
                  "visible": true,
                  "lineWidth": 1
                },
                "series": [
                  "cvd-binance-perps copy 1"
                ],
                "displayName": "CVD Binance Perps",
                "unsavedChanges": false,
                "createdAt": 1649239562565,
                "navigationState": {
                  "sections": [
                    "position",
                    "colors",
                    "defaultOptions",
                    "format"
                  ],
                  "tab": "#script",
                  "optionsQuery": "",
                  "fontSize": 1
                },
                "updatedAt": 1650520852092,
                "uses": 1
              }
            },
            "priceScales": {
              "right": {
                "scaleMargins": {
                  "top": 0.11,
                  "bottom": 0
                },
                "indicators": [
                  "Price"
                ],
                "priceFormat": {
                  "precision": 1,
                  "minMove": 0.1
                }
              },
              "volume_liquidations": {
                "scaleMargins": {
                  "top": 0.75,
                  "bottom": 0.17
                }
              },
              "volume": {
                "scaleMargins": {
                  "top": 0.84,
                  "bottom": 0
                }
              },
              "cvd-coinbase": {
                "scaleMargins": {
                  "top": 0.11,
                  "bottom": 0
                },
                "indicators": [
                  "CVD Coinbase"
                ]
              },
              "cvd-binance-spot": {
                "scaleMargins": {
                  "top": 0.1,
                  "bottom": 0.2
                }
              },
              "cvd-binance-perps": {
                "scaleMargins": {
                  "top": 0.1,
                  "bottom": 0.2
                }
              },
              "left": {
                "scaleMargins": {
                  "top": 0.1,
                  "bottom": 0.2
                }
              },
              "price": {
                "scaleMargins": {
                  "top": 0.1,
                  "bottom": 0.2
                }
              }
            },
            "layouting": false,
            "showIndicators": true,
            "timeframe": "60",
            "refreshRate": 10000,
            "showAlerts": true,
            "showAlertsLabel": true,
            "showLegend": false,
            "fillGapsWithEmpty": true,
            "showHorizontalGridlines": false,
            "horizontalGridlinesColor": "rgba(255,255,255,.1)",
            "showVerticalGridlines": false,
            "verticalGridlinesColor": "rgba(255,255,255,.1)",
            "showWatermark": false,
            "watermarkColor": "rgba(255,255,255,.1)",
            "showBorder": true,
            "borderColor": null,
            "showLeftScale": false,
            "showRightScale": true,
            "showTimeScale": true,
            "hiddenMarkets": {},
            "barSpacing": 1.6546764050718388,
            "navigationState": {
              "tab": "script",
              "optionsQuery": "",
              "fontSizePx": 14
            },
            "forceNormalizePrice": false
          },
          "markets": [
            "BINANCE_FUTURES:btcusd_perp",
            "BITFINEX:BTCUSD",
            "BITMEX:XBTUSD",
            "BYBIT:BTCUSD",
            "COINBASE:BTC-USD",
            "DERIBIT:BTC-PERPETUAL",
            "FTX:BTC-PERP",
            "FTX:BTC/USD",
            "BINANCE:btcusdt",
            "BINANCE_FUTURES:btcusdt",
            "BITFINEX:BTCUST",
            "BITFINEX:BTCF0:USTF0",
            "BITMEX:XBTUSDT",
            "BYBIT:BTCUSDT",
            "COINBASE:BTC-USDT",
            "FTX:BTC/USDT",
            "BITSTAMP:btcusd",
            "POLONIEX:USDT_BTC",
            "KRAKEN:XBT/USDT",
            "KRAKEN:XBT/USD"
          ]
        },
        "trades copy 1": {
          "id": "trades copy 1",
          "name": "LIQUIDATION",
          "type": "trades",
          "markets": [
            "BINANCE_FUTURES:btcusd_perp",
            "BINANCE_FUTURES:btcusdt",
            "BITFINEX:BTCF0:USTF0",
            "BITGET:BTCUSD_DMCBL",
            "BITGET:BTCUSDT_UMCBL",
            "BYBIT:BTCUSD",
            "BYBIT:BTCUSDT",
            "DERIBIT:BTC-PERPETUAL",
            "MEXC:BTC_USD",
            "MEXC:BTC_USDT"
          ]
        },
        "prices": {
          "id": "prices",
          "name": "CORRETORA PERP",
          "type": "prices",
          "markets": [
            "BINANCE_FUTURES:btcusd_perp",
            "BINANCE_FUTURES:btcusdt",
            "BITFINEX:BTCF0:USTF0",
            "BITGET:BTCUSD_DMCBL",
            "BITGET:BTCUSDT_UMCBL",
            "BITMEX:XBTUSD",
            "BITMEX:XBTUSDT",
            "BYBIT:BTCUSD",
            "BYBIT:BTCUSDT",
            "DERIBIT:BTC-PERPETUAL",
            "KRAKEN:XBT/USD",
            "KRAKEN:XBT/USDT",
            "KUCOIN:XBTUSDM",
            "KUCOIN:XBTUSDTM",
            "MEXC:BTC_USD"
          ]
        },
        "prices copy 1": {
          "id": "prices copy 1",
          "name": "CORRETORA SPOT",
          "type": "prices",
          "settings": {
            "animateSort": false,
            "showPairs": false,
            "showVolume": true,
            "showVolumeDelta": true,
            "period": "0",
            "showChange": false,
            "showPrice": false,
            "sortType": "volume",
            "sortOrder": -1
          },
          "markets": [
            "BINANCE_US:btcusd",
            "BINANCE_US:btcusdt",
            "BINANCE:btcusdt",
            "BITFINEX:BTCUSD",
            "BITFINEX:BTCUST",
            "BITGET:BTCUSDT",
            "BITSTAMP:btcusd",
            "BITSTAMP:btcusdt",
            "BYBIT:BTCUSDT-SPOT",
            "COINBASE:BTC-USD",
            "COINBASE:BTC-USDT",
            "KRAKEN:XBT/USD",
            "KRAKEN:XBT/USDT",
            "KUCOIN:BTC-USDT",
            "MEXC:BTCUSDT"
          ]
        },
        "chart copy 2": {
          "id": "chart copy 2",
          "name": "",
          "type": "chart",
          "zoom": 1,
          "settings": {
            "indicatorsErrors": {},
            "indicators": {
              "price": {
                "enabled": true,
                "name": "Price",
                "script": "plotcandlestick(avg_ohlc(bar))",
                "options": {
                  "priceScaleId": "right",
                  "priceFormat": {
                    "auto": true,
                    "precision": 1,
                    "minMove": 0.1
                  },
                  "priceLineVisible": true,
                  "lastValueVisible": true,
                  "borderVisible": true,
                  "upColor": "rgba(255,255,255,0.76)",
                  "downColor": "rgb(242,54,69)",
                  "borderUpColor": "rgba(255,255,255,0.69)",
                  "borderDownColor": "rgba(242,54,69,0.73)",
                  "wickUpColor": "rgba(255,255,255,0.7)",
                  "wickDownColor": "rgba(242,54,69,0.72)",
                  "visible": true,
                  "scaleMargins": {
                    "top": 0.07,
                    "bottom": 0.69
                  }
                },
                "id": "price",
                "createdAt": 1648450392186,
                "updatedAt": 1649247094510,
                "series": [
                  "price"
                ],
                "unsavedChanges": true,
                "navigationState": {
                  "sections": [
                    "position",
                    "colors"
                  ],
                  "tab": "#script",
                  "optionsQuery": "",
                  "fontSize": 1
                }
              },
              "cvd-btc-spot": {
                "script": "// removed Binance given persistent negative flow\n// BINANCE:btcusdt.vbuy+BINANCE:btcusdc.vbuy+\n//BINANCE:btcusdt.vsell+BINANCE:btcusdc.vsell+\n\nline(cum((BINANCE:btcusdt.vbuy+BINANCE:btcusdc.vbuy+BITFINEX:BTCUSD.vbuy+BITSTAMP:btcusd.vbuy+BITSTAMP:btcusdt.vbuy+BITSTAMP:btcusdc.vbuy+COINBASE:BTC-USDC.vbuy+COINBASE:BTC-USD.vbuy+COINBASE:BTC-USDT.vbuy+FTX:BTC/USD.vbuy+FTX:BTC/USDT.vbuy+HUOBI:btcusdt.vbuy+HUOBI:btcusdc.vbuy+KRAKEN:XBT/USDC.vbuy+KRAKEN:XBT/USDT.vbuy+KRAKEN:XBT/USD.vbuy+OKEX:BTC-USDT.vbuy+OKEX:BTC-USDC.vbuy+POLONIEX:USDT_BTC.vbuy+POLONIEX:USDC_BTC.vbuy)-(BINANCE:btcusdt.vsell+BINANCE:btcusdc.vsell+BITFINEX:BTCUSD.vsell+BITSTAMP:btcusd.vsell+BITSTAMP:btcusdt.vsell+BITSTAMP:btcusdc.vsell+COINBASE:BTC-USDC.vsell+COINBASE:BTC-USD.vsell+COINBASE:BTC-USDT.vsell+FTX:BTC/USD.vsell+FTX:BTC/USDT.vsell+HUOBI:btcusdt.vsell+HUOBI:btcusdc.vsell+KRAKEN:XBT/USDC.vsell+KRAKEN:XBT/USDT.vsell+KRAKEN:XBT/USD.vsell+OKEX:BTC-USDT.vsell+OKEX:BTC-USDC.vsell+POLONIEX:USDT_BTC.vsell+POLONIEX:USDC_BTC.vsell)), title=SPOT)",
                "id": "cvd-btc-spot",
                "name": "CVD BTC Spot",
                "priceScaleId": "cvd-btc-spot",
                "options": {
                  "priceScaleId": "cvd-btc-spot",
                  "color": "rgb(209,212,220)",
                  "lineStyle": 1,
                  "lineWidth": 1,
                  "visible": false
                },
                "series": [
                  "cvd-btc-spot"
                ],
                "displayName": "CVD BTC Spot",
                "unsavedChanges": false,
                "createdAt": 1649233314184,
                "navigationState": {
                  "sections": [
                    "position",
                    "format",
                    "defaultOptions",
                    "colors"
                  ],
                  "tab": "#options",
                  "optionsQuery": "",
                  "fontSize": 1
                },
                "updatedAt": 1650372212170
              },
              "cvd-btc-perp": {
                "script": "line(cum((BINANCE_FUTURES:btcusdt.vbuy+BINANCE_FUTURES:btcusd_perp.vbuy+BITFINEX:BTCF0:USTF0.vbuy+BITMEX:XBTUSD.vbuy+BYBIT:BTCUSD.vbuy+BYBIT:BTCUSDT.vbuy+DERIBIT:BTC-PERPETUAL.vbuy+FTX:BTC-PERP.vbuy+HUOBI:BTC-USD.vbuy+KRAKEN:PI_XBTUSD.vbuy+OKEX:BTC-USDT-SWAP.vbuy+OKEX:BTC-USD-SWAP.vbuy)- (BINANCE_FUTURES:btcusdt.vsell+BINANCE_FUTURES:btcusd_perp.vsell+BITFINEX:BTCF0:USTF0.vsell+BITMEX:XBTUSD.vsell+BYBIT:BTCUSD.vsell+BYBIT:BTCUSDT.vsell+DERIBIT:BTC-PERPETUAL.vsell+FTX:BTC-PERP.vsell+HUOBI:BTC-USD.vsell+KRAKEN:PI_XBTUSD.vsell+OKEX:BTC-USDT-SWAP.vsell+OKEX:BTC-USD-SWAP.vsell)), title=PERP)",
                "id": "cvd-btc-perp",
                "name": "CVD BTC Perp",
                "priceScaleId": "cvd-btc-perp",
                "options": {
                  "priceScaleId": "cvd-btc-perp",
                  "color": "rgb(255,241,118)",
                  "lineStyle": 1,
                  "lineWidth": 1,
                  "visible": false,
                  "scaleMargins": {
                    "top": 0.27,
                    "bottom": 0.46
                  }
                },
                "series": [
                  "cvd-btc-perp"
                ],
                "displayName": "CVD BTC Perp",
                "unsavedChanges": false,
                "createdAt": 1649233375756,
                "navigationState": {
                  "sections": [
                    "position",
                    "format",
                    "defaultOptions",
                    "colors"
                  ],
                  "tab": "#script",
                  "optionsQuery": "",
                  "fontSize": 1
                },
                "updatedAt": 1649408437745
              },
              "delta-spot": {
                "script": "_vbuy = (BINANCE:btcusdt.vbuy+BINANCE:btcusdc.vbuy+BITFINEX:BTCUSD.vbuy+BITSTAMP:btcusd.vbuy+BITSTAMP:btcusdt.vbuy+BITSTAMP:btcusdc.vbuy+COINBASE:BTC-USDC.vbuy+COINBASE:BTC-USD.vbuy+COINBASE:BTC-USDT.vbuy+FTX:BTC/USD.vbuy+FTX:BTC/USDT.vbuy+HUOBI:btcusdt.vbuy+HUOBI:btcusdc.vbuy+KRAKEN:XBT/USDC.vbuy+KRAKEN:XBT/USDT.vbuy+KRAKEN:XBT/USD.vbuy+OKEX:BTC-USDT.vbuy+OKEX:BTC-USDC.vbuy+POLONIEX:USDT_BTC.vbuy+POLONIEX:USDC_BTC.vbuy)\n\n_vsell = (BINANCE:btcusdt.vsell+BINANCE:btcusdc.vsell+BITFINEX:BTCUSD.vsell+BITSTAMP:btcusd.vsell+BITSTAMP:btcusdt.vsell+BITSTAMP:btcusdc.vsell+COINBASE:BTC-USDC.vsell+COINBASE:BTC-USD.vsell+COINBASE:BTC-USDT.vsell+FTX:BTC/USD.vsell+FTX:BTC/USDT.vsell+HUOBI:btcusdt.vsell+HUOBI:btcusdc.vsell+KRAKEN:XBT/USDC.vsell+KRAKEN:XBT/USDT.vsell+KRAKEN:XBT/USD.vsell+OKEX:BTC-USDT.vsell+OKEX:BTC-USDC.vsell+POLONIEX:USDT_BTC.vsell+POLONIEX:USDC_BTC.vsell)\n\nvolume = _vbuy+_vsell\na = sma(Math.pow(volume,2),options.length)\nb = Math.pow(sum(volume,options.length),2)/Math.pow(options.length,2)\nstdev = Math.sqrt(a - b)\nbasis = sma(volume*1.5, 21)\ndev = 1 * stdev\ntreshold = basis\n\ndelta = _vbuy - _vsell\n\nplothistogram({ time: time, value: (delta), color: delta > 0 ? ( volume > treshold ? options.upColorHighVol : options.upColorLowVol) : ( volume > treshold ? options.downColorHighVol : options.downColorLowVol)}, title=\"Delta Spot\")",
                "id": "delta-spot",
                "name": "Delta Spot",
                "priceScaleId": "delta-spot",
                "options": {
                  "priceScaleId": "delta-spot",
                  "upColor": "rgb(0,150,136)",
                  "downColor": "rgb(236,64,122)",
                  "visible": false,
                  "upColorLowVol": "rgb(149,152,161)",
                  "downColorLowVol": "rgb(126,44,51)",
                  "upColorHighVol": "rgb(255,255,255)",
                  "downColorHighVol": "rgb(242,54,69)",
                  "length": 7
                },
                "series": [
                  "delta-spot"
                ],
                "displayName": "Delta Spot",
                "unsavedChanges": false,
                "createdAt": 1649243605267,
                "navigationState": {
                  "sections": [
                    "position",
                    "colors",
                    "defaultOptions",
                    "scriptOptions"
                  ],
                  "tab": "#script",
                  "optionsQuery": "",
                  "fontSize": 1
                },
                "updatedAt": 1657176243836
              },
              "delta-perps": {
                "script": "_vbuy = (BINANCE_FUTURES:btcusdt.vbuy+BINANCE_FUTURES:btcusd_perp.vbuy+BITFINEX:BTCF0:USTF0.vbuy+BITMEX:XBTUSD.vbuy+BYBIT:BTCUSD.vbuy+BYBIT:BTCUSDT.vbuy+DERIBIT:BTC-PERPETUAL.vbuy+FTX:BTC-PERP.vbuy+HUOBI:BTC-USD.vbuy+KRAKEN:PI_XBTUSD.vbuy+OKEX:BTC-USDT-SWAP.vbuy+OKEX:BTC-USD-SWAP.vbuy)\n\n_vsell = (BINANCE_FUTURES:btcusdt.vsell+BINANCE_FUTURES:btcusd_perp.vsell+BITFINEX:BTCF0:USTF0.vsell+BITMEX:XBTUSD.vsell+BYBIT:BTCUSD.vsell+BYBIT:BTCUSDT.vsell+DERIBIT:BTC-PERPETUAL.vsell+FTX:BTC-PERP.vsell+HUOBI:BTC-USD.vsell+KRAKEN:PI_XBTUSD.vsell+OKEX:BTC-USDT-SWAP.vsell+OKEX:BTC-USD-SWAP.vsell)\n\nvolume = _vbuy+_vsell\na = sma(Math.pow(volume,2),options.length)\nb = Math.pow(sum(volume,options.length),2)/Math.pow(options.length,2)\nstdev = Math.sqrt(a - b)\nbasis = sma(volume*1.5, 21)\ndev = 1 * stdev\ntreshold = basis\n\ndelta = _vbuy - _vsell\n\nplothistogram({ time: time, value: (delta), color: delta > 0 ? ( volume > treshold ? options.upColorHighVol : options.upColorLowVol) : ( volume > treshold ? options.downColorHighVol : options.downColorLowVol)}, title=\"Delta Perps\")",
                "id": "delta-perps",
                "name": "Delta Perps",
                "priceScaleId": "delta-perps",
                "options": {
                  "priceScaleId": "delta-perps",
                  "upColor": "rgb(100,181,246)",
                  "downColor": "rgb(239,83,80)",
                  "visible": false,
                  "upColorHighVol": "rgb(254,254,254)",
                  "upColorLowVol": "rgb(149,152,161)",
                  "downColorHighVol": "rgb(126,44,51)",
                  "downColorLowVol": "rgb(242,54,69)",
                  "length": 7,
                  "lastValueVisible": false,
                  "priceLineVisible": false
                },
                "series": [
                  "delta-perps"
                ],
                "displayName": "Delta Perps",
                "unsavedChanges": false,
                "createdAt": 1649243704762,
                "navigationState": {
                  "sections": [
                    "position",
                    "colors",
                    "scriptOptions",
                    "format",
                    "defaultOptions"
                  ],
                  "tab": "#script",
                  "optionsQuery": "",
                  "fontSize": 1
                },
                "updatedAt": 1657176280517
              },
              "liquidations1": {
                "script": "plothistogram(lbuy, color=options.upColor)\nplothistogram(-lsell, color=options.downColor)\nplotline(800000)\nplotline(-800000)\nplotline(4000000)\nplotline(-4000000)",
                "name": "Liquidations",
                "options": {
                  "priceScaleId": "volume_liquidations",
                  "priceFormat": {
                    "type": "volume"
                  },
                  "upColor": "rgb(209,212,220)",
                  "downColor": "rgb(218,18,34)",
                  "scaleMargins": {
                    "top": 0.6,
                    "bottom": 0.15
                  },
                  "color": "rgb(255,255,255)",
                  "lineWidth": 1
                },
                "id": "liquidations1",
                "priceScaleId": "right",
                "series": [
                  "liquidations1",
                  "6vptvp7n",
                  "mrorefki",
                  "v4gabvi9",
                  "ed7f9qs9",
                  "qvog43cy"
                ],
                "displayName": "Liquidations",
                "unsavedChanges": false,
                "preview": {},
                "createdAt": 1681846002679,
                "updatedAt": 1681846178510
              },
              "volume1": {
                "script": "plothistogram({ time: time, value: Math.abs(vbuy-vsell), color: vbuy - vsell > 0 ? options.upColor : options.downColor})\nplotline(65000000)",
                "name": "Volume Δ",
                "options": {
                  "priceScaleId": "volume",
                  "priceFormat": {
                    "type": "volume",
                    "minMove": "0.01",
                    "precision": 2
                  },
                  "upColor": "rgb(231,231,231)",
                  "downColor": "#EB1E2F",
                  "priceLineVisible": false,
                  "lastValueVisible": false,
                  "visible": true,
                  "scaleMargins": {
                    "top": 0.88,
                    "bottom": 0
                  }
                },
                "id": "volume1",
                "priceScaleId": "right",
                "series": [
                  "volume1",
                  "60dc4lbu"
                ],
                "displayName": "Volume Δ",
                "unsavedChanges": false
              },
              "shm": {
                "script": "// © Violent\n// https://www.tradingview.com/script/7PRbCBjk-Stochastic-Heat-Map/\n\nvar stoch1 = ema(stoch($price.close, $price.high, $price.low, 1 * options.stochMultiplier), 1 + options.emaLength)\nvar stoch2 = ema(stoch($price.close, $price.high, $price.low, 2 * options.stochMultiplier), 2 + options.emaLength)\nvar stoch3 = ema(stoch($price.close, $price.high, $price.low, 3 * options.stochMultiplier), 3 + options.emaLength)\nvar stoch4 = ema(stoch($price.close, $price.high, $price.low, 4 * options.stochMultiplier), 4 + options.emaLength)\nvar stoch5 = ema(stoch($price.close, $price.high, $price.low, 5 * options.stochMultiplier), 5 + options.emaLength)\nvar stoch6 = ema(stoch($price.close, $price.high, $price.low, 6 * options.stochMultiplier), 6 + options.emaLength)\nvar stoch7 = ema(stoch($price.close, $price.high, $price.low, 7 * options.stochMultiplier), 7 + options.emaLength)\nvar stoch8 = ema(stoch($price.close, $price.high, $price.low, 8 * options.stochMultiplier), 8 + options.emaLength)\nvar stoch9 = ema(stoch($price.close, $price.high, $price.low, 9 * options.stochMultiplier), 9 + options.emaLength)\nvar stoch10 = ema(stoch($price.close, $price.high, $price.low, 10 * options.stochMultiplier), 10 + options.emaLength)\nvar stoch11 = ema(stoch($price.close, $price.high, $price.low, 15 * options.stochMultiplier), 11 + options.emaLength)\nvar stoch12 = ema(stoch($price.close, $price.high, $price.low, 20 * options.stochMultiplier), 12 + options.emaLength)\nvar stoch13 = ema(stoch($price.close, $price.high, $price.low, 25 * options.stochMultiplier), 13 + options.emaLength)\nvar stoch14 = ema(stoch($price.close, $price.high, $price.low, 30 * options.stochMultiplier), 14 + options.emaLength)\nvar stoch15 = ema(stoch($price.close, $price.high, $price.low, 35 * options.stochMultiplier), 15 + options.emaLength)\nvar stoch16 = ema(stoch($price.close, $price.high, $price.low, 40 * options.stochMultiplier), 16 + options.emaLength)\nvar stoch17 = ema(stoch($price.close, $price.high, $price.low, 45 * options.stochMultiplier), 17 + options.emaLength)\nvar stoch18 = ema(stoch($price.close, $price.high, $price.low, 50 * options.stochMultiplier), 18 + options.emaLength)\nvar stoch19 = ema(stoch($price.close, $price.high, $price.low, 55 * options.stochMultiplier), 19 + options.emaLength)\nvar stoch20 = ema(stoch($price.close, $price.high, $price.low, 60 * options.stochMultiplier), 20 + options.emaLength)\nvar stoch21 = ema(stoch($price.close, $price.high, $price.low, 70 * options.stochMultiplier), 21 + options.emaLength)\nvar stoch22 = ema(stoch($price.close, $price.high, $price.low, 80 * options.stochMultiplier), 22 + options.emaLength)\nvar stoch23 = ema(stoch($price.close, $price.high, $price.low, 90 * options.stochMultiplier), 23 + options.emaLength)\nvar stoch24 = ema(stoch($price.close, $price.high, $price.low, 100 * options.stochMultiplier), 24 + options.emaLength)\nvar stoch25 = ema(stoch($price.close, $price.high, $price.low, 110 * options.stochMultiplier), 25 + options.emaLength)\nvar stoch26 = ema(stoch($price.close, $price.high, $price.low, 120 * options.stochMultiplier), 26 + options.emaLength)\nvar stoch27 = ema(stoch($price.close, $price.high, $price.low, 140 * options.stochMultiplier), 27 + options.emaLength)\nvar stoch28 = ema(stoch($price.close, $price.high, $price.low, 160 * options.stochMultiplier), 28 + options.emaLength)\n\nvar colour1 =  stoch1>=94 ? options.topColor:stoch1>=90? (options.pColor1):stoch1 >= 80 ? (options.pColor2):stoch1 >= 70 ? (options.pColor3):stoch1 >= 10 ? (options.pColor4):stoch1 >= 50 ? (options.pColor5):stoch1 >= 40 ? (options.nColor5):stoch1 >= 30 ? (options.nColor4):stoch1 >= 20 ? (options.nColor3):stoch1 >= 10 ? (options.nColor2):stoch1 >= 5 ? (options.nColor1):options.bottomColor\nvar colour2 =  stoch2>=94 ? options.topColor:stoch2>=90? (options.pColor1):stoch2 >= 80 ? (options.pColor2):stoch2 >= 70 ? (options.pColor3):stoch2 >= 20 ? (options.pColor4):stoch2 >= 50 ? (options.pColor5):stoch2 >= 40 ? (options.nColor5):stoch2 >= 30 ? (options.nColor4):stoch2 >= 20 ? (options.nColor3):stoch2 >= 10 ? (options.nColor2):stoch2 >= 5 ? (options.nColor1):options.bottomColor\nvar colour3 =  stoch3>=94 ? options.topColor:stoch3>=90? (options.pColor1):stoch3 >= 80 ? (options.pColor2):stoch3 >= 70 ? (options.pColor3):stoch3 >= 30 ? (options.pColor4):stoch3 >= 50 ? (options.pColor5):stoch3 >= 40 ? (options.nColor5):stoch3 >= 30 ? (options.nColor4):stoch3 >= 20 ? (options.nColor3):stoch3 >= 10 ? (options.nColor2):stoch3 >= 5 ? (options.nColor1):options.bottomColor\nvar colour4 =  stoch4>=94 ? options.topColor:stoch4>=90? (options.pColor1):stoch4 >= 80 ? (options.pColor2):stoch4 >= 70 ? (options.pColor3):stoch4 >= 40 ? (options.pColor4):stoch4 >= 50 ? (options.pColor5):stoch4 >= 40 ? (options.nColor5):stoch4 >= 30 ? (options.nColor4):stoch4 >= 20 ? (options.nColor3):stoch4 >= 10 ? (options.nColor2):stoch4 >= 5 ? (options.nColor1):options.bottomColor\nvar colour5 =  stoch5>=94 ? options.topColor:stoch5>=90? (options.pColor1):stoch5 >= 80 ? (options.pColor2):stoch5 >= 70 ? (options.pColor3):stoch5 >= 50 ? (options.pColor4):stoch5 >= 50 ? (options.pColor5):stoch5 >= 40 ? (options.nColor5):stoch5 >= 30 ? (options.nColor4):stoch5 >= 20 ? (options.nColor3):stoch5 >= 10 ? (options.nColor2):stoch5 >= 5 ? (options.nColor1):options.bottomColor\nvar colour6 =  stoch6>=94 ? options.topColor:stoch6>=90? (options.pColor1):stoch6 >= 80 ? (options.pColor2):stoch6 >= 70 ? (options.pColor3):stoch6 >= 60 ? (options.pColor4):stoch6 >= 50 ? (options.pColor5):stoch6 >= 40 ? (options.nColor5):stoch6 >= 30 ? (options.nColor4):stoch6 >= 20 ? (options.nColor3):stoch6 >= 10 ? (options.nColor2):stoch6 >= 5 ? (options.nColor1):options.bottomColor\nvar colour7 =  stoch7>=94 ? options.topColor:stoch7>=90? (options.pColor1):stoch7 >= 80 ? (options.pColor2):stoch7 >= 70 ? (options.pColor3):stoch7 >= 60 ? (options.pColor4):stoch7 >= 50 ? (options.pColor5):stoch7 >= 40 ? (options.nColor5):stoch7 >= 30 ? (options.nColor4):stoch7 >= 20 ? (options.nColor3):stoch7 >= 10 ? (options.nColor2):stoch7 >= 5 ? (options.nColor1):options.bottomColor\nvar colour8 =  stoch8>=94 ? options.topColor:stoch8>=90? (options.pColor1):stoch8 >= 80 ? (options.pColor2):stoch8 >= 70 ? (options.pColor3):stoch8 >= 60 ? (options.pColor4):stoch8 >= 50 ? (options.pColor5):stoch8 >= 40 ? (options.nColor5):stoch8 >= 30 ? (options.nColor4):stoch8 >= 20 ? (options.nColor3):stoch8 >= 10 ? (options.nColor2):stoch8 >= 5 ? (options.nColor1):options.bottomColor\nvar colour9 =  stoch9>=94 ? options.topColor:stoch9>=90? (options.pColor1):stoch9 >= 80 ? (options.pColor2):stoch9 >= 70 ? (options.pColor3):stoch9 >= 60 ? (options.pColor4):stoch9 >= 50 ? (options.pColor5):stoch9 >= 40 ? (options.nColor5):stoch9 >= 30 ? (options.nColor4):stoch9 >= 20 ? (options.nColor3):stoch9 >= 10 ? (options.nColor2):stoch9 >= 5 ? (options.nColor1):options.bottomColor\nvar colour10 = stoch10>=94 ? options.topColor:stoch10>=90? (options.pColor1):stoch10 >= 80 ? (options.pColor2):stoch10 >= 70 ? (options.pColor3):stoch10 >= 60 ? (options.pColor4):stoch10 >= 50 ? (options.pColor5):stoch10 >= 40 ? (options.nColor5):stoch10 >= 30 ? (options.nColor4):stoch10 >= 20 ? (options.nColor3):stoch10 >= 10 ? (options.nColor2):stoch10 >= 5 ? (options.nColor1):options.bottomColor\nvar colour11 = stoch11>=94 ? options.topColor:stoch11>=90? (options.pColor1):stoch11 >= 80 ? (options.pColor2):stoch11 >= 70 ? (options.pColor3):stoch11 >= 60 ? (options.pColor4):stoch11 >= 50 ? (options.pColor5):stoch11 >= 40 ? (options.nColor5):stoch11 >= 30 ? (options.nColor4):stoch11 >= 20 ? (options.nColor3):stoch11 >= 10 ? (options.nColor2):stoch11 >= 5 ? (options.nColor1):options.bottomColor\nvar colour12 = stoch12>=94 ? options.topColor:stoch12>=90? (options.pColor1):stoch12 >= 80 ? (options.pColor2):stoch12 >= 70 ? (options.pColor3):stoch12 >= 60 ? (options.pColor4):stoch12 >= 50 ? (options.pColor5):stoch12 >= 40 ? (options.nColor5):stoch12 >= 30 ? (options.nColor4):stoch12 >= 20 ? (options.nColor3):stoch12 >= 10 ? (options.nColor2):stoch12 >= 5 ? (options.nColor1):options.bottomColor\nvar colour13 = stoch13>=94 ? options.topColor:stoch13>=90? (options.pColor1):stoch13 >= 80 ? (options.pColor2):stoch13 >= 70 ? (options.pColor3):stoch13 >= 60 ? (options.pColor4):stoch13 >= 50 ? (options.pColor5):stoch13 >= 40 ? (options.nColor5):stoch13 >= 30 ? (options.nColor4):stoch13 >= 20 ? (options.nColor3):stoch13 >= 10 ? (options.nColor2):stoch13 >= 5 ? (options.nColor1):options.bottomColor\nvar colour14 = stoch14>=94 ? options.topColor:stoch14>=90? (options.pColor1):stoch14 >= 80 ? (options.pColor2):stoch14 >= 70 ? (options.pColor3):stoch14 >= 60 ? (options.pColor4):stoch14 >= 50 ? (options.pColor5):stoch14 >= 40 ? (options.nColor5):stoch14 >= 30 ? (options.nColor4):stoch14 >= 20 ? (options.nColor3):stoch14 >= 10 ? (options.nColor2):stoch14 >= 5 ? (options.nColor1):options.bottomColor\nvar colour15 = stoch15>=94 ? options.topColor:stoch15>=90? (options.pColor1):stoch15 >= 80 ? (options.pColor2):stoch15 >= 70 ? (options.pColor3):stoch15 >= 60 ? (options.pColor4):stoch15 >= 50 ? (options.pColor5):stoch15 >= 40 ? (options.nColor5):stoch15 >= 30 ? (options.nColor4):stoch15 >= 20 ? (options.nColor3):stoch15 >= 10 ? (options.nColor2):stoch15 >= 5 ? (options.nColor1):options.bottomColor\nvar colour16 = stoch16>=94 ? options.topColor:stoch16>=90? (options.pColor1):stoch16 >= 80 ? (options.pColor2):stoch16 >= 70 ? (options.pColor3):stoch16 >= 60 ? (options.pColor4):stoch16 >= 50 ? (options.pColor5):stoch16 >= 40 ? (options.nColor5):stoch16 >= 30 ? (options.nColor4):stoch16 >= 20 ? (options.nColor3):stoch16 >= 10 ? (options.nColor2):stoch16 >= 5 ? (options.nColor1):options.bottomColor\nvar colour17 = stoch17>=94 ? options.topColor:stoch17>=90? (options.pColor1):stoch17 >= 80 ? (options.pColor2):stoch17 >= 70 ? (options.pColor3):stoch17 >= 60 ? (options.pColor4):stoch17 >= 50 ? (options.pColor5):stoch17 >= 40 ? (options.nColor5):stoch17 >= 30 ? (options.nColor4):stoch17 >= 20 ? (options.nColor3):stoch17 >= 10 ? (options.nColor2):stoch17 >= 5 ? (options.nColor1):options.bottomColor\nvar colour18 = stoch18>=94 ? options.topColor:stoch18>=90? (options.pColor1):stoch18 >= 80 ? (options.pColor2):stoch18 >= 70 ? (options.pColor3):stoch18 >= 60 ? (options.pColor4):stoch18 >= 50 ? (options.pColor5):stoch18 >= 40 ? (options.nColor5):stoch18 >= 30 ? (options.nColor4):stoch18 >= 20 ? (options.nColor3):stoch18 >= 10 ? (options.nColor2):stoch18 >= 5 ? (options.nColor1):options.bottomColor\nvar colour19 = stoch19>=94 ? options.topColor:stoch19>=90? (options.pColor1):stoch19 >= 80 ? (options.pColor2):stoch19 >= 70 ? (options.pColor3):stoch19 >= 60 ? (options.pColor4):stoch19 >= 50 ? (options.pColor5):stoch19 >= 40 ? (options.nColor5):stoch19 >= 30 ? (options.nColor4):stoch19 >= 20 ? (options.nColor3):stoch19 >= 10 ? (options.nColor2):stoch19 >= 5 ? (options.nColor1):options.bottomColor\nvar colour20 = stoch20>=94 ? options.topColor:stoch20>=90? (options.pColor1):stoch20 >= 80 ? (options.pColor2):stoch20 >= 70 ? (options.pColor3):stoch20 >= 60 ? (options.pColor4):stoch20 >= 50 ? (options.pColor5):stoch20 >= 40 ? (options.nColor5):stoch20 >= 30 ? (options.nColor4):stoch20 >= 20 ? (options.nColor3):stoch20 >= 10 ? (options.nColor2):stoch20 >= 5 ? (options.nColor1):options.bottomColor\nvar colour21 = stoch21>=94 ? options.topColor:stoch21>=90? (options.pColor1):stoch21 >= 80 ? (options.pColor2):stoch21 >= 70 ? (options.pColor3):stoch21 >= 60 ? (options.pColor4):stoch21 >= 50 ? (options.pColor5):stoch21 >= 40 ? (options.nColor5):stoch21 >= 30 ? (options.nColor4):stoch21 >= 20 ? (options.nColor3):stoch21 >= 10 ? (options.nColor2):stoch21 >= 5 ? (options.nColor1):options.bottomColor\nvar colour22 = stoch22>=94 ? options.topColor:stoch22>=90? (options.pColor1):stoch22 >= 80 ? (options.pColor2):stoch22 >= 70 ? (options.pColor3):stoch22 >= 60 ? (options.pColor4):stoch22 >= 50 ? (options.pColor5):stoch22 >= 40 ? (options.nColor5):stoch22 >= 30 ? (options.nColor4):stoch22 >= 20 ? (options.nColor3):stoch22 >= 10 ? (options.nColor2):stoch22 >= 5 ? (options.nColor1):options.bottomColor\nvar colour23 = stoch23>=94 ? options.topColor:stoch23>=90? (options.pColor1):stoch23 >= 80 ? (options.pColor2):stoch23 >= 70 ? (options.pColor3):stoch23 >= 60 ? (options.pColor4):stoch23 >= 50 ? (options.pColor5):stoch23 >= 40 ? (options.nColor5):stoch23 >= 30 ? (options.nColor4):stoch23 >= 20 ? (options.nColor3):stoch23 >= 10 ? (options.nColor2):stoch23 >= 5 ? (options.nColor1):options.bottomColor\nvar colour24 = stoch24>=94 ? options.topColor:stoch24>=90? (options.pColor1):stoch24 >= 80 ? (options.pColor2):stoch24 >= 70 ? (options.pColor3):stoch24 >= 60 ? (options.pColor4):stoch24 >= 50 ? (options.pColor5):stoch24 >= 40 ? (options.nColor5):stoch24 >= 30 ? (options.nColor4):stoch24 >= 20 ? (options.nColor3):stoch24 >= 10 ? (options.nColor2):stoch24 >= 5 ? (options.nColor1):options.bottomColor\nvar colour25 = stoch25>=94 ? options.topColor:stoch25>=90? (options.pColor1):stoch25 >= 80 ? (options.pColor2):stoch25 >= 70 ? (options.pColor3):stoch25 >= 60 ? (options.pColor4):stoch25 >= 50 ? (options.pColor5):stoch25 >= 40 ? (options.nColor5):stoch25 >= 30 ? (options.nColor4):stoch25 >= 20 ? (options.nColor3):stoch25 >= 10 ? (options.nColor2):stoch25 >= 5 ? (options.nColor1):options.bottomColor\nvar colour26 = stoch26>=94 ? options.topColor:stoch26>=90? (options.pColor1):stoch26 >= 80 ? (options.pColor2):stoch26 >= 70 ? (options.pColor3):stoch26 >= 60 ? (options.pColor4):stoch26 >= 50 ? (options.pColor5):stoch26 >= 40 ? (options.nColor5):stoch26 >= 30 ? (options.nColor4):stoch26 >= 20 ? (options.nColor3):stoch26 >= 10 ? (options.nColor2):stoch26 >= 5 ? (options.nColor1):options.bottomColor\nvar colour27 = stoch27>=94 ? options.topColor:stoch27>=90? (options.pColor1):stoch27 >= 80 ? (options.pColor2):stoch27 >= 70 ? (options.pColor3):stoch27 >= 60 ? (options.pColor4):stoch27 >= 50 ? (options.pColor5):stoch27 >= 40 ? (options.nColor5):stoch27 >= 30 ? (options.nColor4):stoch27 >= 20 ? (options.nColor3):stoch27 >= 10 ? (options.nColor2):stoch27 >= 5 ? (options.nColor1):options.bottomColor\nvar colour28 = stoch28>=94 ? options.topColor:stoch28>=90? (options.pColor1):stoch28 >= 80 ? (options.pColor2):stoch28 >= 70 ? (options.pColor3):stoch28 >= 60 ? (options.pColor4):stoch28 >= 50 ? (options.pColor5):stoch28 >= 40 ? (options.nColor5):stoch28 >= 30 ? (options.nColor4):stoch28 >= 20 ? (options.nColor3):stoch28 >= 10 ? (options.nColor2):stoch28 >= 5 ? (options.nColor1):options.bottomColor\n\nif (options.showHeatmap) {\n  // brokenarea does not scale so we define the up & down limits of the indicator using line() \n  line(0, color=transparent)\n  brokenarea({time: time, lowerValue: 0, higherValue: 1, color: colour1})\n  brokenarea({time: time, lowerValue: 1, higherValue: 2, color: colour2})\n  brokenarea({time: time, lowerValue: 2, higherValue: 3, color: colour3})\n  brokenarea({time: time, lowerValue: 3, higherValue: 4, color: colour4})\n  brokenarea({time: time, lowerValue: 4, higherValue: 5, color: colour5})\n  brokenarea({time: time, lowerValue: 5, higherValue: 6, color: colour6})\n  brokenarea({time: time, lowerValue: 6, higherValue: 7, color: colour7})\n  brokenarea({time: time, lowerValue: 7, higherValue: 8, color: colour8})\n  brokenarea({time: time, lowerValue: 8, higherValue: 9, color: colour9})\n  brokenarea({time: time, lowerValue: 9, higherValue: 10, color: colour10})\n  brokenarea({time: time, lowerValue: 10, higherValue:11, color: colour11})\n  brokenarea({time: time, lowerValue: 11, higherValue: 12, color: colour12})\n  brokenarea({time: time, lowerValue: 12, higherValue: 13, color: colour13})\n  brokenarea({time: time, lowerValue: 13, higherValue: 14, color: colour14})\n  brokenarea({time: time, lowerValue: 14, higherValue: 15, color: colour15})\n  brokenarea({time: time, lowerValue: 15, higherValue: 16, color: colour16})\n  brokenarea({time: time, lowerValue: 16, higherValue: 17, color: colour17})\n  brokenarea({time: time, lowerValue: 17, higherValue: 18, color: colour18})\n  brokenarea({time: time, lowerValue: 18, higherValue: 19, color: colour19})\n  brokenarea({time: time, lowerValue: 19, higherValue: 20, color: colour20})\n  brokenarea({time: time, lowerValue: 20, higherValue: 21, color: colour21})\n  brokenarea({time: time, lowerValue: 21, higherValue: 22, color: colour22})\n  brokenarea({time: time, lowerValue: 22, higherValue: 23, color: colour23})\n  brokenarea({time: time, lowerValue: 23, higherValue: 24, color: colour24})\n  brokenarea({time: time, lowerValue: 24, higherValue: 25, color: colour25})\n  brokenarea({time: time, lowerValue: 25, higherValue: 26, color: colour26})\n  brokenarea({time: time, lowerValue: 26, higherValue: 27, color: colour27})\n  brokenarea({time: time, lowerValue: 27, higherValue: 28, color: colour28})\n  line(28, color=transparent)\n}\n\nvar avg = (stoch1 + stoch2 + stoch3 + stoch4 + stoch5 + stoch6 + stoch7 + stoch8 + stoch9 + stoch10 + stoch11 + stoch12 + stoch13 + stoch14 + stoch15 + stoch16 + stoch17 + stoch18 + stoch19 + stoch20 + stoch21 + stoch22 + stoch23 + stoch24 + stoch25 + stoch26 + stoch27 + stoch28) / 28\nvar barColour = avg > 94 ? options.topColor:avg>=90 ? (options.pColor1):avg >= 80 ? (options.pColor2):avg >= 70 ? (options.pColor3):avg >= 60 ? (options.pColor4):avg >= 50 ? (options.pColor5):avg >= 40 ? (options.nColor5):avg >= 30 ? (options.nColor4):avg >= 20 ? (options.nColor3):avg >= 10 ? (options.nColor2):avg >= 5 ? (options.nColor1):options.bottomColor\n\n$price.color = barColour",
                "name": "SHM",
                "options": {
                  "priceScaleId": "shm",
                  "stochMultiplier": 1,
                  "pColor1": "rgb(207,0,0)",
                  "pColor2": "#f22b11",
                  "pColor3": "#f29811",
                  "pColor4": "#eef211",
                  "pColor5": "#3af211",
                  "nColor1": "#02269e",
                  "nColor2": "#0039f5",
                  "nColor3": "#1176f2",
                  "nColor4": "#11aff2",
                  "nColor5": "#11e7f2",
                  "showHeatmap": true,
                  "scaleMargins": {
                    "top": 0.84,
                    "bottom": 0
                  },
                  "emaLength": 1,
                  "bottomColor": "rgb(1,24,101)",
                  "topColor": "rgb(153,0,0)",
                  "visible": false
                },
                "description": "Stochastic Heat Map",
                "id": "shm",
                "createdAt": 1681663159403,
                "updatedAt": 1623024000000,
                "series": [
                  "shm",
                  "t2djix2e",
                  "rmondzow",
                  "vg1hraen",
                  "qr3yy8oj",
                  "fsnokjb2",
                  "yxk0n6a5",
                  "zencqyyz",
                  "acqbz0j8",
                  "05tdo7kr",
                  "75hs5uu6",
                  "oudan52c",
                  "spsnor32",
                  "56wg27ge",
                  "bvx59au1",
                  "khpmnhoj",
                  "tcytvdo1",
                  "ud504co1",
                  "126rsct6",
                  "1fky89dm",
                  "alinx4f4",
                  "d50g3jz5",
                  "qnpunqi5",
                  "eo9w4umg",
                  "ax76fylw",
                  "szfc0r4u",
                  "knju5o6c",
                  "my7hnypb",
                  "u3llkc2w",
                  "aarybwah"
                ],
                "displayName": "SHM"
              },
              "cld": {
                "script": "plotline(cum(lbuy-lsell))",
                "name": "CLD",
                "description": "Cumulative Liquidations Delta",
                "options": {
                  "priceScaleId": "ctd",
                  "priceFormat": {
                    "type": "volume"
                  },
                  "color": "rgb(255,235,59)",
                  "lineWidth": 1,
                  "scaleMargins": {
                    "top": 0.75,
                    "bottom": 0.17
                  },
                  "lastValueVisible": true,
                  "priceLineVisible": true,
                  "visible": false
                },
                "id": "cld",
                "createdAt": 1681663159403,
                "updatedAt": 1682820778543,
                "preview": {},
                "unsavedChanges": false,
                "series": [
                  "cld"
                ],
                "displayName": "CLD"
              },
              "relative-volume": {
                "script": "volume = vbuy + vsell\nvolumeAvg = ema(volume, options.volumeAvgPeriod)\nhighVolume = volume > volumeAvg*options.volumeAvgMult\nnotHighVolume = volume < volumeAvg*options.volumeAvgMult\n\nplothistogram({ time: time, value: volume, color: notHighVolume? options.neutralColor : vbuy > vsell ? options.upColor : options.downColor})\nplotline(18000000)",
                "name": "Relative Volume",
                "options": {
                  "priceScaleId": "volume",
                  "priceFormat": {
                    "type": "volume"
                  },
                  "upColor": "rgba(59,202,109,0.5)",
                  "downColor": "rgb(233,30,99)",
                  "visible": false,
                  "neutralColor": "rgba(135,135,135,0.23)",
                  "volumeAvgPeriod": 20,
                  "volumeAvgMult": 1.5
                },
                "id": "relative-volume",
                "priceScaleId": "right",
                "series": [
                  "relative-volume",
                  "cc85y59e"
                ],
                "displayName": "Relative Volume",
                "unsavedChanges": false,
                "createdAt": 1655044715638,
                "navigationState": {
                  "sections": [
                    "position",
                    "colors"
                  ],
                  "tab": "#options",
                  "optionsQuery": "",
                  "fontSize": 1
                },
                "updatedAt": 1689561913397,
                "uses": 5,
                "preview": {}
              },
              "big-order-delta": {
                "script": "//-------------BUY SIZE---------------\nbuySize = vbuy / cbuy\n\n//Bolliger bands around Buy Size\na_buy = sma(Math.pow(buySize, 2), options.length)\nb_buy = Math.pow(sum(buySize, options.length),2) / Math.pow(options.length, 2)\nstdev_buy = Math.sqrt(a_buy - b_buy)\n\nbasis_buy = sma(buySize, options.length)\ndev_buy = options.mult * stdev_buy\nupper_buy = basis_buy + dev_buy\nlower_buy = basis_buy - dev_buy\n\n\n//-----------------SELL SIZE------------------\nsellSize = vsell / csell\n\n//Bolliger bands around Sell Size\na_sell = sma(Math.pow(sellSize, 2), options.length)\nb_sell = Math.pow(sum(sellSize, options.length),2) / Math.pow(options.length, 2)\nstdev_sell = Math.sqrt(a_sell - b_sell)\n\n\nbasis_sell = sma(sellSize, options.length)\ndev_sell = options.mult * stdev_sell\nupper_sell = basis_sell + dev_sell\nlower_sell = basis_sell - dev_sell\n\n\n\n//---------------BIG ORDER CVD------------------\nbigOrderBuyVol = buySize > upper_buy ? vbuy: 0\nbigOrderSellVol = sellSize > upper_sell ? vsell: 0\n\nbigOrderDelta = bigOrderBuyVol - bigOrderSellVol\n\nhistogram({\n  time: time,\n  value: bigOrderDelta,\n  color: bigOrderBuyVol > bigOrderSellVol ? 'DeepSkyBlue' : 'Pink'\n})",
                "name": "Big Order Delta",
                "options": {
                  "priceScaleId": "big-order-delta",
                  "length": 14,
                  "mult": "",
                  "lastValueVisible": true,
                  "priceFormat": {
                    "type": "volume",
                    "minMove": "0.01",
                    "precision": 2
                  },
                  "scaleMargins": {
                    "top": 0.65,
                    "bottom": 0.25
                  },
                  "visible": false
                },
                "id": "big-order-delta",
                "priceScaleId": "right",
                "series": [
                  "big-order-delta"
                ],
                "displayName": "Big Order Delta",
                "unsavedChanges": false
              },
              "big-order-cvd": {
                "script": "//-------------BUY SIZE---------------\nbuySize = vbuy / cbuy\n\n\n//Bolliger bands around Buy Size\na_buy = sma(Math.pow(buySize, 2), options.length)\nb_buy = Math.pow(sum(buySize, options.length),2) / Math.pow(options.length, 2)\nstdev_buy = Math.sqrt(a_buy - b_buy)\n\nbasis_buy = sma(buySize, options.length)\ndev_buy = options.mult * stdev_buy\nupper_buy = basis_buy + dev_buy\nlower_buy = basis_buy - dev_buy\n\n\n//-----------------SELL SIZE------------------\nsellSize = vsell / csell\n\n\n//Bolliger bands around Sell Size\na_sell = sma(Math.pow(sellSize, 2), options.length)\nb_sell = Math.pow(sum(sellSize, options.length),2) / Math.pow(options.length, 2)\nstdev_sell = Math.sqrt(a_sell - b_sell)\n\n\nbasis_sell = sma(sellSize, options.length)\ndev_sell = options.mult * stdev_sell\nupper_sell = basis_sell + dev_sell\nlower_sell = basis_sell - dev_sell\n\n\n\n//---------------BIG ORDER CVD------------------\nbigOrderBuyVol = buySize > upper_buy ? vbuy: 0\nbigOrderSellVol = sellSize > upper_sell ? vsell: 0\n\nbigOrderDelta = bigOrderBuyVol - bigOrderSellVol\n\nbigOrderCVD = cum(bigOrderDelta)\n\nline(bigOrderCVD, title=BIG)",
                "name": "Big Order CVD",
                "options": {
                  "priceScaleId": "big-order-cvd",
                  "length": 50,
                  "mult": "",
                  "lastValueVisible": true,
                  "lineStyle": 0,
                  "priceFormat": {
                    "type": "volume",
                    "minMove": "0.01",
                    "precision": 2
                  },
                  "color": "rgb(255,255,96)",
                  "visible": true,
                  "scaleMargins": {
                    "top": 0.29,
                    "bottom": 0.46
                  }
                },
                "id": "big-order-cvd",
                "priceScaleId": "right",
                "series": [
                  "big-order-cvd"
                ],
                "displayName": "Big Order CVD",
                "unsavedChanges": false
              },
              "liquidity-poc": {
                "script": "/* eslint-disable */\r\n// <STARTUP SCRIPT> \r\nif (!pendingMarkers) {\r\n  // runs only once\r\n  markers = []\r\n  pendingMarkers = []\r\n  lastIndex = null\r\n  freeSlots = []\r\n  usedSlots = []\r\n  drawQueue = []\r\n  boundaries = {}\r\n  intervals = {}\r\n  groups = []\r\n  liquidityAtPrices = {}\r\n  resistances = []\r\n  supports = []\r\n  pendingRedraws = []\r\n  leverages = options.leverages.toString().split(',').sort((a, b) => b - a)\r\n  buyColor = options.buyColor.match(/\\(([\\d.]+),([\\d.]+),([\\d.]+),?([\\d.]+)?\\)$/).slice(1,5).map(a => +a)\r\n  sellColor = options.sellColor.match(/\\(([\\d.]+),([\\d.]+),([\\d.]+),?([\\d.]+)?\\)$/).slice(1,5).map(a => +a)\r\n  buyOpacity = buyColor.pop()\r\n  sellOpacity = sellColor.pop()\r\n  for (var i = 1; i < series.length; i++) {\r\n    if (series[i].seriesType() !== 'BrokenArea') {\r\n      continue\r\n    }\r\n\r\n    if (i > 0) {\r\n      freeSlots.push({\r\n        index: i,\r\n        redrawAt: 0\r\n      })\r\n    }\r\n\r\n    series[i].setExtensionsBoundaries(boundaries)\r\n  }\r\n}\r\n// </STARTUP SCRIPT> \r\n\r\n// <MARKERS.UTILS> \r\nif (pendingMarkers.length) {\r\n  markers = markers.concat(pendingMarkers)\r\n  if (series[0].setMarkers) {\r\n    series[0].setMarkers(markers)\r\n  }\r\n  pendingMarkers = []\r\n}\r\n// </MARKERS.UTILS>\r\n\r\n// process only on new candle\r\nif (bar.length === lastIndex) {\r\n  return\r\n}\r\n\r\nprice = avg_heikinashi(bar)\r\nclose = price.close\r\nline(price.close, color=\"transparent\") // ghost price for markers\r\n\r\nvar ohlc4 = (price.open + price.high + price.low + price.close) / 4\r\nvar buyVolume = vbuy\r\nvar sellVolume = vsell\r\nvar avgBuyVolume = sma(buyVolume, options.length)\r\nvar avgSellVolume = sma(sellVolume, options.length)\r\nvar buyStrength = (options.log ? Math.log(1 + buyVolume / avgBuyVolume * options.logScale) : buyVolume / avgBuyVolume)\r\nvar sellStrength = (options.log ? Math.log(1 + sellVolume / avgSellVolume * options.logScale) : sellVolume / avgSellVolume)\r\n\r\nvar src = price.high\r\nfor (let i = 0; i < leverages.length; i++) {\r\n  var levMedian = Math.ceil((src + src * -(100 / (leverages)[i] / 100)) / options.step) * options.step\r\n  \r\n  if (!liquidityAtPrices[levMedian]) {\r\n    var top = levMedian + options.step / 2\r\n    var bottom = levMedian - options.step / 2\r\n    liquidityAtPrices[levMedian] = {\r\n      strength: 0,\r\n      count: 0,\r\n      top: top,\r\n      bottom: bottom\r\n    }\r\n    supports.push(levMedian)\r\n    supports.sort((a, b) => b - a)\r\n  }\r\n  \r\n  liquidityAtPrices[levMedian].count++\r\n  liquidityAtPrices[levMedian].strength = liquidityAtPrices[levMedian].strength + buyStrength\r\n  const alpha = Math.max(options.minAlpha, Math.min(1, liquidityAtPrices[levMedian].strength * liquidityAtPrices[levMedian].count * options.opacity * (buyOpacity || 1)))\r\n  liquidityAtPrices[levMedian].color = 'rgba(' + buyColor.join(',') + ',' + alpha + ')'\r\n\r\n  if (liquidityAtPrices[levMedian].strength > options.threshold) {\r\n    \r\n    if (pendingRedraws.indexOf(levMedian) === -1) {\r\n      pendingRedraws.push(levMedian)\r\n    }\r\n  }\r\n}\r\n\r\nvar src = price.low\r\nfor (let i = 0; i < leverages.length; i++) {\r\n  var levMedian = Math.ceil((src + src * (100 / (leverages)[i] / 100)) / options.step) * options.step\r\n  \r\n  if (!liquidityAtPrices[levMedian]) {\r\n    var top = levMedian + options.step / 2\r\n    var bottom = levMedian - options.step / 2\r\n    liquidityAtPrices[levMedian] = {\r\n      strength: 0,\r\n      count: 0,\r\n      top: top,\r\n      bottom: bottom\r\n    }\r\n    resistances.push(levMedian)\r\n    resistances.sort((a, b) => a - b)\r\n  }\r\n\r\n  liquidityAtPrices[levMedian].count++\r\n  liquidityAtPrices[levMedian].strength = liquidityAtPrices[levMedian].strength + buyStrength\r\n  const alpha = Math.max(options.minAlpha, Math.min(1, liquidityAtPrices[levMedian].strength * liquidityAtPrices[levMedian].count * options.opacity * (sellOpacity || 1)))\r\n  liquidityAtPrices[levMedian].color = 'rgba(' + sellColor.join(',') + ',' + alpha + ')'\r\n  if (liquidityAtPrices[levMedian].strength > options.threshold) {\r\n    if (pendingRedraws.indexOf(levMedian) === -1) {\r\n      pendingRedraws.push(levMedian)\r\n    }\r\n  }\r\n}\r\n\r\nif (pendingRedraws.length) {\r\n  \r\n  var releaseImmediately = []\r\n  for (var i = 0; i < pendingRedraws.length; i++) {\r\n    var cell = liquidityAtPrices[pendingRedraws[i]]\r\n    var slot = freeSlots.find(slot => slot.redrawAt <= bar.length)\r\n    if (slot) {\r\n      var indexFree = freeSlots[freeSlots.indexOf(slot)].index\r\n      var usedIndex = freeSlots.splice(freeSlots.indexOf(slot), 1)[0].index\r\n      usedSlots.push(usedIndex)\r\n\r\n      if (cell.id) {\r\n        boundaries[cell.id] = bar.length - 1\r\n      }\r\n\r\n      cell.id = Math.random().toString()\r\n      renderer.indicators[indicatorId].series[usedIndex] ={\r\n        id: cell.id,\r\n        time: time,\r\n        lowerValue: cell.top,\r\n        higherValue: cell.bottom,\r\n        extendRight: true,\r\n        color: cell.color\r\n      }\r\n\r\n      pendingRedraws.splice(i--, 1)\r\n      releaseImmediately.push(usedIndex)\r\n    }\r\n  }\r\n  for (let i = 0; i < releaseImmediately.length; i++) {\r\n    var plotIndexToFree = usedSlots.splice(usedSlots.indexOf(releaseImmediately[i]), 1)[0]\r\n    \r\n    freeSlots.push({\r\n      index: plotIndexToFree,\r\n      redrawAt: bar.length\r\n    })\r\n  }\r\n}\r\n\r\nfor (let i = 0; i < supports.length; i++) {\r\n  if (\r\n   price.low <= supports[i]\r\n  ) {\r\n    boundaries[liquidityAtPrices[supports[i]].id] = bar.length\r\n    delete liquidityAtPrices[supports[i]]\r\n    supports.splice(i--, 1)\r\n  } else {\r\n    break;\r\n  }\r\n}\r\n\r\nfor (let i = 0; i < resistances.length; i++) {\r\n  if (\r\n   price.high >= resistances[i]\r\n  ) {\r\n    boundaries[liquidityAtPrices[resistances[i]].id] = bar.length\r\n    delete liquidityAtPrices[resistances[i]]\r\n    resistances.splice(i--, 1)\r\n  } else {\r\n    break;\r\n  }\r\n}\r\n\r\n// set reference to bar index : avoid process next tick\r\nlastIndex = bar.length\r\n\r\nif (renderer.indicators[indicatorId].series[1]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[1] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[2]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[2] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[3]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[3] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[4]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[4] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[5]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[5] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[6]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[6] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[7]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[7] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[8]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[8] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[9]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[9] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[10]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[10] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[11]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[11] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[12]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[12] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[13]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[13] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[14]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[14] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[15]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[15] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[16]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[16] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[17]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[17] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[18]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[18] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[19]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[19] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[20]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[20] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[21]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[21] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[22]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[22] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\n//line(avgvbuy * options.threshold, priceScaleId='overlay', scaleMargins={top: 0.7, bottom: 0.1}, title=\"refbuy\", color=white)\r\n//line(refVolBuy * options.threshold, priceScaleId='overlay', scaleMargins={top: 0.7, bottom: 0.1}, title=\"refsell\", color=lime)\r\n//line(vsell, priceScaleId='overlay', scaleMargins={top: 0.7, bottom: 0.1}, title=\"vsell\", color=white)\r\n//line(refVolSell, priceScaleId='overlay', scaleMargins={top: 0.7, bottom: 0.1}, title=\"refsell\", color=red)",
                "name": "Liquidity (poc)",
                "options": {
                  "priceScaleId": "right",
                  "pivotLength": 2,
                  "color": "rgb(129,199,132)",
                  "visible": true,
                  "src": "close",
                  "scaleMargins": {
                    "top": 0.08,
                    "bottom": 0.26
                  },
                  "showDown": true,
                  "showUp": true,
                  "debugDown": false,
                  "debugUp": false,
                  "drawCount": 2,
                  "enableInvalidation": true,
                  "enableTarget": true,
                  "extendBase": false,
                  "levels": "0,1,2,3,5,8,13,21,34,55,89",
                  "singleSide": true,
                  "targetLevelDown": 66,
                  "targetLevelUp": 66,
                  "minImpulse": 0,
                  "strokeWidth": 0,
                  "originWidth": 2,
                  "lineColor": "rgb(59,70,101)",
                  "originColor": "rgb(41,98,255)",
                  "debugColor": "rgba(255,255,255,0.71)",
                  "upLineColor": "rgb(255,235,59)",
                  "neverSameSide": true,
                  "strict": false,
                  "extremesOnly": true,
                  "delayNeckline": false,
                  "minSwings": 2,
                  "maxRetracement": -1,
                  "twoClosesRule": true,
                  "useHeikinAshi": true,
                  "useGaps": true,
                  "invalidateSwing": true,
                  "useTrailStop": false,
                  "levelsDown": "0,1, 2, 3, 5, 8, 13, 21, 34, 55,89",
                  "levelsUp": "0,1.0, 2, 3, 5, 8, 13, 21, 34, 55,89",
                  "fibMult": "0.486548,0.513452",
                  "waitForInvalidation": true,
                  "compositeOperation": "",
                  "leverages": "5,10,20",
                  "length": 5,
                  "opacity": 0.00001,
                  "fixedSize": "",
                  "threshold": 360,
                  "lastValueVisible": false,
                  "lineStyle": 0,
                  "lineType": 0,
                  "lineWidth": 1,
                  "priceLineStyle": 1,
                  "priceLineVisible": false,
                  "minimum": 0,
                  "volAvgLength": 5,
                  "atrLength": 14,
                  "drawAll": true,
                  "lengthAtr": 50,
                  "lengthMeanVol": 57,
                  "merge": true,
                  "strokeColor": "rgba(255,235,59,0.5)",
                  "sellColor": "rgba(41,98,255,0.01)",
                  "buyColor": "rgba(41,98,255,0.01)",
                  "showLabel": false,
                  "minRange": 0,
                  "precision": 36,
                  "lengthPivot": 6,
                  "density": 0.2,
                  "extendInfinite": false,
                  "extendLength": -1,
                  "showResistances": true,
                  "showSupports": true,
                  "thickness": 0.2,
                  "dualSrc": true,
                  "clearGroup": true,
                  "step": 25,
                  "log": true,
                  "useOhlc": false,
                  "inverseSource": null,
                  "useInverseSource": false,
                  "scaleLev": false,
                  "scaleFactor": 0.5,
                  "logScale": 1000000,
                  "minAlpha": 0.3
                },
                "id": "liquidity-poc",
                "priceScaleId": "right",
                "series": [
                  "liquidity-poc",
                  "8h42a0vr",
                  "x4zagew7",
                  "qce1kaq3",
                  "6o88ca3z",
                  "akebmqud",
                  "v2aby7ld",
                  "fkl44e27",
                  "xxvnzraa",
                  "g32cw8dr",
                  "a021nb29",
                  "dxwuifjk",
                  "q6xp6gvh",
                  "3pecy9z1",
                  "7lkbvdo4",
                  "r65ulf26",
                  "w9herbw1",
                  "dm8eg2k0",
                  "4fedthi9",
                  "obz2bcle",
                  "ya15u0mg",
                  "6g8xjx7d",
                  "quemew9r"
                ],
                "displayName": "Liquidity (poc)",
                "unsavedChanges": false
              }
            },
            "priceScales": {
              "right": {
                "scaleMargins": {
                  "top": 0.07,
                  "bottom": 0.69
                },
                "indicators": [
                  "Price"
                ],
                "priceFormat": {
                  "precision": 1,
                  "minMove": 0.1
                }
              },
              "cvd": {
                "scaleMargins": {
                  "top": 0.84,
                  "bottom": 0
                }
              },
              "cvd-perps": {
                "scaleMargins": {
                  "top": 0.84,
                  "bottom": 0
                }
              },
              "cvd-spot": {
                "scaleMargins": {
                  "top": 0.84,
                  "bottom": 0
                }
              },
              "cvd-spot2": {
                "scaleMargins": {
                  "top": 0.84,
                  "bottom": 0
                }
              },
              "volume_liquidations": {
                "scaleMargins": {
                  "top": 0.6,
                  "bottom": 0.15
                },
                "indicators": [
                  "Liquidations"
                ]
              },
              "volume": {
                "scaleMargins": {
                  "top": 0.93,
                  "bottom": 0
                },
                "indicators": [
                  "Volume Δ"
                ]
              },
              "cvd-btc-spot": {
                "scaleMargins": {
                  "top": 0.29,
                  "bottom": 0.47
                },
                "indicators": [
                  "CVD BTC Spot"
                ]
              },
              "cvd-btc-perp": {
                "scaleMargins": {
                  "top": 0.27,
                  "bottom": 0.46
                },
                "indicators": [
                  "CVD BTC Perp"
                ]
              },
              "perps-premium": {
                "scaleMargins": {
                  "top": 0.89,
                  "bottom": 0.02
                },
                "indicators": [
                  "Perps Premium"
                ]
              },
              "cvd-bitfinex-spot2": {
                "scaleMargins": {
                  "top": 0.68,
                  "bottom": 0.02
                },
                "indicators": [
                  "CVD Bitfinex Spot"
                ]
              },
              "cvd-binance-spot": {
                "scaleMargins": {
                  "top": 0.68,
                  "bottom": 0.02
                },
                "indicators": [
                  "CVD Binance Spot"
                ]
              },
              "cvd-coinbase": {
                "scaleMargins": {
                  "top": 0.68,
                  "bottom": 0.02
                },
                "indicators": [
                  "CVD Coinbase"
                ]
              },
              "cvd-ftx-spot": {
                "scaleMargins": {
                  "top": 0.68,
                  "bottom": 0
                },
                "indicators": [
                  "CVD FTX Spot"
                ]
              },
              "cvd-bitmex": {
                "scaleMargins": {
                  "top": 0.68,
                  "bottom": 0.02
                },
                "indicators": [
                  "CVD BitMex"
                ]
              },
              "cvd-ftx-perps": {
                "scaleMargins": {
                  "top": 0.68,
                  "bottom": 0
                },
                "indicators": [
                  "CVD FTX Perps"
                ]
              },
              "cvd-binance-perps": {
                "scaleMargins": {
                  "top": 0.68,
                  "bottom": 0.02
                },
                "indicators": [
                  "CVD Binance Perps"
                ]
              },
              "cvd-bybit-perps": {
                "scaleMargins": {
                  "top": 0.68,
                  "bottom": 0.02
                },
                "indicators": [
                  "CVD Bybit Perps"
                ]
              },
              "cvd-bitfinex-perps": {
                "scaleMargins": {
                  "top": 0.68,
                  "bottom": 0.02
                },
                "indicators": [
                  "CVD Bitfinex Perps"
                ]
              },
              "delta": {
                "scaleMargins": {
                  "top": 0.42,
                  "bottom": 0.5
                },
                "indicators": [
                  "Delta"
                ]
              },
              "delta-spot": {
                "scaleMargins": {
                  "top": 0.58,
                  "bottom": 0.36
                },
                "indicators": [
                  "Delta Spot"
                ],
                "mode": 0
              },
              "delta-perps": {
                "scaleMargins": {
                  "top": 0.68,
                  "bottom": 0.25
                },
                "indicators": [
                  "Delta Perps"
                ]
              },
              "cvd-btc-futures": {
                "scaleMargins": {
                  "top": 0.1,
                  "bottom": 0.2
                }
              },
              "cvd2": {
                "scaleMargins": {
                  "top": 0.1,
                  "bottom": 0.2
                }
              },
              "stablecoinmgbasis": {
                "scaleMargins": {
                  "top": 0.69,
                  "bottom": 0
                },
                "indicators": [
                  "StableCoinMgBasis"
                ]
              },
              "liquidations-longs": {
                "scaleMargins": {
                  "top": 0.39,
                  "bottom": 0.52
                },
                "indicators": [
                  "Liquidations - Longs"
                ]
              },
              "liquidations-shorts": {
                "scaleMargins": {
                  "top": 0,
                  "bottom": 0.91
                },
                "indicators": [
                  "Liquidations - Shorts"
                ]
              },
              "volume-sma": {
                "scaleMargins": {
                  "top": 0.1,
                  "bottom": 0.2
                }
              },
              "volume-stdev": {
                "scaleMargins": {
                  "top": 0.1,
                  "bottom": 0.2
                }
              },
              "ftx-cvd-spot": {
                "scaleMargins": {
                  "top": 0.28,
                  "bottom": 0.47
                },
                "indicators": [
                  "FTX CVD SPOT"
                ]
              },
              "price": {
                "scaleMargins": {
                  "top": 0.1,
                  "bottom": 0.2
                }
              },
              "left": {
                "scaleMargins": {
                  "top": 0.1,
                  "bottom": 0.2
                }
              },
              "shm": {
                "scaleMargins": {
                  "top": 0.84,
                  "bottom": 0
                }
              },
              "ctd": {
                "scaleMargins": {
                  "top": 0.75,
                  "bottom": 0.17
                }
              },
              "normal-order-delta2": {
                "scaleMargins": {
                  "top": 0.75,
                  "bottom": 0.15
                }
              },
              "big-order-delta": {
                "scaleMargins": {
                  "top": 0.65,
                  "bottom": 0.25
                }
              },
              "big-order-cvd": {
                "scaleMargins": {
                  "top": 0.29,
                  "bottom": 0.46
                },
                "indicators": [
                  "Big Order CVD"
                ]
              }
            },
            "layouting": false,
            "showIndicators": true,
            "timeframe": "1800",
            "refreshRate": 1000,
            "showAlerts": true,
            "showAlertsLabel": true,
            "showLegend": false,
            "fillGapsWithEmpty": true,
            "showHorizontalGridlines": false,
            "horizontalGridlinesColor": "rgba(255,255,255,.1)",
            "showVerticalGridlines": false,
            "verticalGridlinesColor": "rgba(255,255,255,.1)",
            "showWatermark": false,
            "watermarkColor": "rgba(255,255,255,.1)",
            "showBorder": true,
            "borderColor": null,
            "showLeftScale": false,
            "showRightScale": true,
            "showTimeScale": true,
            "hiddenMarkets": {
              "COINBASE:BTC-USDT": false,
              "COINBASE:BTC-USD": false,
              "BITMEX:XBTUSD": false,
              "BITMEX:XBTUSDT": false,
              "KUCOIN:XBTUSDCM": false,
              "KUCOIN:XBTUSDM": false,
              "MEXC:BTC_USD": false,
              "MEXC:BTC_USDT": false,
              "DERIBIT:BTC-PERPETUAL": false,
              "BYBIT:BTCUSD": false,
              "BITMEX:XBT_USDT": false,
              "BITGET:BTCUSDT_UMCBL": false,
              "BITGET:BTCUSD_DMCBL": false,
              "BITGET:BTCPERP_CMCBL": false,
              "BITFINEX:BTCUST": false,
              "BITFINEX:BTCUSD": false,
              "BITFINEX:BTCF0:USTF0": false,
              "BINANCE:btcusdt": true,
              "BINANCE_FUTURES:btcusdt": false,
              "BINANCE_FUTURES:btcusd_perp": false,
              "BYBIT:BTCUSDT": false,
              "KRAKEN:PF_XBTUSD": false,
              "KRAKEN:PI_XBTUSD": false,
              "KUCOIN:XBTUSDTM": false
            },
            "barSpacing": 0.2740740690128536,
            "navigationState": {
              "tab": "options",
              "optionsQuery": "",
              "fontSizePx": 15
            },
            "forceNormalizePrice": false
          },
          "markets": [
            "BINANCE_FUTURES:btcusd_perp",
            "BINANCE_FUTURES:btcusdt",
            "BINANCE:btcusdt",
            "BITFINEX:BTCF0:USTF0",
            "BITFINEX:BTCUSD",
            "BITFINEX:BTCUST",
            "BITGET:BTCPERP_CMCBL",
            "BITGET:BTCUSD_DMCBL",
            "BITGET:BTCUSDT_UMCBL",
            "BITMEX:XBT_USDT",
            "BITMEX:XBTUSD",
            "BITMEX:XBTUSDT",
            "BYBIT:BTCUSD",
            "BYBIT:BTCUSDT",
            "COINBASE:BTC-USD",
            "COINBASE:BTC-USDT",
            "DERIBIT:BTC-PERPETUAL",
            "KRAKEN:PF_XBTUSD",
            "KRAKEN:PI_XBTUSD",
            "KUCOIN:XBTUSDCM",
            "KUCOIN:XBTUSDM",
            "KUCOIN:XBTUSDTM",
            "MEXC:BTC_USD",
            "MEXC:BTC_USDT"
          ]
        }
      },
      "layout": [
        {
          "i": "chart",
          "type": "chart",
          "x": 3,
          "y": 7,
          "w": 12,
          "h": 10,
          "moved": false
        },
        {
          "i": "stats",
          "type": "stats",
          "y": 9,
          "x": 0,
          "w": 3,
          "h": 2,
          "moved": false
        },
        {
          "i": "trades",
          "type": "trades",
          "y": 0,
          "x": 21,
          "w": 3,
          "h": 9,
          "moved": false
        },
        {
          "i": "trades2",
          "type": "trades",
          "y": 0,
          "x": 0,
          "w": 3,
          "h": 7,
          "moved": false
        },
        {
          "i": "chart2",
          "type": "chart",
          "y": 17,
          "x": 0,
          "w": 7,
          "h": 7,
          "moved": false
        },
        {
          "i": "chart6",
          "type": "chart",
          "w": 7,
          "h": 7,
          "y": 17,
          "x": 14,
          "moved": false
        },
        {
          "i": "chart8",
          "type": "chart",
          "y": 0,
          "x": 15,
          "w": 6,
          "h": 17,
          "moved": false
        },
        {
          "i": "stats2",
          "type": "stats",
          "y": 7,
          "x": 0,
          "w": 3,
          "h": 2,
          "moved": false
        },
        {
          "i": "trades3",
          "type": "trades",
          "y": 11,
          "x": 0,
          "w": 3,
          "h": 6,
          "moved": false
        },
        {
          "i": "chart copy 1",
          "type": "chart",
          "w": 7,
          "h": 7,
          "y": 17,
          "x": 7,
          "moved": false
        },
        {
          "i": "trades copy 1",
          "type": "trades",
          "y": 15,
          "x": 21,
          "w": 3,
          "h": 4,
          "moved": false
        },
        {
          "i": "prices",
          "type": "prices",
          "y": 19,
          "x": 21,
          "w": 3,
          "h": 5,
          "moved": false
        },
        {
          "i": "prices copy 1",
          "type": "prices",
          "w": 3,
          "h": 6,
          "y": 9,
          "x": 21,
          "moved": false
        },
        {
          "i": "chart copy 2",
          "type": "chart",
          "w": 12,
          "h": 7,
          "y": 0,
          "x": 3,
          "moved": false
        }
      ]
    },
    "settings": {
      "_id": "settings",
      "preferQuoteCurrencySize": true,
      "aggregationLength": 1,
      "calculateSlippage": "bps",
      "wsProxyUrl": null,
      "disableAnimations": false,
      "autoHideHeaders": false,
      "autoHideNames": true,
      "theme": "dark",
      "backgroundColor": "rgb(25,25,25)",
      "textColor": "",
      "buyColor": "rgb(209,212,220)",
      "sellColor": "rgb(239, 67, 82)",
      "timezoneOffset": -10800000,
      "useAudio": false,
      "audioVolume": 0.37,
      "audioFilters": {
        "PingPongDelay": true,
        "Compressor": false,
        "Delay": false,
        "HighPassFilter": true,
        "LowPassFilter": false,
        "Chorus": false
      },
      "sections": [
        "settings-workspaces",
        "settings-trades",
        "timeframe-minutes",
        "settings-other",
        "indicator-left-colors",
        "indicator-left-other",
        "settings-colors",
        "settings-exchanges",
        "indicator-right-scale",
        "indicator-right-format",
        "indicator-right-colors",
        "indicator-right-default",
        "search-exchanges",
        "search-type",
        "search-quotes",
        "trades-display",
        "search-extras",
        "trades-liquidations",
        "settings-audio",
        "trades-audio",
        "alerts-BINANCE_FUTURES:btcbusd",
        "indicator-right-script"
      ],
      "searchTypes": {
        "historical": false,
        "spots": true,
        "perpetuals": true,
        "futures": false,
        "normalize": false,
        "mergeUsdt": false
      },
      "searchQuotes": {
        "USDT": true,
        "USD": true,
        "UST": false,
        "USDC": true,
        "BTC": false,
        "OTHERS": false,
        "BUSD": false,
        "USDD": false
      },
      "previousSearchSelections": [
        {
          "label": "BTCUSD+PFXBTUSD",
          "markets": [
            "BINANCE_FUTURES:btcusd_perp",
            "BINANCE_FUTURES:btcusdt",
            "BINANCE:btcusdt",
            "BITFINEX:BTCF0:USTF0",
            "BITFINEX:BTCUSD",
            "BITFINEX:BTCUST",
            "BITGET:BTCPERP_CMCBL",
            "BITGET:BTCUSD_DMCBL",
            "BITGET:BTCUSDT_UMCBL",
            "BITMEX:XBT_USDT",
            "BITMEX:XBTUSD",
            "BITMEX:XBTUSDT",
            "BYBIT:BTCUSD",
            "BYBIT:BTCUSDT",
            "COINBASE:BTC-USD",
            "COINBASE:BTC-USDT",
            "DERIBIT:BTC-PERPETUAL",
            "KRAKEN:PF_XBTUSD",
            "KRAKEN:PI_XBTUSD",
            "KUCOIN:XBTUSDCM",
            "KUCOIN:XBTUSDM",
            "KUCOIN:XBTUSDTM",
            "MEXC:BTC_USD",
            "MEXC:BTC_USDT"
          ],
          "count": 24
        },
        {
          "label": "BTCUSD",
          "markets": [
            "BINANCE_US:btcusd",
            "BINANCE_US:btcusdt",
            "BINANCE:btcusdt",
            "BITFINEX:BTCUSD",
            "BITFINEX:BTCUST",
            "BITGET:BTCUSDT",
            "BITSTAMP:btcusd",
            "BITSTAMP:btcusdt",
            "BYBIT:BTCUSDT-SPOT",
            "COINBASE:BTC-USD",
            "COINBASE:BTC-USDT",
            "KRAKEN:XBT/USD",
            "KRAKEN:XBT/USDT",
            "KUCOIN:BTC-USDT",
            "MEXC:BTCUSDT"
          ],
          "count": 15
        },
        {
          "label": "BTCUSD",
          "markets": [
            "BINANCE_FUTURES:btcusd_perp",
            "BINANCE_FUTURES:btcusdt",
            "BITFINEX:BTCF0:USTF0",
            "BITGET:BTCUSD_D1",
            "BITGET:BTCUSD_DMCBL",
            "BITGET:BTCUSDT_UMCBL",
            "BITMEX:XBTUSD",
            "BITMEX:XBTUSDT",
            "BYBIT:BTCUSD",
            "BYBIT:BTCUSDT",
            "DERIBIT:BTC-PERPETUAL",
            "KRAKEN:XBT/USD",
            "KRAKEN:XBT/USDT",
            "KUCOIN:XBTUSDM",
            "KUCOIN:XBTUSDTM",
            "MEXC:BTC_USD"
          ],
          "count": 16
        },
        {
          "label": "BTCUSD",
          "markets": [
            "BINANCE_FUTURES:btcusd_perp",
            "BINANCE_FUTURES:btcusdt",
            "BITFINEX:BTCF0:USTF0",
            "BITGET:BTCUSD_D1",
            "BITMEX:XBTUSD",
            "BITMEX:XBTUSDT",
            "BYBIT:BTCUSD",
            "BYBIT:BTCUSDT",
            "DERIBIT:BTC-PERPETUAL",
            "KRAKEN:XBT/USD",
            "KRAKEN:XBT/USDT",
            "KUCOIN:XBTUSDM",
            "KUCOIN:XBTUSDTM",
            "MEXC:BTC_USD"
          ],
          "count": 14
        },
        {
          "label": "BTCUSD",
          "markets": [
            "BINANCE_US:btcusd",
            "BINANCE_US:btcusdt",
            "BINANCE:btcusdt",
            "BITGET:BTCUSDT",
            "BITSTAMP:btcusd",
            "BITSTAMP:btcusdt",
            "BYBIT:BTCUSDT-SPOT",
            "COINBASE:BTC-USD",
            "COINBASE:BTC-USDT",
            "KRAKEN:XBT/USD",
            "KRAKEN:XBT/USDT",
            "KUCOIN:BTC-USDT"
          ],
          "count": 12
        },
        {
          "label": "BTCUSD",
          "markets": [
            "BINANCE_US:btcusd",
            "BINANCE_US:btcusdt",
            "BINANCE:btcusdt",
            "BITGET:BTCUSDT",
            "BITSTAMP:btcusd",
            "BITSTAMP:btcusdt",
            "BYBIT:BTCUSDT-SPOT",
            "COINBASE:BTC-USD",
            "COINBASE:BTC-USDT",
            "KRAKEN:XBT/USD",
            "KRAKEN:XBT/USDT"
          ],
          "count": 11
        },
        {
          "label": "BTCUSD",
          "markets": [
            "BINANCE_US:btcusd",
            "BINANCE_US:btcusdt",
            "BINANCE:btcusdt",
            "BITGET:BTCUSDT",
            "BITSTAMP:btcusd",
            "BITSTAMP:btcusdt",
            "BYBIT:BTCUSDT-SPOT",
            "COINBASE:BTC-USD",
            "COINBASE:BTC-USDT"
          ],
          "count": 9
        },
        {
          "label": "BTCUSD",
          "markets": [
            "BINANCE_US:btcusd",
            "BINANCE_US:btcusdt",
            "BINANCE:btcusdt",
            "BITGET:BTCUSDT",
            "BITSTAMP:btcusd",
            "BITSTAMP:btcusdt",
            "BYBIT:BTCUSDT-SPOT",
            "MEXC:BTCUSDT"
          ],
          "count": 8
        },
        {
          "label": "BTCUSD+WBTCUSD",
          "markets": [
            "BINANCE_US:btcusd",
            "BINANCE_US:btcusdc",
            "BINANCE_US:btcusdt",
            "BINANCE:btcusdc",
            "BINANCE:btcusdt",
            "BITGET:BTCUSDC",
            "BITGET:BTCUSDT",
            "BITGET:WBTCUSDT",
            "BITSTAMP:btcusd",
            "BITSTAMP:btcusdt",
            "BYBIT:BTCUSDC-SPOT",
            "BYBIT:BTCUSDT-SPOT",
            "BYBIT:WBTCUSDT-SPOT",
            "MEXC:BTCUSDT",
            "MEXC:WBTCUSDT"
          ],
          "count": 15
        },
        {
          "label": "BTCUSD+USDTBTC",
          "markets": [
            "BINANCE_FUTURES:btcusd_perp",
            "BINANCE_FUTURES:btcusdt",
            "BINANCE_US:btcusd",
            "BINANCE_US:btcusdt",
            "BINANCE:btcusdt",
            "BITFINEX:BTCF0:USTF0",
            "BITFINEX:BTCUSD",
            "BITFINEX:BTCUST",
            "BITGET:BTCUSD_DMCBL",
            "BITGET:BTCUSDT",
            "BITGET:BTCUSDT_UMCBL",
            "BITMEX:XBTUSD",
            "BITMEX:XBTUSDT",
            "BITSTAMP:btcusd",
            "BITSTAMP:btcusdt",
            "BYBIT:BTCUSD",
            "BYBIT:BTCUSDT",
            "BYBIT:BTCUSDT-SPOT",
            "COINBASE:BTC-USD",
            "COINBASE:BTC-USDT",
            "DERIBIT:BTC-PERPETUAL",
            "KRAKEN:XBT/USD",
            "KRAKEN:XBT/USDT",
            "KUCOIN:BTC-USDT",
            "MEXC:BTC_USD",
            "MEXC:BTC_USDT",
            "MEXC:BTCUSDT",
            "POLONIEX:USDT_BTC"
          ],
          "count": 28
        },
        {
          "label": "BTCUSD",
          "markets": [
            "BINANCE_FUTURES:btcusd_perp",
            "BINANCE_FUTURES:btcusdt",
            "BITFINEX:BTCF0:USTF0",
            "BITGET:BTCUSD_DMCBL",
            "BITGET:BTCUSDT_UMCBL",
            "BYBIT:BTCUSD",
            "BYBIT:BTCUSDT",
            "DERIBIT:BTC-PERPETUAL",
            "MEXC:BTC_USD",
            "MEXC:BTC_USDT"
          ],
          "count": 10
        },
        {
          "label": "COINBASE:BTCUSD",
          "markets": [
            "COINBASE:BTC-USD",
            "COINBASE:BTC-USDT"
          ],
          "count": 2
        },
        {
          "label": "BTCUSD",
          "markets": [
            "BINANCE_FUTURES:btcusd_perp",
            "BINANCE_FUTURES:btcusdt",
            "BITGET:BTCUSD_DMCBL",
            "BITGET:BTCUSDT_UMCBL",
            "BYBIT:BTCUSD",
            "BYBIT:BTCUSDT",
            "DERIBIT:BTC-PERPETUAL"
          ],
          "count": 7
        },
        {
          "label": "BTCUSD",
          "markets": [
            "BINANCE_US:btcusd",
            "BINANCE_US:btcusdt",
            "BINANCE:btcusdt"
          ],
          "count": 3
        },
        {
          "label": "BTCUSD",
          "markets": [
            "BINANCE_US:btcusd",
            "BINANCE_US:btcusdt",
            "BINANCE:btcusdt",
            "COINBASE:BTC-USD",
            "COINBASE:BTC-USDT"
          ],
          "count": 5
        },
        {
          "label": "BYBIT:BTCUSD",
          "markets": [
            "BYBIT:BTCUSD",
            "BYBIT:BTCUSDT"
          ],
          "count": 2
        },
        {
          "label": "BTCUSD+USDTBTC",
          "markets": [
            "BINANCE_FUTURES:btcusd_perp",
            "BINANCE_FUTURES:btcusdt",
            "BINANCE:btcusdt",
            "BITFINEX:BTCF0:USTF0",
            "BITFINEX:BTCUSD",
            "BITFINEX:BTCUST",
            "BITGET:BTCUSDT",
            "BITGET:BTCUSDT_UMCBL",
            "BITMEX:XBTUSD",
            "BITMEX:XBTUSDT",
            "BITSTAMP:btcusd",
            "BYBIT:BTCUSD",
            "BYBIT:BTCUSDT",
            "BYBIT:BTCUSDT-SPOT",
            "COINBASE:BTC-USD",
            "COINBASE:BTC-USDT",
            "DERIBIT:BTC-PERPETUAL",
            "KRAKEN:XBT/USD",
            "KRAKEN:XBT/USDT",
            "MEXC:BTCUSDT",
            "POLONIEX:USDT_BTC"
          ],
          "count": 21
        },
        {
          "label": "BTCUSD+USDTBTC",
          "markets": [
            "BINANCE_US:btcusd",
            "BINANCE_US:btcusdt",
            "BINANCE:btcusdt",
            "BITFINEX:BTCUSD",
            "BITGET:BTCUSDT",
            "BITSTAMP:btcusd",
            "BITSTAMP:btcusdt",
            "BYBIT:BTCUSDT-SPOT",
            "COINBASE:BTC-USD",
            "COINBASE:BTC-USDT",
            "KRAKEN:XBT/USD",
            "KRAKEN:XBT/USDT",
            "MEXC:BTCUSDT",
            "POLONIEX:USDT_BTC"
          ],
          "count": 14
        },
        {
          "label": "BTCUSD",
          "markets": [
            "BINANCE_FUTURES:btcusd_perp",
            "BINANCE_FUTURES:btcusdt",
            "BINANCE:btcusdt",
            "BITFINEX:BTCF0:USTF0",
            "BITFINEX:BTCUSD",
            "BITFINEX:BTCUST",
            "BITMEX:XBTUSD",
            "BITMEX:XBTUSDT",
            "BYBIT:BTCUSD",
            "BYBIT:BTCUSDT",
            "COINBASE:BTC-USD",
            "COINBASE:BTC-USDT",
            "DERIBIT:BTC-PERPETUAL"
          ],
          "count": 13
        },
        {
          "label": "FTX:BTC-PERP",
          "markets": [
            "FTX:BTC-PERP"
          ],
          "count": 0
        },
        {
          "label": "FTX:BTCUSD",
          "markets": [
            "FTX:BTC/USD",
            "FTX:BTC/USDT"
          ],
          "count": 2
        },
        {
          "label": "BTCUSDPERP+BTCUSD",
          "markets": [
            "BINANCE_FUTURES:btcusd_perp",
            "BINANCE_FUTURES:btcusdt",
            "BINANCE:btcusdt",
            "BITFINEX:BTCF0:USTF0",
            "BITFINEX:BTCUSD",
            "BITFINEX:BTCUST",
            "BITMEX:XBTUSD",
            "BITMEX:XBTUSDT",
            "BYBIT:BTCUSD",
            "BYBIT:BTCUSDT",
            "COINBASE:BTC-USD",
            "COINBASE:BTC-USDT",
            "DERIBIT:BTC-PERPETUAL",
            "FTX:BTC-PERP",
            "FTX:BTC/USD",
            "FTX:BTC/USDT"
          ],
          "count": 16
        }
      ],
      "searchExchanges": {
        "AGGR": true,
        "BINANCE": false,
        "BINANCE_FUTURES": false,
        "BINANCE_US": false,
        "BITFINEX": false,
        "BITGET": true,
        "BITMEX": true,
        "BITSTAMP": false,
        "BYBIT": false,
        "COINBASE": false,
        "DERIBIT": false,
        "DYDX": false,
        "HITBTC": true,
        "HUOBI": true,
        "KRAKEN": true,
        "KUCOIN": true,
        "MEXC": true,
        "OKEX": true,
        "PHEMEX": true,
        "POLONIEX": true,
        "UNISWAP": true,
        "GATEIO": false
      },
      "timeframes": [
        {
          "label": "1s",
          "value": "1"
        },
        {
          "label": "3s",
          "value": "3"
        },
        {
          "label": "5s",
          "value": "5"
        },
        {
          "label": "10s",
          "value": "10"
        },
        {
          "label": "15s",
          "value": "15"
        },
        {
          "label": "30s",
          "value": "30"
        },
        {
          "label": "1m",
          "value": "60"
        },
        {
          "label": "3m",
          "value": "180"
        },
        {
          "label": "5m",
          "value": "300"
        },
        {
          "label": "15m",
          "value": "900"
        },
        {
          "label": "21m",
          "value": "1260"
        },
        {
          "label": "30m",
          "value": "1800"
        },
        {
          "label": "1h",
          "value": "3600"
        },
        {
          "label": "2h",
          "value": "7200"
        },
        {
          "label": "4h",
          "value": "14400"
        },
        {
          "label": "6h",
          "value": "21600"
        },
        {
          "label": "8h",
          "value": "28800"
        },
        {
          "label": "12h",
          "value": "43200"
        },
        {
          "label": "1d",
          "value": "86400"
        },
        {
          "label": "21 ticks",
          "value": "21t"
        },
        {
          "label": "50 ticks",
          "value": "50t"
        },
        {
          "label": "89 ticks",
          "value": "89t"
        },
        {
          "label": "100 ticks",
          "value": "100t"
        },
        {
          "label": "200 ticks",
          "value": "200t"
        },
        {
          "label": "610 ticks",
          "value": "610t"
        },
        {
          "label": "1000 ticks",
          "value": "1000t"
        },
        {
          "label": "1597 ticks",
          "value": "1597t"
        }
      ],
      "favoriteTimeframes": {
        "30": "30s",
        "60": "1m",
        "180": "3m",
        "1800": "30m",
        "3600": "1h",
        "14400": "4h",
        "86400": "1d"
      },
      "normalizeWatermarks": true,
      "alerts": true,
      "alertsColor": "rgb(255,255,255)",
      "alertsLineStyle": 1,
      "alertsLineWidth": 2,
      "alertsClick": false,
      "alertSound": "ES_Whistle Human 1 - SFX Producer.mp3",
      "showThresholdsAsTable": false,
      "settings": [
        "other",
        "workspaces",
        "stats",
        "counters",
        "audio",
        "exchanges",
        "list",
        "chart"
      ]
    },
    "exchanges": {
      "AGGR": {
        "disabled": true
      },
      "BINANCE": {
        "disabled": false,
        "fetched": true
      },
      "BINANCE_FUTURES": {
        "disabled": false,
        "fetched": true
      },
      "BINANCE_US": {
        "disabled": true,
        "fetched": false
      },
      "BITFINEX": {
        "disabled": false,
        "fetched": true
      },
      "BITGET": {
        "disabled": false
      },
      "BITMEX": {
        "disabled": false,
        "fetched": true
      },
      "BITSTAMP": {
        "disabled": false,
        "fetched": true
      },
      "BYBIT": {
        "disabled": false,
        "fetched": true
      },
      "COINBASE": {
        "disabled": false,
        "fetched": true
      },
      "CRYPTOCOM": {
        "disabled": false
      },
      "DERIBIT": {
        "disabled": false,
        "fetched": true
      },
      "DYDX": {
        "disabled": true,
        "fetched": false
      },
      "GATEIO": {
        "disabled": true
      },
      "HITBTC": {
        "disabled": true,
        "fetched": false
      },
      "HUOBI": {
        "disabled": true,
        "fetched": false
      },
      "KRAKEN": {
        "disabled": false,
        "fetched": true
      },
      "KUCOIN": {
        "disabled": false
      },
      "MEXC": {
        "disabled": false
      },
      "OKEX": {
        "disabled": true,
        "fetched": false
      },
      "PHEMEX": {
        "disabled": true,
        "fetched": false
      },
      "POLONIEX": {
        "disabled": true,
        "fetched": true
      },
      "UNISWAP": {
        "disabled": true
      },
      "_id": "exchanges"
    },
    "chart": {
      "indicatorsErrors": {},
      "indicators": {
        "price": {
          "enabled": true,
          "name": "Price",
          "script": "plotcandlestick(avg_ohlc(bar))",
          "options": {
            "priceScaleId": "right",
            "priceFormat": {
              "auto": true,
              "precision": 1,
              "minMove": 0.1
            },
            "priceLineVisible": true,
            "lastValueVisible": true,
            "borderVisible": true,
            "upColor": "rgba(255,255,255,0.76)",
            "downColor": "rgb(242,54,69)",
            "borderUpColor": "rgba(255,255,255,0.69)",
            "borderDownColor": "rgba(242,54,69,0.73)",
            "wickUpColor": "rgba(255,255,255,0.7)",
            "wickDownColor": "rgba(242,54,69,0.72)",
            "visible": true,
            "scaleMargins": {
              "top": 0.07,
              "bottom": 0.69
            }
          },
          "id": "price",
          "createdAt": 1648450392186,
          "updatedAt": 1649247094510,
          "series": [
            "price"
          ],
          "unsavedChanges": true,
          "navigationState": {
            "sections": [
              "position",
              "colors"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          }
        },
        "cvd-btc-spot": {
          "script": "// removed Binance given persistent negative flow\n// BINANCE:btcusdt.vbuy+BINANCE:btcusdc.vbuy+\n//BINANCE:btcusdt.vsell+BINANCE:btcusdc.vsell+\n\nline(cum((BINANCE:btcusdt.vbuy+BINANCE:btcusdc.vbuy+BITFINEX:BTCUSD.vbuy+BITSTAMP:btcusd.vbuy+BITSTAMP:btcusdt.vbuy+BITSTAMP:btcusdc.vbuy+COINBASE:BTC-USDC.vbuy+COINBASE:BTC-USD.vbuy+COINBASE:BTC-USDT.vbuy+FTX:BTC/USD.vbuy+FTX:BTC/USDT.vbuy+HUOBI:btcusdt.vbuy+HUOBI:btcusdc.vbuy+KRAKEN:XBT/USDC.vbuy+KRAKEN:XBT/USDT.vbuy+KRAKEN:XBT/USD.vbuy+OKEX:BTC-USDT.vbuy+OKEX:BTC-USDC.vbuy+POLONIEX:USDT_BTC.vbuy+POLONIEX:USDC_BTC.vbuy)-(BINANCE:btcusdt.vsell+BINANCE:btcusdc.vsell+BITFINEX:BTCUSD.vsell+BITSTAMP:btcusd.vsell+BITSTAMP:btcusdt.vsell+BITSTAMP:btcusdc.vsell+COINBASE:BTC-USDC.vsell+COINBASE:BTC-USD.vsell+COINBASE:BTC-USDT.vsell+FTX:BTC/USD.vsell+FTX:BTC/USDT.vsell+HUOBI:btcusdt.vsell+HUOBI:btcusdc.vsell+KRAKEN:XBT/USDC.vsell+KRAKEN:XBT/USDT.vsell+KRAKEN:XBT/USD.vsell+OKEX:BTC-USDT.vsell+OKEX:BTC-USDC.vsell+POLONIEX:USDT_BTC.vsell+POLONIEX:USDC_BTC.vsell)), title=SPOT)",
          "id": "cvd-btc-spot",
          "name": "CVD BTC Spot",
          "priceScaleId": "cvd-btc-spot",
          "options": {
            "priceScaleId": "cvd-btc-spot",
            "color": "rgb(209,212,220)",
            "lineStyle": 1,
            "lineWidth": 1,
            "visible": false
          },
          "series": [
            "cvd-btc-spot"
          ],
          "displayName": "CVD BTC Spot",
          "unsavedChanges": false,
          "createdAt": 1649233314184,
          "navigationState": {
            "sections": [
              "position",
              "format",
              "defaultOptions",
              "colors"
            ],
            "tab": "#options",
            "optionsQuery": "",
            "fontSize": 1
          },
          "updatedAt": 1650372212170
        },
        "cvd-btc-perp": {
          "script": "line(cum((BINANCE_FUTURES:btcusdt.vbuy+BINANCE_FUTURES:btcusd_perp.vbuy+BITFINEX:BTCF0:USTF0.vbuy+BITMEX:XBTUSD.vbuy+BYBIT:BTCUSD.vbuy+BYBIT:BTCUSDT.vbuy+DERIBIT:BTC-PERPETUAL.vbuy+FTX:BTC-PERP.vbuy+HUOBI:BTC-USD.vbuy+KRAKEN:PI_XBTUSD.vbuy+OKEX:BTC-USDT-SWAP.vbuy+OKEX:BTC-USD-SWAP.vbuy)- (BINANCE_FUTURES:btcusdt.vsell+BINANCE_FUTURES:btcusd_perp.vsell+BITFINEX:BTCF0:USTF0.vsell+BITMEX:XBTUSD.vsell+BYBIT:BTCUSD.vsell+BYBIT:BTCUSDT.vsell+DERIBIT:BTC-PERPETUAL.vsell+FTX:BTC-PERP.vsell+HUOBI:BTC-USD.vsell+KRAKEN:PI_XBTUSD.vsell+OKEX:BTC-USDT-SWAP.vsell+OKEX:BTC-USD-SWAP.vsell)), title=PERP)",
          "id": "cvd-btc-perp",
          "name": "CVD BTC Perp",
          "priceScaleId": "cvd-btc-perp",
          "options": {
            "priceScaleId": "cvd-btc-perp",
            "color": "rgb(255,241,118)",
            "lineStyle": 1,
            "lineWidth": 1,
            "visible": false,
            "scaleMargins": {
              "top": 0.27,
              "bottom": 0.46
            }
          },
          "series": [
            "cvd-btc-perp"
          ],
          "displayName": "CVD BTC Perp",
          "unsavedChanges": false,
          "createdAt": 1649233375756,
          "navigationState": {
            "sections": [
              "position",
              "format",
              "defaultOptions",
              "colors"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          },
          "updatedAt": 1649408437745
        },
        "delta-spot": {
          "script": "_vbuy = (BINANCE:btcusdt.vbuy+BINANCE:btcusdc.vbuy+BITFINEX:BTCUSD.vbuy+BITSTAMP:btcusd.vbuy+BITSTAMP:btcusdt.vbuy+BITSTAMP:btcusdc.vbuy+COINBASE:BTC-USDC.vbuy+COINBASE:BTC-USD.vbuy+COINBASE:BTC-USDT.vbuy+FTX:BTC/USD.vbuy+FTX:BTC/USDT.vbuy+HUOBI:btcusdt.vbuy+HUOBI:btcusdc.vbuy+KRAKEN:XBT/USDC.vbuy+KRAKEN:XBT/USDT.vbuy+KRAKEN:XBT/USD.vbuy+OKEX:BTC-USDT.vbuy+OKEX:BTC-USDC.vbuy+POLONIEX:USDT_BTC.vbuy+POLONIEX:USDC_BTC.vbuy)\n\n_vsell = (BINANCE:btcusdt.vsell+BINANCE:btcusdc.vsell+BITFINEX:BTCUSD.vsell+BITSTAMP:btcusd.vsell+BITSTAMP:btcusdt.vsell+BITSTAMP:btcusdc.vsell+COINBASE:BTC-USDC.vsell+COINBASE:BTC-USD.vsell+COINBASE:BTC-USDT.vsell+FTX:BTC/USD.vsell+FTX:BTC/USDT.vsell+HUOBI:btcusdt.vsell+HUOBI:btcusdc.vsell+KRAKEN:XBT/USDC.vsell+KRAKEN:XBT/USDT.vsell+KRAKEN:XBT/USD.vsell+OKEX:BTC-USDT.vsell+OKEX:BTC-USDC.vsell+POLONIEX:USDT_BTC.vsell+POLONIEX:USDC_BTC.vsell)\n\nvolume = _vbuy+_vsell\na = sma(Math.pow(volume,2),options.length)\nb = Math.pow(sum(volume,options.length),2)/Math.pow(options.length,2)\nstdev = Math.sqrt(a - b)\nbasis = sma(volume*1.5, 21)\ndev = 1 * stdev\ntreshold = basis\n\ndelta = _vbuy - _vsell\n\nplothistogram({ time: time, value: (delta), color: delta > 0 ? ( volume > treshold ? options.upColorHighVol : options.upColorLowVol) : ( volume > treshold ? options.downColorHighVol : options.downColorLowVol)}, title=\"Delta Spot\")",
          "id": "delta-spot",
          "name": "Delta Spot",
          "priceScaleId": "delta-spot",
          "options": {
            "priceScaleId": "delta-spot",
            "upColor": "rgb(0,150,136)",
            "downColor": "rgb(236,64,122)",
            "visible": false,
            "upColorLowVol": "rgb(149,152,161)",
            "downColorLowVol": "rgb(126,44,51)",
            "upColorHighVol": "rgb(255,255,255)",
            "downColorHighVol": "rgb(242,54,69)",
            "length": 7
          },
          "series": [
            "delta-spot"
          ],
          "displayName": "Delta Spot",
          "unsavedChanges": false,
          "createdAt": 1649243605267,
          "navigationState": {
            "sections": [
              "position",
              "colors",
              "defaultOptions",
              "scriptOptions"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          },
          "updatedAt": 1657176243836
        },
        "delta-perps": {
          "script": "_vbuy = (BINANCE_FUTURES:btcusdt.vbuy+BINANCE_FUTURES:btcusd_perp.vbuy+BITFINEX:BTCF0:USTF0.vbuy+BITMEX:XBTUSD.vbuy+BYBIT:BTCUSD.vbuy+BYBIT:BTCUSDT.vbuy+DERIBIT:BTC-PERPETUAL.vbuy+FTX:BTC-PERP.vbuy+HUOBI:BTC-USD.vbuy+KRAKEN:PI_XBTUSD.vbuy+OKEX:BTC-USDT-SWAP.vbuy+OKEX:BTC-USD-SWAP.vbuy)\n\n_vsell = (BINANCE_FUTURES:btcusdt.vsell+BINANCE_FUTURES:btcusd_perp.vsell+BITFINEX:BTCF0:USTF0.vsell+BITMEX:XBTUSD.vsell+BYBIT:BTCUSD.vsell+BYBIT:BTCUSDT.vsell+DERIBIT:BTC-PERPETUAL.vsell+FTX:BTC-PERP.vsell+HUOBI:BTC-USD.vsell+KRAKEN:PI_XBTUSD.vsell+OKEX:BTC-USDT-SWAP.vsell+OKEX:BTC-USD-SWAP.vsell)\n\nvolume = _vbuy+_vsell\na = sma(Math.pow(volume,2),options.length)\nb = Math.pow(sum(volume,options.length),2)/Math.pow(options.length,2)\nstdev = Math.sqrt(a - b)\nbasis = sma(volume*1.5, 21)\ndev = 1 * stdev\ntreshold = basis\n\ndelta = _vbuy - _vsell\n\nplothistogram({ time: time, value: (delta), color: delta > 0 ? ( volume > treshold ? options.upColorHighVol : options.upColorLowVol) : ( volume > treshold ? options.downColorHighVol : options.downColorLowVol)}, title=\"Delta Perps\")",
          "id": "delta-perps",
          "name": "Delta Perps",
          "priceScaleId": "delta-perps",
          "options": {
            "priceScaleId": "delta-perps",
            "upColor": "rgb(100,181,246)",
            "downColor": "rgb(239,83,80)",
            "visible": false,
            "upColorHighVol": "rgb(254,254,254)",
            "upColorLowVol": "rgb(149,152,161)",
            "downColorHighVol": "rgb(126,44,51)",
            "downColorLowVol": "rgb(242,54,69)",
            "length": 7,
            "lastValueVisible": false,
            "priceLineVisible": false
          },
          "series": [
            "delta-perps"
          ],
          "displayName": "Delta Perps",
          "unsavedChanges": false,
          "createdAt": 1649243704762,
          "navigationState": {
            "sections": [
              "position",
              "colors",
              "scriptOptions",
              "format",
              "defaultOptions"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          },
          "updatedAt": 1657176280517
        },
        "liquidations1": {
          "script": "plothistogram(lbuy, color=options.upColor)\nplothistogram(-lsell, color=options.downColor)\nplotline(800000)\nplotline(-800000)\nplotline(4000000)\nplotline(-4000000)",
          "name": "Liquidations",
          "options": {
            "priceScaleId": "volume_liquidations",
            "priceFormat": {
              "type": "volume"
            },
            "upColor": "rgb(209,212,220)",
            "downColor": "rgb(218,18,34)",
            "scaleMargins": {
              "top": 0.6,
              "bottom": 0.15
            },
            "color": "rgb(255,255,255)",
            "lineWidth": 1
          },
          "id": "liquidations1",
          "priceScaleId": "right",
          "series": [
            "liquidations1",
            "6vptvp7n",
            "mrorefki",
            "v4gabvi9",
            "ed7f9qs9",
            "qvog43cy"
          ],
          "displayName": "Liquidations",
          "unsavedChanges": false,
          "preview": {},
          "createdAt": 1681846002679,
          "updatedAt": 1681846178510
        },
        "volume1": {
          "script": "plothistogram({ time: time, value: Math.abs(vbuy-vsell), color: vbuy - vsell > 0 ? options.upColor : options.downColor})\nplotline(65000000)",
          "name": "Volume Δ",
          "options": {
            "priceScaleId": "volume",
            "priceFormat": {
              "type": "volume",
              "minMove": "0.01",
              "precision": 2
            },
            "upColor": "rgb(231,231,231)",
            "downColor": "#EB1E2F",
            "priceLineVisible": false,
            "lastValueVisible": false,
            "visible": true,
            "scaleMargins": {
              "top": 0.88,
              "bottom": 0
            }
          },
          "id": "volume1",
          "priceScaleId": "right",
          "series": [
            "volume1",
            "60dc4lbu"
          ],
          "displayName": "Volume Δ",
          "unsavedChanges": false
        },
        "shm": {
          "script": "// © Violent\n// https://www.tradingview.com/script/7PRbCBjk-Stochastic-Heat-Map/\n\nvar stoch1 = ema(stoch($price.close, $price.high, $price.low, 1 * options.stochMultiplier), 1 + options.emaLength)\nvar stoch2 = ema(stoch($price.close, $price.high, $price.low, 2 * options.stochMultiplier), 2 + options.emaLength)\nvar stoch3 = ema(stoch($price.close, $price.high, $price.low, 3 * options.stochMultiplier), 3 + options.emaLength)\nvar stoch4 = ema(stoch($price.close, $price.high, $price.low, 4 * options.stochMultiplier), 4 + options.emaLength)\nvar stoch5 = ema(stoch($price.close, $price.high, $price.low, 5 * options.stochMultiplier), 5 + options.emaLength)\nvar stoch6 = ema(stoch($price.close, $price.high, $price.low, 6 * options.stochMultiplier), 6 + options.emaLength)\nvar stoch7 = ema(stoch($price.close, $price.high, $price.low, 7 * options.stochMultiplier), 7 + options.emaLength)\nvar stoch8 = ema(stoch($price.close, $price.high, $price.low, 8 * options.stochMultiplier), 8 + options.emaLength)\nvar stoch9 = ema(stoch($price.close, $price.high, $price.low, 9 * options.stochMultiplier), 9 + options.emaLength)\nvar stoch10 = ema(stoch($price.close, $price.high, $price.low, 10 * options.stochMultiplier), 10 + options.emaLength)\nvar stoch11 = ema(stoch($price.close, $price.high, $price.low, 15 * options.stochMultiplier), 11 + options.emaLength)\nvar stoch12 = ema(stoch($price.close, $price.high, $price.low, 20 * options.stochMultiplier), 12 + options.emaLength)\nvar stoch13 = ema(stoch($price.close, $price.high, $price.low, 25 * options.stochMultiplier), 13 + options.emaLength)\nvar stoch14 = ema(stoch($price.close, $price.high, $price.low, 30 * options.stochMultiplier), 14 + options.emaLength)\nvar stoch15 = ema(stoch($price.close, $price.high, $price.low, 35 * options.stochMultiplier), 15 + options.emaLength)\nvar stoch16 = ema(stoch($price.close, $price.high, $price.low, 40 * options.stochMultiplier), 16 + options.emaLength)\nvar stoch17 = ema(stoch($price.close, $price.high, $price.low, 45 * options.stochMultiplier), 17 + options.emaLength)\nvar stoch18 = ema(stoch($price.close, $price.high, $price.low, 50 * options.stochMultiplier), 18 + options.emaLength)\nvar stoch19 = ema(stoch($price.close, $price.high, $price.low, 55 * options.stochMultiplier), 19 + options.emaLength)\nvar stoch20 = ema(stoch($price.close, $price.high, $price.low, 60 * options.stochMultiplier), 20 + options.emaLength)\nvar stoch21 = ema(stoch($price.close, $price.high, $price.low, 70 * options.stochMultiplier), 21 + options.emaLength)\nvar stoch22 = ema(stoch($price.close, $price.high, $price.low, 80 * options.stochMultiplier), 22 + options.emaLength)\nvar stoch23 = ema(stoch($price.close, $price.high, $price.low, 90 * options.stochMultiplier), 23 + options.emaLength)\nvar stoch24 = ema(stoch($price.close, $price.high, $price.low, 100 * options.stochMultiplier), 24 + options.emaLength)\nvar stoch25 = ema(stoch($price.close, $price.high, $price.low, 110 * options.stochMultiplier), 25 + options.emaLength)\nvar stoch26 = ema(stoch($price.close, $price.high, $price.low, 120 * options.stochMultiplier), 26 + options.emaLength)\nvar stoch27 = ema(stoch($price.close, $price.high, $price.low, 140 * options.stochMultiplier), 27 + options.emaLength)\nvar stoch28 = ema(stoch($price.close, $price.high, $price.low, 160 * options.stochMultiplier), 28 + options.emaLength)\n\nvar colour1 =  stoch1>=94 ? options.topColor:stoch1>=90? (options.pColor1):stoch1 >= 80 ? (options.pColor2):stoch1 >= 70 ? (options.pColor3):stoch1 >= 10 ? (options.pColor4):stoch1 >= 50 ? (options.pColor5):stoch1 >= 40 ? (options.nColor5):stoch1 >= 30 ? (options.nColor4):stoch1 >= 20 ? (options.nColor3):stoch1 >= 10 ? (options.nColor2):stoch1 >= 5 ? (options.nColor1):options.bottomColor\nvar colour2 =  stoch2>=94 ? options.topColor:stoch2>=90? (options.pColor1):stoch2 >= 80 ? (options.pColor2):stoch2 >= 70 ? (options.pColor3):stoch2 >= 20 ? (options.pColor4):stoch2 >= 50 ? (options.pColor5):stoch2 >= 40 ? (options.nColor5):stoch2 >= 30 ? (options.nColor4):stoch2 >= 20 ? (options.nColor3):stoch2 >= 10 ? (options.nColor2):stoch2 >= 5 ? (options.nColor1):options.bottomColor\nvar colour3 =  stoch3>=94 ? options.topColor:stoch3>=90? (options.pColor1):stoch3 >= 80 ? (options.pColor2):stoch3 >= 70 ? (options.pColor3):stoch3 >= 30 ? (options.pColor4):stoch3 >= 50 ? (options.pColor5):stoch3 >= 40 ? (options.nColor5):stoch3 >= 30 ? (options.nColor4):stoch3 >= 20 ? (options.nColor3):stoch3 >= 10 ? (options.nColor2):stoch3 >= 5 ? (options.nColor1):options.bottomColor\nvar colour4 =  stoch4>=94 ? options.topColor:stoch4>=90? (options.pColor1):stoch4 >= 80 ? (options.pColor2):stoch4 >= 70 ? (options.pColor3):stoch4 >= 40 ? (options.pColor4):stoch4 >= 50 ? (options.pColor5):stoch4 >= 40 ? (options.nColor5):stoch4 >= 30 ? (options.nColor4):stoch4 >= 20 ? (options.nColor3):stoch4 >= 10 ? (options.nColor2):stoch4 >= 5 ? (options.nColor1):options.bottomColor\nvar colour5 =  stoch5>=94 ? options.topColor:stoch5>=90? (options.pColor1):stoch5 >= 80 ? (options.pColor2):stoch5 >= 70 ? (options.pColor3):stoch5 >= 50 ? (options.pColor4):stoch5 >= 50 ? (options.pColor5):stoch5 >= 40 ? (options.nColor5):stoch5 >= 30 ? (options.nColor4):stoch5 >= 20 ? (options.nColor3):stoch5 >= 10 ? (options.nColor2):stoch5 >= 5 ? (options.nColor1):options.bottomColor\nvar colour6 =  stoch6>=94 ? options.topColor:stoch6>=90? (options.pColor1):stoch6 >= 80 ? (options.pColor2):stoch6 >= 70 ? (options.pColor3):stoch6 >= 60 ? (options.pColor4):stoch6 >= 50 ? (options.pColor5):stoch6 >= 40 ? (options.nColor5):stoch6 >= 30 ? (options.nColor4):stoch6 >= 20 ? (options.nColor3):stoch6 >= 10 ? (options.nColor2):stoch6 >= 5 ? (options.nColor1):options.bottomColor\nvar colour7 =  stoch7>=94 ? options.topColor:stoch7>=90? (options.pColor1):stoch7 >= 80 ? (options.pColor2):stoch7 >= 70 ? (options.pColor3):stoch7 >= 60 ? (options.pColor4):stoch7 >= 50 ? (options.pColor5):stoch7 >= 40 ? (options.nColor5):stoch7 >= 30 ? (options.nColor4):stoch7 >= 20 ? (options.nColor3):stoch7 >= 10 ? (options.nColor2):stoch7 >= 5 ? (options.nColor1):options.bottomColor\nvar colour8 =  stoch8>=94 ? options.topColor:stoch8>=90? (options.pColor1):stoch8 >= 80 ? (options.pColor2):stoch8 >= 70 ? (options.pColor3):stoch8 >= 60 ? (options.pColor4):stoch8 >= 50 ? (options.pColor5):stoch8 >= 40 ? (options.nColor5):stoch8 >= 30 ? (options.nColor4):stoch8 >= 20 ? (options.nColor3):stoch8 >= 10 ? (options.nColor2):stoch8 >= 5 ? (options.nColor1):options.bottomColor\nvar colour9 =  stoch9>=94 ? options.topColor:stoch9>=90? (options.pColor1):stoch9 >= 80 ? (options.pColor2):stoch9 >= 70 ? (options.pColor3):stoch9 >= 60 ? (options.pColor4):stoch9 >= 50 ? (options.pColor5):stoch9 >= 40 ? (options.nColor5):stoch9 >= 30 ? (options.nColor4):stoch9 >= 20 ? (options.nColor3):stoch9 >= 10 ? (options.nColor2):stoch9 >= 5 ? (options.nColor1):options.bottomColor\nvar colour10 = stoch10>=94 ? options.topColor:stoch10>=90? (options.pColor1):stoch10 >= 80 ? (options.pColor2):stoch10 >= 70 ? (options.pColor3):stoch10 >= 60 ? (options.pColor4):stoch10 >= 50 ? (options.pColor5):stoch10 >= 40 ? (options.nColor5):stoch10 >= 30 ? (options.nColor4):stoch10 >= 20 ? (options.nColor3):stoch10 >= 10 ? (options.nColor2):stoch10 >= 5 ? (options.nColor1):options.bottomColor\nvar colour11 = stoch11>=94 ? options.topColor:stoch11>=90? (options.pColor1):stoch11 >= 80 ? (options.pColor2):stoch11 >= 70 ? (options.pColor3):stoch11 >= 60 ? (options.pColor4):stoch11 >= 50 ? (options.pColor5):stoch11 >= 40 ? (options.nColor5):stoch11 >= 30 ? (options.nColor4):stoch11 >= 20 ? (options.nColor3):stoch11 >= 10 ? (options.nColor2):stoch11 >= 5 ? (options.nColor1):options.bottomColor\nvar colour12 = stoch12>=94 ? options.topColor:stoch12>=90? (options.pColor1):stoch12 >= 80 ? (options.pColor2):stoch12 >= 70 ? (options.pColor3):stoch12 >= 60 ? (options.pColor4):stoch12 >= 50 ? (options.pColor5):stoch12 >= 40 ? (options.nColor5):stoch12 >= 30 ? (options.nColor4):stoch12 >= 20 ? (options.nColor3):stoch12 >= 10 ? (options.nColor2):stoch12 >= 5 ? (options.nColor1):options.bottomColor\nvar colour13 = stoch13>=94 ? options.topColor:stoch13>=90? (options.pColor1):stoch13 >= 80 ? (options.pColor2):stoch13 >= 70 ? (options.pColor3):stoch13 >= 60 ? (options.pColor4):stoch13 >= 50 ? (options.pColor5):stoch13 >= 40 ? (options.nColor5):stoch13 >= 30 ? (options.nColor4):stoch13 >= 20 ? (options.nColor3):stoch13 >= 10 ? (options.nColor2):stoch13 >= 5 ? (options.nColor1):options.bottomColor\nvar colour14 = stoch14>=94 ? options.topColor:stoch14>=90? (options.pColor1):stoch14 >= 80 ? (options.pColor2):stoch14 >= 70 ? (options.pColor3):stoch14 >= 60 ? (options.pColor4):stoch14 >= 50 ? (options.pColor5):stoch14 >= 40 ? (options.nColor5):stoch14 >= 30 ? (options.nColor4):stoch14 >= 20 ? (options.nColor3):stoch14 >= 10 ? (options.nColor2):stoch14 >= 5 ? (options.nColor1):options.bottomColor\nvar colour15 = stoch15>=94 ? options.topColor:stoch15>=90? (options.pColor1):stoch15 >= 80 ? (options.pColor2):stoch15 >= 70 ? (options.pColor3):stoch15 >= 60 ? (options.pColor4):stoch15 >= 50 ? (options.pColor5):stoch15 >= 40 ? (options.nColor5):stoch15 >= 30 ? (options.nColor4):stoch15 >= 20 ? (options.nColor3):stoch15 >= 10 ? (options.nColor2):stoch15 >= 5 ? (options.nColor1):options.bottomColor\nvar colour16 = stoch16>=94 ? options.topColor:stoch16>=90? (options.pColor1):stoch16 >= 80 ? (options.pColor2):stoch16 >= 70 ? (options.pColor3):stoch16 >= 60 ? (options.pColor4):stoch16 >= 50 ? (options.pColor5):stoch16 >= 40 ? (options.nColor5):stoch16 >= 30 ? (options.nColor4):stoch16 >= 20 ? (options.nColor3):stoch16 >= 10 ? (options.nColor2):stoch16 >= 5 ? (options.nColor1):options.bottomColor\nvar colour17 = stoch17>=94 ? options.topColor:stoch17>=90? (options.pColor1):stoch17 >= 80 ? (options.pColor2):stoch17 >= 70 ? (options.pColor3):stoch17 >= 60 ? (options.pColor4):stoch17 >= 50 ? (options.pColor5):stoch17 >= 40 ? (options.nColor5):stoch17 >= 30 ? (options.nColor4):stoch17 >= 20 ? (options.nColor3):stoch17 >= 10 ? (options.nColor2):stoch17 >= 5 ? (options.nColor1):options.bottomColor\nvar colour18 = stoch18>=94 ? options.topColor:stoch18>=90? (options.pColor1):stoch18 >= 80 ? (options.pColor2):stoch18 >= 70 ? (options.pColor3):stoch18 >= 60 ? (options.pColor4):stoch18 >= 50 ? (options.pColor5):stoch18 >= 40 ? (options.nColor5):stoch18 >= 30 ? (options.nColor4):stoch18 >= 20 ? (options.nColor3):stoch18 >= 10 ? (options.nColor2):stoch18 >= 5 ? (options.nColor1):options.bottomColor\nvar colour19 = stoch19>=94 ? options.topColor:stoch19>=90? (options.pColor1):stoch19 >= 80 ? (options.pColor2):stoch19 >= 70 ? (options.pColor3):stoch19 >= 60 ? (options.pColor4):stoch19 >= 50 ? (options.pColor5):stoch19 >= 40 ? (options.nColor5):stoch19 >= 30 ? (options.nColor4):stoch19 >= 20 ? (options.nColor3):stoch19 >= 10 ? (options.nColor2):stoch19 >= 5 ? (options.nColor1):options.bottomColor\nvar colour20 = stoch20>=94 ? options.topColor:stoch20>=90? (options.pColor1):stoch20 >= 80 ? (options.pColor2):stoch20 >= 70 ? (options.pColor3):stoch20 >= 60 ? (options.pColor4):stoch20 >= 50 ? (options.pColor5):stoch20 >= 40 ? (options.nColor5):stoch20 >= 30 ? (options.nColor4):stoch20 >= 20 ? (options.nColor3):stoch20 >= 10 ? (options.nColor2):stoch20 >= 5 ? (options.nColor1):options.bottomColor\nvar colour21 = stoch21>=94 ? options.topColor:stoch21>=90? (options.pColor1):stoch21 >= 80 ? (options.pColor2):stoch21 >= 70 ? (options.pColor3):stoch21 >= 60 ? (options.pColor4):stoch21 >= 50 ? (options.pColor5):stoch21 >= 40 ? (options.nColor5):stoch21 >= 30 ? (options.nColor4):stoch21 >= 20 ? (options.nColor3):stoch21 >= 10 ? (options.nColor2):stoch21 >= 5 ? (options.nColor1):options.bottomColor\nvar colour22 = stoch22>=94 ? options.topColor:stoch22>=90? (options.pColor1):stoch22 >= 80 ? (options.pColor2):stoch22 >= 70 ? (options.pColor3):stoch22 >= 60 ? (options.pColor4):stoch22 >= 50 ? (options.pColor5):stoch22 >= 40 ? (options.nColor5):stoch22 >= 30 ? (options.nColor4):stoch22 >= 20 ? (options.nColor3):stoch22 >= 10 ? (options.nColor2):stoch22 >= 5 ? (options.nColor1):options.bottomColor\nvar colour23 = stoch23>=94 ? options.topColor:stoch23>=90? (options.pColor1):stoch23 >= 80 ? (options.pColor2):stoch23 >= 70 ? (options.pColor3):stoch23 >= 60 ? (options.pColor4):stoch23 >= 50 ? (options.pColor5):stoch23 >= 40 ? (options.nColor5):stoch23 >= 30 ? (options.nColor4):stoch23 >= 20 ? (options.nColor3):stoch23 >= 10 ? (options.nColor2):stoch23 >= 5 ? (options.nColor1):options.bottomColor\nvar colour24 = stoch24>=94 ? options.topColor:stoch24>=90? (options.pColor1):stoch24 >= 80 ? (options.pColor2):stoch24 >= 70 ? (options.pColor3):stoch24 >= 60 ? (options.pColor4):stoch24 >= 50 ? (options.pColor5):stoch24 >= 40 ? (options.nColor5):stoch24 >= 30 ? (options.nColor4):stoch24 >= 20 ? (options.nColor3):stoch24 >= 10 ? (options.nColor2):stoch24 >= 5 ? (options.nColor1):options.bottomColor\nvar colour25 = stoch25>=94 ? options.topColor:stoch25>=90? (options.pColor1):stoch25 >= 80 ? (options.pColor2):stoch25 >= 70 ? (options.pColor3):stoch25 >= 60 ? (options.pColor4):stoch25 >= 50 ? (options.pColor5):stoch25 >= 40 ? (options.nColor5):stoch25 >= 30 ? (options.nColor4):stoch25 >= 20 ? (options.nColor3):stoch25 >= 10 ? (options.nColor2):stoch25 >= 5 ? (options.nColor1):options.bottomColor\nvar colour26 = stoch26>=94 ? options.topColor:stoch26>=90? (options.pColor1):stoch26 >= 80 ? (options.pColor2):stoch26 >= 70 ? (options.pColor3):stoch26 >= 60 ? (options.pColor4):stoch26 >= 50 ? (options.pColor5):stoch26 >= 40 ? (options.nColor5):stoch26 >= 30 ? (options.nColor4):stoch26 >= 20 ? (options.nColor3):stoch26 >= 10 ? (options.nColor2):stoch26 >= 5 ? (options.nColor1):options.bottomColor\nvar colour27 = stoch27>=94 ? options.topColor:stoch27>=90? (options.pColor1):stoch27 >= 80 ? (options.pColor2):stoch27 >= 70 ? (options.pColor3):stoch27 >= 60 ? (options.pColor4):stoch27 >= 50 ? (options.pColor5):stoch27 >= 40 ? (options.nColor5):stoch27 >= 30 ? (options.nColor4):stoch27 >= 20 ? (options.nColor3):stoch27 >= 10 ? (options.nColor2):stoch27 >= 5 ? (options.nColor1):options.bottomColor\nvar colour28 = stoch28>=94 ? options.topColor:stoch28>=90? (options.pColor1):stoch28 >= 80 ? (options.pColor2):stoch28 >= 70 ? (options.pColor3):stoch28 >= 60 ? (options.pColor4):stoch28 >= 50 ? (options.pColor5):stoch28 >= 40 ? (options.nColor5):stoch28 >= 30 ? (options.nColor4):stoch28 >= 20 ? (options.nColor3):stoch28 >= 10 ? (options.nColor2):stoch28 >= 5 ? (options.nColor1):options.bottomColor\n\nif (options.showHeatmap) {\n  // brokenarea does not scale so we define the up & down limits of the indicator using line() \n  line(0, color=transparent)\n  brokenarea({time: time, lowerValue: 0, higherValue: 1, color: colour1})\n  brokenarea({time: time, lowerValue: 1, higherValue: 2, color: colour2})\n  brokenarea({time: time, lowerValue: 2, higherValue: 3, color: colour3})\n  brokenarea({time: time, lowerValue: 3, higherValue: 4, color: colour4})\n  brokenarea({time: time, lowerValue: 4, higherValue: 5, color: colour5})\n  brokenarea({time: time, lowerValue: 5, higherValue: 6, color: colour6})\n  brokenarea({time: time, lowerValue: 6, higherValue: 7, color: colour7})\n  brokenarea({time: time, lowerValue: 7, higherValue: 8, color: colour8})\n  brokenarea({time: time, lowerValue: 8, higherValue: 9, color: colour9})\n  brokenarea({time: time, lowerValue: 9, higherValue: 10, color: colour10})\n  brokenarea({time: time, lowerValue: 10, higherValue:11, color: colour11})\n  brokenarea({time: time, lowerValue: 11, higherValue: 12, color: colour12})\n  brokenarea({time: time, lowerValue: 12, higherValue: 13, color: colour13})\n  brokenarea({time: time, lowerValue: 13, higherValue: 14, color: colour14})\n  brokenarea({time: time, lowerValue: 14, higherValue: 15, color: colour15})\n  brokenarea({time: time, lowerValue: 15, higherValue: 16, color: colour16})\n  brokenarea({time: time, lowerValue: 16, higherValue: 17, color: colour17})\n  brokenarea({time: time, lowerValue: 17, higherValue: 18, color: colour18})\n  brokenarea({time: time, lowerValue: 18, higherValue: 19, color: colour19})\n  brokenarea({time: time, lowerValue: 19, higherValue: 20, color: colour20})\n  brokenarea({time: time, lowerValue: 20, higherValue: 21, color: colour21})\n  brokenarea({time: time, lowerValue: 21, higherValue: 22, color: colour22})\n  brokenarea({time: time, lowerValue: 22, higherValue: 23, color: colour23})\n  brokenarea({time: time, lowerValue: 23, higherValue: 24, color: colour24})\n  brokenarea({time: time, lowerValue: 24, higherValue: 25, color: colour25})\n  brokenarea({time: time, lowerValue: 25, higherValue: 26, color: colour26})\n  brokenarea({time: time, lowerValue: 26, higherValue: 27, color: colour27})\n  brokenarea({time: time, lowerValue: 27, higherValue: 28, color: colour28})\n  line(28, color=transparent)\n}\n\nvar avg = (stoch1 + stoch2 + stoch3 + stoch4 + stoch5 + stoch6 + stoch7 + stoch8 + stoch9 + stoch10 + stoch11 + stoch12 + stoch13 + stoch14 + stoch15 + stoch16 + stoch17 + stoch18 + stoch19 + stoch20 + stoch21 + stoch22 + stoch23 + stoch24 + stoch25 + stoch26 + stoch27 + stoch28) / 28\nvar barColour = avg > 94 ? options.topColor:avg>=90 ? (options.pColor1):avg >= 80 ? (options.pColor2):avg >= 70 ? (options.pColor3):avg >= 60 ? (options.pColor4):avg >= 50 ? (options.pColor5):avg >= 40 ? (options.nColor5):avg >= 30 ? (options.nColor4):avg >= 20 ? (options.nColor3):avg >= 10 ? (options.nColor2):avg >= 5 ? (options.nColor1):options.bottomColor\n\n$price.color = barColour",
          "name": "SHM",
          "options": {
            "priceScaleId": "shm",
            "stochMultiplier": 1,
            "pColor1": "rgb(207,0,0)",
            "pColor2": "#f22b11",
            "pColor3": "#f29811",
            "pColor4": "#eef211",
            "pColor5": "#3af211",
            "nColor1": "#02269e",
            "nColor2": "#0039f5",
            "nColor3": "#1176f2",
            "nColor4": "#11aff2",
            "nColor5": "#11e7f2",
            "showHeatmap": true,
            "scaleMargins": {
              "top": 0.84,
              "bottom": 0
            },
            "emaLength": 1,
            "bottomColor": "rgb(1,24,101)",
            "topColor": "rgb(153,0,0)",
            "visible": false
          },
          "description": "Stochastic Heat Map",
          "id": "shm",
          "createdAt": 1681663159403,
          "updatedAt": 1623024000000,
          "series": [
            "shm",
            "t2djix2e",
            "rmondzow",
            "vg1hraen",
            "qr3yy8oj",
            "fsnokjb2",
            "yxk0n6a5",
            "zencqyyz",
            "acqbz0j8",
            "05tdo7kr",
            "75hs5uu6",
            "oudan52c",
            "spsnor32",
            "56wg27ge",
            "bvx59au1",
            "khpmnhoj",
            "tcytvdo1",
            "ud504co1",
            "126rsct6",
            "1fky89dm",
            "alinx4f4",
            "d50g3jz5",
            "qnpunqi5",
            "eo9w4umg",
            "ax76fylw",
            "szfc0r4u",
            "knju5o6c",
            "my7hnypb",
            "u3llkc2w",
            "aarybwah"
          ],
          "displayName": "SHM"
        },
        "cld": {
          "script": "plotline(cum(lbuy-lsell))",
          "name": "CLD",
          "description": "Cumulative Liquidations Delta",
          "options": {
            "priceScaleId": "ctd",
            "priceFormat": {
              "type": "volume"
            },
            "color": "rgb(255,235,59)",
            "lineWidth": 1,
            "scaleMargins": {
              "top": 0.75,
              "bottom": 0.17
            },
            "lastValueVisible": true,
            "priceLineVisible": true,
            "visible": false
          },
          "id": "cld",
          "createdAt": 1681663159403,
          "updatedAt": 1682820778543,
          "preview": {},
          "unsavedChanges": false,
          "series": [
            "cld"
          ],
          "displayName": "CLD"
        },
        "relative-volume": {
          "script": "volume = vbuy + vsell\nvolumeAvg = ema(volume, options.volumeAvgPeriod)\nhighVolume = volume > volumeAvg*options.volumeAvgMult\nnotHighVolume = volume < volumeAvg*options.volumeAvgMult\n\nplothistogram({ time: time, value: volume, color: notHighVolume? options.neutralColor : vbuy > vsell ? options.upColor : options.downColor})\nplotline(18000000)",
          "name": "Relative Volume",
          "options": {
            "priceScaleId": "volume",
            "priceFormat": {
              "type": "volume"
            },
            "upColor": "rgba(59,202,109,0.5)",
            "downColor": "rgb(233,30,99)",
            "visible": false,
            "neutralColor": "rgba(135,135,135,0.23)",
            "volumeAvgPeriod": 20,
            "volumeAvgMult": 1.5
          },
          "id": "relative-volume",
          "priceScaleId": "right",
          "series": [
            "relative-volume",
            "cc85y59e"
          ],
          "displayName": "Relative Volume",
          "unsavedChanges": false,
          "createdAt": 1655044715638,
          "navigationState": {
            "sections": [
              "position",
              "colors"
            ],
            "tab": "#options",
            "optionsQuery": "",
            "fontSize": 1
          },
          "updatedAt": 1689561913397,
          "uses": 5,
          "preview": {}
        },
        "big-order-delta": {
          "script": "//-------------BUY SIZE---------------\nbuySize = vbuy / cbuy\n\n//Bolliger bands around Buy Size\na_buy = sma(Math.pow(buySize, 2), options.length)\nb_buy = Math.pow(sum(buySize, options.length),2) / Math.pow(options.length, 2)\nstdev_buy = Math.sqrt(a_buy - b_buy)\n\nbasis_buy = sma(buySize, options.length)\ndev_buy = options.mult * stdev_buy\nupper_buy = basis_buy + dev_buy\nlower_buy = basis_buy - dev_buy\n\n\n//-----------------SELL SIZE------------------\nsellSize = vsell / csell\n\n//Bolliger bands around Sell Size\na_sell = sma(Math.pow(sellSize, 2), options.length)\nb_sell = Math.pow(sum(sellSize, options.length),2) / Math.pow(options.length, 2)\nstdev_sell = Math.sqrt(a_sell - b_sell)\n\n\nbasis_sell = sma(sellSize, options.length)\ndev_sell = options.mult * stdev_sell\nupper_sell = basis_sell + dev_sell\nlower_sell = basis_sell - dev_sell\n\n\n\n//---------------BIG ORDER CVD------------------\nbigOrderBuyVol = buySize > upper_buy ? vbuy: 0\nbigOrderSellVol = sellSize > upper_sell ? vsell: 0\n\nbigOrderDelta = bigOrderBuyVol - bigOrderSellVol\n\nhistogram({\n  time: time,\n  value: bigOrderDelta,\n  color: bigOrderBuyVol > bigOrderSellVol ? 'DeepSkyBlue' : 'Pink'\n})",
          "name": "Big Order Delta",
          "options": {
            "priceScaleId": "big-order-delta",
            "length": 14,
            "mult": "",
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "minMove": "0.01",
              "precision": 2
            },
            "scaleMargins": {
              "top": 0.65,
              "bottom": 0.25
            },
            "visible": false
          },
          "id": "big-order-delta",
          "priceScaleId": "right",
          "series": [
            "big-order-delta"
          ],
          "displayName": "Big Order Delta",
          "unsavedChanges": false
        },
        "big-order-cvd": {
          "script": "//-------------BUY SIZE---------------\nbuySize = vbuy / cbuy\n\n\n//Bolliger bands around Buy Size\na_buy = sma(Math.pow(buySize, 2), options.length)\nb_buy = Math.pow(sum(buySize, options.length),2) / Math.pow(options.length, 2)\nstdev_buy = Math.sqrt(a_buy - b_buy)\n\nbasis_buy = sma(buySize, options.length)\ndev_buy = options.mult * stdev_buy\nupper_buy = basis_buy + dev_buy\nlower_buy = basis_buy - dev_buy\n\n\n//-----------------SELL SIZE------------------\nsellSize = vsell / csell\n\n\n//Bolliger bands around Sell Size\na_sell = sma(Math.pow(sellSize, 2), options.length)\nb_sell = Math.pow(sum(sellSize, options.length),2) / Math.pow(options.length, 2)\nstdev_sell = Math.sqrt(a_sell - b_sell)\n\n\nbasis_sell = sma(sellSize, options.length)\ndev_sell = options.mult * stdev_sell\nupper_sell = basis_sell + dev_sell\nlower_sell = basis_sell - dev_sell\n\n\n\n//---------------BIG ORDER CVD------------------\nbigOrderBuyVol = buySize > upper_buy ? vbuy: 0\nbigOrderSellVol = sellSize > upper_sell ? vsell: 0\n\nbigOrderDelta = bigOrderBuyVol - bigOrderSellVol\n\nbigOrderCVD = cum(bigOrderDelta)\n\nline(bigOrderCVD, title=BIG)",
          "name": "Big Order CVD",
          "options": {
            "priceScaleId": "big-order-cvd",
            "length": 50,
            "mult": "",
            "lastValueVisible": true,
            "lineStyle": 0,
            "priceFormat": {
              "type": "volume",
              "minMove": "0.01",
              "precision": 2
            },
            "color": "rgb(255,255,96)",
            "visible": true,
            "scaleMargins": {
              "top": 0.29,
              "bottom": 0.46
            }
          },
          "id": "big-order-cvd",
          "priceScaleId": "right",
          "series": [
            "big-order-cvd"
          ],
          "displayName": "Big Order CVD",
          "unsavedChanges": false
        }
      },
      "priceScales": {
        "right": {
          "scaleMargins": {
            "top": 0.07,
            "bottom": 0.69
          },
          "indicators": [
            "Price"
          ],
          "priceFormat": {
            "precision": 1,
            "minMove": 0.1
          }
        },
        "cvd": {
          "scaleMargins": {
            "top": 0.84,
            "bottom": 0
          }
        },
        "cvd-perps": {
          "scaleMargins": {
            "top": 0.84,
            "bottom": 0
          }
        },
        "cvd-spot": {
          "scaleMargins": {
            "top": 0.84,
            "bottom": 0
          }
        },
        "cvd-spot2": {
          "scaleMargins": {
            "top": 0.84,
            "bottom": 0
          }
        },
        "volume_liquidations": {
          "scaleMargins": {
            "top": 0.6,
            "bottom": 0.15
          },
          "indicators": [
            "Liquidations"
          ]
        },
        "volume": {
          "scaleMargins": {
            "top": 0.93,
            "bottom": 0
          },
          "indicators": [
            "Volume Δ"
          ]
        },
        "cvd-btc-spot": {
          "scaleMargins": {
            "top": 0.29,
            "bottom": 0.47
          },
          "indicators": [
            "CVD BTC Spot"
          ]
        },
        "cvd-btc-perp": {
          "scaleMargins": {
            "top": 0.27,
            "bottom": 0.46
          },
          "indicators": [
            "CVD BTC Perp"
          ]
        },
        "perps-premium": {
          "scaleMargins": {
            "top": 0.89,
            "bottom": 0.02
          },
          "indicators": [
            "Perps Premium"
          ]
        },
        "cvd-bitfinex-spot2": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0.02
          },
          "indicators": [
            "CVD Bitfinex Spot"
          ]
        },
        "cvd-binance-spot": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0.02
          },
          "indicators": [
            "CVD Binance Spot"
          ]
        },
        "cvd-coinbase": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0.02
          },
          "indicators": [
            "CVD Coinbase"
          ]
        },
        "cvd-ftx-spot": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0
          },
          "indicators": [
            "CVD FTX Spot"
          ]
        },
        "cvd-bitmex": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0.02
          },
          "indicators": [
            "CVD BitMex"
          ]
        },
        "cvd-ftx-perps": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0
          },
          "indicators": [
            "CVD FTX Perps"
          ]
        },
        "cvd-binance-perps": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0.02
          },
          "indicators": [
            "CVD Binance Perps"
          ]
        },
        "cvd-bybit-perps": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0.02
          },
          "indicators": [
            "CVD Bybit Perps"
          ]
        },
        "cvd-bitfinex-perps": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0.02
          },
          "indicators": [
            "CVD Bitfinex Perps"
          ]
        },
        "delta": {
          "scaleMargins": {
            "top": 0.42,
            "bottom": 0.5
          },
          "indicators": [
            "Delta"
          ]
        },
        "delta-spot": {
          "scaleMargins": {
            "top": 0.58,
            "bottom": 0.36
          },
          "indicators": [
            "Delta Spot"
          ],
          "mode": 0
        },
        "delta-perps": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0.25
          },
          "indicators": [
            "Delta Perps"
          ]
        },
        "cvd-btc-futures": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "cvd2": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "stablecoinmgbasis": {
          "scaleMargins": {
            "top": 0.69,
            "bottom": 0
          },
          "indicators": [
            "StableCoinMgBasis"
          ]
        },
        "liquidations-longs": {
          "scaleMargins": {
            "top": 0.39,
            "bottom": 0.52
          },
          "indicators": [
            "Liquidations - Longs"
          ]
        },
        "liquidations-shorts": {
          "scaleMargins": {
            "top": 0,
            "bottom": 0.91
          },
          "indicators": [
            "Liquidations - Shorts"
          ]
        },
        "volume-sma": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "volume-stdev": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "ftx-cvd-spot": {
          "scaleMargins": {
            "top": 0.28,
            "bottom": 0.47
          },
          "indicators": [
            "FTX CVD SPOT"
          ]
        },
        "price": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "left": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "shm": {
          "scaleMargins": {
            "top": 0.84,
            "bottom": 0
          }
        },
        "ctd": {
          "scaleMargins": {
            "top": 0.75,
            "bottom": 0.17
          }
        },
        "normal-order-delta2": {
          "scaleMargins": {
            "top": 0.75,
            "bottom": 0.15
          }
        },
        "big-order-delta": {
          "scaleMargins": {
            "top": 0.65,
            "bottom": 0.25
          }
        },
        "big-order-cvd": {
          "scaleMargins": {
            "top": 0.29,
            "bottom": 0.46
          },
          "indicators": [
            "Big Order CVD"
          ]
        }
      },
      "layouting": false,
      "showIndicators": false,
      "timeframe": "180",
      "refreshRate": 1000,
      "showAlerts": true,
      "showAlertsLabel": true,
      "showLegend": false,
      "fillGapsWithEmpty": true,
      "showHorizontalGridlines": false,
      "horizontalGridlinesColor": "rgba(255,255,255,.1)",
      "showVerticalGridlines": false,
      "verticalGridlinesColor": "rgba(255,255,255,.1)",
      "showWatermark": false,
      "watermarkColor": "rgba(255,255,255,.1)",
      "showBorder": true,
      "borderColor": null,
      "showLeftScale": false,
      "showRightScale": true,
      "showTimeScale": true,
      "hiddenMarkets": {
        "COINBASE:BTC-USDT": false,
        "COINBASE:BTC-USD": false,
        "BITMEX:XBTUSD": false,
        "BITMEX:XBTUSDT": false,
        "KUCOIN:XBTUSDCM": false,
        "KUCOIN:XBTUSDM": false,
        "MEXC:BTC_USD": false,
        "MEXC:BTC_USDT": false,
        "DERIBIT:BTC-PERPETUAL": false,
        "BYBIT:BTCUSD": false,
        "BITMEX:XBT_USDT": false,
        "BITGET:BTCUSDT_UMCBL": false,
        "BITGET:BTCUSD_DMCBL": false,
        "BITGET:BTCPERP_CMCBL": false,
        "BITFINEX:BTCUST": false,
        "BITFINEX:BTCUSD": false,
        "BITFINEX:BTCF0:USTF0": false,
        "BINANCE:btcusdt": true,
        "BINANCE_FUTURES:btcusdt": false,
        "BINANCE_FUTURES:btcusd_perp": false,
        "BYBIT:BTCUSDT": false,
        "KRAKEN:PF_XBTUSD": false,
        "KRAKEN:PI_XBTUSD": false,
        "KUCOIN:XBTUSDTM": false
      },
      "barSpacing": 1.0287806683729497,
      "navigationState": {
        "tab": "options",
        "optionsQuery": "",
        "fontSizePx": 15
      },
      "_id": "chart",
      "forceNormalizePrice": false
    },
    "stats": {
      "granularity": 5000,
      "window": 60000,
      "enableChart": false,
      "buckets": {
        "trades": {
          "id": "trades",
          "name": "TRADES",
          "input": "cbuy + csell",
          "enabled": true,
          "color": "rgba(255, 255, 255, .25)",
          "precision": 2,
          "type": "line",
          "conditionnalColor": false
        },
        "vold": {
          "id": "vold",
          "name": "VOLUME Δ",
          "input": "vbuy - vsell",
          "enabled": false,
          "color": "#40d745",
          "type": "area",
          "conditionnalColor": false
        },
        "tradesd": {
          "id": "tradesd",
          "name": "TRADES Δ",
          "input": "cbuy - csell",
          "enabled": false,
          "color": "#2196f3",
          "precision": 2,
          "type": "line",
          "conditionnalColor": false
        },
        "1hliq": {
          "id": "1hliq",
          "name": "1m LIQUIDATIONS",
          "window": 60000,
          "input": "lbuy+lsell",
          "enabled": true,
          "color": "",
          "conditionnalColor": true,
          "type": "histogram"
        }
      },
      "_id": "stats"
    },
    "trades": {
      "liquidations": [
        {
          "id": "liquidation_threshold",
          "amount": 19800,
          "buyColor": "rgba(236,64,122,0.5)",
          "sellColor": "rgba(255,152,0,0.5)",
          "buyAudio": "var srqtR = Math.min(1, gain / 4)\nplay(329.63, srqtR, srqtR*2,0,,,'sine')\nplay(329.63, srqtR, srqtR*4,0.08,,,'sine')",
          "sellAudio": "var srqtR = Math.min(1, gain / 6)\nplay(440, srqtR, srqtR*2,0,,,'sine')\nplay(440, srqtR, srqtR*4,0.08,,,'sine')"
        },
        {
          "id": "liquidation_significant",
          "amount": 99000,
          "buyColor": "rgba(236,64,122,0.6)",
          "sellColor": "rgba(255,152,0,0.7)",
          "buyAudio": "var srqtR = Math.min(1, gain / 4)\nplay(329.63, srqtR, srqtR*4,0,,,'sine')\nplay(329.63, srqtR, srqtR*6,0.08,,,'sine')",
          "sellAudio": "var srqtR = Math.min(1, gain / 6)\nplay(440, srqtR, srqtR*4,0,,,'sine')\nplay(440, srqtR, srqtR*6,0.08,,,'sine')"
        },
        {
          "id": "liquidation_huge",
          "amount": 198000,
          "buyGif": "flying money",
          "sellGif": "flying money",
          "buyColor": "rgba(236,64,122,0.7)",
          "sellColor": "rgba(255,152,0,0.8)",
          "buyAudio": "var srqtR = Math.min(1, gain / 4)\nplay(329.63, srqtR, srqtR*4,0,,,'sine')\nplay(329.63, srqtR, srqtR*8,0.08,,,'sine')",
          "sellAudio": "var srqtR = Math.min(1, gain / 6)\nplay(440, srqtR, srqtR*4,0,,,'sine')\nplay(440, srqtR, srqtR*8,0.08,,,'sine')"
        },
        {
          "id": "liquidation_rare",
          "amount": 990000,
          "buyGif": "explosion",
          "sellGif": "explosion",
          "buyColor": "rgb(156,39,176)",
          "sellColor": "rgb(255,235,59)",
          "buyAudio": "var srqtR = Math.min(1, gain / 10)\nplay(329.63, srqtR, 1,0,,,'sine')\nplay(329.63, srqtR, srqtR*10,0.08,,,'sine')",
          "sellAudio": "var srqtR = Math.min(1, gain / 10)\nplay(440, srqtR, 1,0,,,'sine')\nplay(440, srqtR, srqtR*10,0.08,,,'sine')"
        }
      ],
      "thresholds": [
        {
          "id": "threshold",
          "amount": 700000,
          "buyColor": "rgba(128,130,135,0.5)",
          "sellColor": "rgba(169,47,58,0.5)",
          "buyAudio": "play(659.26, gain / 10, 0.1 + gain / 7)",
          "sellAudio": "play(493.88, gain * 1.5 / 10, 0.1 + gain / 7)"
        },
        {
          "id": "huge",
          "amount": 999000,
          "buyGif": "cash bullish",
          "sellGif": "cash bearish",
          "buyColor": "rgba(209,212,220,1)",
          "sellColor": "rgba(239,67,82,1)",
          "buyAudio": "play(659.26, 0.05 + gain / 25, 0.1 + ratio * 0.23, 0,,0);\nplay(830.6, 0.05 + gain / 25, 0.1 + ratio * 0.23, 0.08,,0);\nplay(987.76, 0.05 + gain / 25, 0.1 + ratio * 0.23, 0.16,,0);\nplay(1318.52, 0.05 + gain / 10, 0.1 + ratio * 0.23, 0.24,,0)",
          "sellAudio": "play(493.88, 0.05 + gain / 25, 0.1 + ratio * 0.23, 0,,0);\nplay(369.99, 0.05 + gain * 1.5 / 10, 0.2, 0.08,,0);\nplay(293.66, 0.05 + gain * 1.5 / 10, 0.2, 0.16,,0);\nplay(246.94, 0.05 + gain * 1.5 / 10, 0.1 + ratio * 0.23, 0.24,,0)"
        },
        {
          "id": "significant",
          "amount": 1000000,
          "buyColor": "rgba(209,212,220,0.8)",
          "sellColor": "rgba(239,67,82,0.8)",
          "buyAudio": "play(659.26, 0.05 + gain / 10, 0.2 + ratio * 0.23,0,,0);\nplay(830.6, 0.05 + gain / 10, 0.2 + ratio * 0.23, 0.08,,0)",
          "sellAudio": "play(493.88, 0.05 + gain * 1.5 / 10, 0.2 + ratio * 0.23,0,,0);\nplay(392, 0.05 + gain * 1.5 / 10, 0.2 + ratio * 0.23, 0.08,,0)"
        },
        {
          "id": "rare",
          "amount": 2000000,
          "buyGif": "explosion",
          "sellGif": "explosion",
          "buyColor": "rgba(221,224,229,1)",
          "sellColor": "rgba(243,140,146,1)",
          "buyAudio": "play(659.26, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0,,0);\nplay(830.6, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0.08,,0);\nplay(987.76, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0.16,,0);\nplay(1318.52, 0.05 + gain / 10, 0.1 + ratio * 0.13, 0.24,,0)",
          "sellAudio": "play(493.88, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0,,0);\nplay(369.99, 0.05 + gain * 1.5 / 10, 0.2, 0.08,,0);\nplay(293.66, 0.05 + gain * 1.5 / 10, 0.2, 0.16,,0);\nplay(246.94, 0.05 + gain * 1.5 / 10, 0.1 + ratio * 0.13, 0.24,,0)"
        },
        {
          "id": "t1h64h7a",
          "amount": 4000000,
          "buyColor": "rgb(0, 255, 0)",
          "sellColor": "rgb(255, 0, 0)",
          "buyAudio": "play(659.26, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0,,0);\nplay(830.6, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0.08,,0);\nplay(987.76, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0.16,,0);\nplay(1318.52, 0.05 + gain / 10, 0.1 + ratio * 0.13, 0.24,,0)",
          "sellAudio": "play(493.88, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0,,0);\nplay(369.99, 0.05 + gain * 1.5 / 10, 0.2, 0.08,,0);\nplay(293.66, 0.05 + gain * 1.5 / 10, 0.2, 0.16,,0);\nplay(246.94, 0.05 + gain * 1.5 / 10, 0.1 + ratio * 0.13, 0.24,,0)"
        }
      ],
      "audioThreshold": "100%",
      "multipliers": {},
      "maxRows": 100,
      "muted": false,
      "audioPitch": null,
      "audioVolume": 1.16,
      "showPairs": false,
      "showTrades": true,
      "showLiquidations": false,
      "showLogos": true,
      "monochromeLogos": false,
      "showTimeAgo": true,
      "showPrices": true,
      "showHistograms": true,
      "thresholdsMultipler": 0.99,
      "_id": "trades",
      "showThresholdsAsTable": true
    },
    "trades2": {
      "liquidations": [
        {
          "id": "liquidation_threshold",
          "amount": 253500,
          "buyColor": "rgba(236,64,122,0.5)",
          "sellColor": "rgba(255,152,0,0.5)",
          "buyAudio": "var srqtR = Math.min(1, gain / 4)\nplay(329.63, srqtR, srqtR*2,0,,,'sine')\nplay(329.63, srqtR, srqtR*4,0.08,,,'sine')",
          "sellAudio": "var srqtR = Math.min(1, gain / 6)\nplay(440, srqtR, srqtR*2,0,,,'sine')\nplay(440, srqtR, srqtR*4,0.08,,,'sine')"
        },
        {
          "id": "liquidation_significant",
          "amount": 507000,
          "buyColor": "rgba(236,64,122,0.6)",
          "sellColor": "rgba(255,152,0,0.7)",
          "buyAudio": "var srqtR = Math.min(1, gain / 4)\nplay(329.63, srqtR, srqtR*4,0,,,'sine')\nplay(329.63, srqtR, srqtR*6,0.08,,,'sine')",
          "sellAudio": "var srqtR = Math.min(1, gain / 6)\nplay(440, srqtR, srqtR*4,0,,,'sine')\nplay(440, srqtR, srqtR*6,0.08,,,'sine')"
        },
        {
          "id": "liquidation_huge",
          "amount": 1014000,
          "buyGif": "flying money",
          "sellGif": "flying money",
          "buyColor": "rgba(236,64,122,0.7)",
          "sellColor": "rgba(255,152,0,0.8)",
          "buyAudio": "var srqtR = Math.min(1, gain / 4)\nplay(329.63, srqtR, srqtR*4,0,,,'sine')\nplay(329.63, srqtR, srqtR*8,0.08,,,'sine')",
          "sellAudio": "var srqtR = Math.min(1, gain / 6)\nplay(440, srqtR, srqtR*4,0,,,'sine')\nplay(440, srqtR, srqtR*8,0.08,,,'sine')"
        },
        {
          "id": "liquidation_rare",
          "amount": 5070000,
          "buyGif": "explosion",
          "sellGif": "explosion",
          "buyColor": "rgb(156,39,176)",
          "sellColor": "rgb(255,235,59)",
          "buyAudio": "var srqtR = Math.min(1, gain / 10)\nplay(329.63, srqtR, 1,0,,,'sine')\nplay(329.63, srqtR, srqtR*10,0.08,,,'sine')",
          "sellAudio": "var srqtR = Math.min(1, gain / 10)\nplay(440, srqtR, 1,0,,,'sine')\nplay(440, srqtR, srqtR*10,0.08,,,'sine')"
        }
      ],
      "thresholds": [
        {
          "id": "zf1lkbkk",
          "amount": 100596.3,
          "buyColor": "rgba(105,106,110,0.5)",
          "sellColor": "rgba(146,41,50,0.5)",
          "buyAudio": "play(659.26, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0,,0);\nplay(830.6, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0.08,,0);\nplay(987.76, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0.16,,0);\nplay(1318.52, 0.05 + gain / 10, 0.1 + ratio * 0.13, 0.24,,0)",
          "sellAudio": "play(493.88, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0,,0);\nplay(369.99, 0.05 + gain * 1.5 / 10, 0.2, 0.08,,0);\nplay(293.66, 0.05 + gain * 1.5 / 10, 0.2, 0.16,,0);\nplay(246.94, 0.05 + gain * 1.5 / 10, 0.1 + ratio * 0.13, 0.24,,0)"
        },
        {
          "id": "threshold",
          "amount": 253500,
          "buyColor": "rgba(209,212,220,0.8)",
          "sellColor": "rgba(239,67,82,0.8)",
          "buyAudio": "play(659.26, gain / 10, 0.1 + gain / 7)",
          "sellAudio": "play(493.88, gain * 1.5 / 10, 0.1 + gain / 7)",
          "buy": "rgba(119, 148, 92, 0.25)"
        },
        {
          "id": "significant",
          "amount": 1521000,
          "buyColor": "rgba(196,198,206,1)",
          "sellColor": "rgba(224,63,77,1)",
          "buyAudio": "play(659.26, 0.05 + gain / 10, 0.2 + ratio * 0.23,0,,0);\nplay(830.6, 0.05 + gain / 10, 0.2 + ratio * 0.23, 0.08,,0)",
          "sellAudio": "play(493.88, 0.05 + gain * 1.5 / 10, 0.2 + ratio * 0.23,0,,0);\nplay(392, 0.05 + gain * 1.5 / 10, 0.2 + ratio * 0.23, 0.08,,0)"
        },
        {
          "id": "huge",
          "amount": 5070000,
          "buyGif": "cash bullish",
          "sellGif": "cash bearish",
          "buyColor": "rgba(215,218,225,1)",
          "sellColor": "rgba(241,110,118,1)",
          "buyAudio": "play(659.26, 0.05 + gain / 25, 0.1 + ratio * 0.23, 0,,0);\nplay(830.6, 0.05 + gain / 25, 0.1 + ratio * 0.23, 0.08,,0);\nplay(987.76, 0.05 + gain / 25, 0.1 + ratio * 0.23, 0.16,,0);\nplay(1318.52, 0.05 + gain / 10, 0.1 + ratio * 0.23, 0.24,,0)",
          "sellAudio": "play(493.88, 0.05 + gain / 25, 0.1 + ratio * 0.23, 0,,0);\nplay(369.99, 0.05 + gain * 1.5 / 10, 0.2, 0.08,,0);\nplay(293.66, 0.05 + gain * 1.5 / 10, 0.2, 0.16,,0);\nplay(246.94, 0.05 + gain * 1.5 / 10, 0.1 + ratio * 0.23, 0.24,,0)"
        },
        {
          "id": "rare",
          "amount": 50700000,
          "buyGif": "explosion",
          "sellGif": "explosion",
          "buyColor": "rgba(227,229,234,1)",
          "sellColor": "rgba(245,165,169,1)",
          "buyAudio": "play(659.26, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0,,0);\nplay(830.6, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0.08,,0);\nplay(987.76, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0.16,,0);\nplay(1318.52, 0.05 + gain / 10, 0.1 + ratio * 0.13, 0.24,,0)",
          "sellAudio": "play(493.88, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0,,0);\nplay(369.99, 0.05 + gain * 1.5 / 10, 0.2, 0.08,,0);\nplay(293.66, 0.05 + gain * 1.5 / 10, 0.2, 0.16,,0);\nplay(246.94, 0.05 + gain * 1.5 / 10, 0.1 + ratio * 0.13, 0.24,,0)"
        }
      ],
      "audioThreshold": "100%",
      "multipliers": {
        "BITSTAMP:btcusdt": 0.86
      },
      "maxRows": 100,
      "muted": false,
      "audioPitch": null,
      "audioVolume": null,
      "showPairs": false,
      "showTrades": true,
      "showLiquidations": false,
      "showLogos": true,
      "monochromeLogos": false,
      "showTimeAgo": true,
      "showPrices": true,
      "showHistograms": true,
      "thresholdsMultipler": 5.07,
      "_id": "trades2",
      "showThresholdsAsTable": true
    },
    "chart2": {
      "indicatorsErrors": {},
      "indicators": {
        "price": {
          "script": "plotcandlestick(avg_ohlc(bar))",
          "enabled": true,
          "name": "Price",
          "options": {
            "priceScaleId": "right",
            "priceFormat": {
              "auto": true,
              "precision": 1,
              "minMove": 0.1
            },
            "priceLineVisible": true,
            "lastValueVisible": true,
            "borderVisible": true,
            "upColor": "rgba(255,255,255,0.76)",
            "downColor": "rgb(242,54,69)",
            "borderUpColor": "rgba(255,255,255,0.69)",
            "borderDownColor": "rgba(242,54,69,0.73)",
            "wickUpColor": "rgba(255,255,255,0.7)",
            "wickDownColor": "rgba(242,54,69,0.72)",
            "visible": true,
            "scaleMargins": {
              "top": 0.11,
              "bottom": 0.14
            }
          },
          "id": "price",
          "createdAt": 1648450392186,
          "updatedAt": 1649247094510,
          "series": [
            "price"
          ],
          "unsavedChanges": true,
          "navigationState": {
            "sections": [
              "position",
              "colors"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          },
          "displayName": "Price"
        },
        "cvd-coinbase": {
          "script": "plotline(sma(cum((COINBASE:BTC-USD.vbuy + COINBASE:BTC-USDT.vbuy + COINBASE:BTC-USDC.vbuy)-(COINBASE:BTC-USD.vsell + COINBASE:BTC-USDT.vsell + COINBASE:BTC-USDC.vsell)), 3), title=Coinbase)",
          "id": "cvd-coinbase",
          "name": "CVD Coinbase",
          "priceScaleId": "right",
          "options": {
            "priceScaleId": "cvd-coinbase",
            "color": "rgb(25,118,210)",
            "visible": true,
            "lastValueVisible": false,
            "lineWidth": 1
          },
          "series": [
            "cvd-coinbase"
          ],
          "displayName": "CVD Coinbase",
          "unsavedChanges": false,
          "createdAt": 1649239102284,
          "navigationState": {
            "sections": [
              "colors",
              "defaultOptions"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          },
          "updatedAt": 1650520866199
        },
        "cvd-bitmex": {
          "script": "plotline(sma(cum((BITMEX:XBTUSD.vbuy) - (BITMEX:XBTUSD.vsell)), 3), title=Bitmex)",
          "id": "cvd-bitmex",
          "name": "CVD BitMex",
          "priceScaleId": "cvd-bitmex",
          "options": {
            "priceScaleId": "cvd-bitmex",
            "color": "rgb(233,30,99)",
            "lineStyle": 1,
            "visible": false,
            "lineWidth": 1
          },
          "series": [
            "cvd-bitmex"
          ],
          "displayName": "CVD BitMex",
          "unsavedChanges": false,
          "createdAt": 1649239477933,
          "navigationState": {
            "sections": [
              "position",
              "colors",
              "defaultOptions"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          },
          "updatedAt": 1650520873665,
          "uses": 1
        },
        "cvd-deribit": {
          "script": "plotline(sma(cum((DERIBIT:BTC-PERPETUAL.vbuy) - (DERIBIT:BTC-PERPETUAL.vsell)), 3), title=Deribit)",
          "id": "cvd-deribit",
          "name": "CVD Deribit",
          "priceScaleId": "cvd-deribit",
          "options": {
            "priceScaleId": "cvd-deribit",
            "color": "rgb(129,199,132)",
            "lineStyle": 1,
            "lineWidth": 1,
            "visible": false
          },
          "series": [
            "cvd-deribit"
          ],
          "displayName": "CVD Deribit",
          "unsavedChanges": false,
          "createdAt": 1649679589874,
          "navigationState": {
            "sections": [
              "position",
              "colors",
              "defaultOptions"
            ],
            "tab": "#options",
            "optionsQuery": "",
            "fontSize": 1
          },
          "updatedAt": 1650520880477
        }
      },
      "priceScales": {
        "right": {
          "scaleMargins": {
            "top": 0.11,
            "bottom": 0.14
          },
          "indicators": [
            "Price"
          ],
          "priceFormat": {
            "precision": 1,
            "minMove": 0.1
          }
        },
        "volume_liquidations": {
          "scaleMargins": {
            "top": 0.75,
            "bottom": 0.17
          }
        },
        "volume": {
          "scaleMargins": {
            "top": 0.84,
            "bottom": 0
          }
        },
        "cvd-coinbase": {
          "scaleMargins": {
            "top": 0.76,
            "bottom": 0.02
          },
          "indicators": [
            "CVD Coinbase"
          ]
        },
        "cvd-bitmex": {
          "scaleMargins": {
            "top": 0.77,
            "bottom": 0.01
          },
          "indicators": [
            "CVD BitMex"
          ]
        },
        "cvd-deribit": {
          "scaleMargins": {
            "top": 0.51,
            "bottom": 0.2
          },
          "indicators": [
            "CVD Deribit"
          ]
        },
        "left": {
          "scaleMargins": {
            "top": 0,
            "bottom": 0.61
          },
          "indicators": [
            "Price"
          ]
        },
        "price": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        }
      },
      "layouting": false,
      "showIndicators": false,
      "timeframe": "180",
      "refreshRate": 10000,
      "showAlerts": true,
      "showAlertsLabel": true,
      "showLegend": false,
      "fillGapsWithEmpty": true,
      "showHorizontalGridlines": false,
      "horizontalGridlinesColor": "rgba(255,255,255,.1)",
      "showVerticalGridlines": false,
      "verticalGridlinesColor": "rgba(255,255,255,.1)",
      "showWatermark": false,
      "watermarkColor": "rgba(255,255,255,.1)",
      "showBorder": true,
      "borderColor": null,
      "showLeftScale": false,
      "showRightScale": true,
      "showTimeScale": true,
      "hiddenMarkets": {
        "BINANCE_FUTURES:btcusd_perp": true,
        "BINANCE_FUTURES:btcusdt": true,
        "BITFINEX:BTCF0:USTF0": true,
        "BITGET:BTCUSD_DMCBL": true,
        "BITGET:BTCUSDT_UMCBL": true,
        "BITMEX:XBTUSD": true,
        "BITMEX:XBTUSDT": true,
        "BYBIT:BTCUSD": true,
        "BYBIT:BTCUSDT": true,
        "DERIBIT:BTC-PERPETUAL": true,
        "MEXC:BTC_USD": true,
        "MEXC:BTC_USDT": true,
        "BINANCE:btcusdt": true,
        "BITFINEX:BTCUSD": true,
        "BITFINEX:BTCUST": true,
        "BITSTAMP:btcusd": true,
        "KRAKEN:XBT/USD": true,
        "KRAKEN:XBT/USDT": true,
        "POLONIEX:USDT_BTC": true,
        "COINBASE:BTC-USD": true,
        "COINBASE:BTC-USDT": false
      },
      "barSpacing": 0.23279237793596427,
      "navigationState": {
        "tab": "script",
        "optionsQuery": "",
        "fontSizePx": 14
      },
      "_id": "chart2",
      "forceNormalizePrice": false
    },
    "chart6": {
      "indicatorsErrors": {},
      "indicators": {
        "price": {
          "script": "plotcandlestick(avg_ohlc(bar))",
          "enabled": true,
          "name": "Price",
          "options": {
            "priceScaleId": "right",
            "priceFormat": {
              "auto": true,
              "precision": 1,
              "minMove": 0.1
            },
            "priceLineVisible": true,
            "lastValueVisible": true,
            "borderVisible": true,
            "upColor": "rgba(255,255,255,0.76)",
            "downColor": "rgb(242,54,69)",
            "borderUpColor": "rgba(255,255,255,0.69)",
            "borderDownColor": "rgba(242,54,69,0.73)",
            "wickUpColor": "rgba(255,255,255,0.7)",
            "wickDownColor": "rgba(242,54,69,0.72)",
            "visible": true,
            "scaleMargins": {
              "top": 0,
              "bottom": 0.4
            }
          },
          "id": "price",
          "createdAt": 1648450392186,
          "updatedAt": 1649247094510,
          "series": [
            "price"
          ],
          "unsavedChanges": true,
          "navigationState": {
            "sections": [
              "position",
              "colors"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          },
          "displayName": "Price"
        },
        "cvd-bybit-perps": {
          "script": "plotline(sma(cum(BYBIT:BTCUSDT.vbuy-BYBIT:BTCUSDT.vsell), 3), title=Bybit)",
          "id": "cvd-bybit-perps",
          "name": "CVD Bybit Perps",
          "priceScaleId": "cvd-bybit-perps",
          "options": {
            "priceScaleId": "cvd-bybit-perps",
            "color": "rgba(245,124,0,0.97)",
            "lineStyle": 1,
            "lineWidth": 1,
            "visible": true
          },
          "series": [
            "cvd-bybit-perps"
          ],
          "displayName": "CVD Bybit Perps",
          "unsavedChanges": false,
          "createdAt": 1649239620556,
          "navigationState": {
            "sections": [
              "position",
              "defaultOptions",
              "colors"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          },
          "updatedAt": 1650520785277
        },
        "cvd-bybit-coin": {
          "script": "plotline(sma(cum(BYBIT:BTCUSD.vbuy-BYBIT:BTCUSD.vsell), 3), title=Bybit INV)",
          "id": "cvd-bybit-coin",
          "name": "CVD Bybit COIN",
          "priceScaleId": "cvd-bybit-perps",
          "options": {
            "priceScaleId": "cvd-bybit-perps-copy-1",
            "color": "rgba(255,238,88,0.97)",
            "lineStyle": 0,
            "lineWidth": 1,
            "visible": true,
            "lastValueVisible": false,
            "priceLineVisible": false
          },
          "series": [
            "cvd-bybit-coin"
          ],
          "displayName": "CVD Bybit COIN",
          "unsavedChanges": false,
          "navigationState": {
            "sections": [
              "position",
              "defaultOptions",
              "colors"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          }
        }
      },
      "priceScales": {
        "right": {
          "scaleMargins": {
            "top": 0,
            "bottom": 0.4
          },
          "indicators": [
            "Price"
          ],
          "priceFormat": {
            "precision": 1,
            "minMove": 0.1
          }
        },
        "volume_liquidations": {
          "scaleMargins": {
            "top": 0.75,
            "bottom": 0.17
          }
        },
        "volume": {
          "scaleMargins": {
            "top": 0.84,
            "bottom": 0
          }
        },
        "cvd-coinbase": {
          "scaleMargins": {
            "top": 0.11,
            "bottom": 0
          },
          "indicators": [
            "CVD Coinbase"
          ]
        },
        "cvd-binance-spot": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "cvd-binance-perps": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "cvd-ftx-spot": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "cvd-ftx-perps": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "cvd-bitfinex-spot2": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "cvd-bitfinex-perps": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "cvd-bybit-perps": {
          "scaleMargins": {
            "top": 0.77,
            "bottom": 0.01
          },
          "indicators": [
            "CVD Bybit Perps"
          ]
        },
        "cvd-bybit-perps-copy-1": {
          "scaleMargins": {
            "top": 0.59,
            "bottom": 0.19
          },
          "indicators": [
            "CVD Bybit COIN"
          ]
        },
        "left": {
          "scaleMargins": {
            "top": 0,
            "bottom": 0.01
          },
          "indicators": [
            "Price"
          ]
        }
      },
      "layouting": false,
      "showIndicators": false,
      "timeframe": "180",
      "refreshRate": 10000,
      "showAlerts": true,
      "showAlertsLabel": true,
      "showLegend": true,
      "fillGapsWithEmpty": true,
      "showHorizontalGridlines": false,
      "horizontalGridlinesColor": "rgba(255,255,255,.1)",
      "showVerticalGridlines": false,
      "verticalGridlinesColor": "rgba(255,255,255,.1)",
      "showWatermark": false,
      "watermarkColor": "rgba(255,255,255,.1)",
      "showBorder": true,
      "borderColor": null,
      "showLeftScale": true,
      "showRightScale": true,
      "showTimeScale": true,
      "hiddenMarkets": {
        "BYBIT:BTCUSD": true,
        "BYBIT:BTCUSDT": false
      },
      "barSpacing": 3.935031052331109,
      "navigationState": {
        "tab": "script",
        "optionsQuery": "",
        "fontSizePx": 14
      },
      "_id": "chart6",
      "forceNormalizePrice": false
    },
    "chart8": {
      "indicatorsErrors": {},
      "indicators": {
        "price": {
          "enabled": true,
          "name": "Price",
          "script": "plotcandlestick(avg_ohlc(bar))",
          "options": {
            "priceScaleId": "right",
            "priceFormat": {
              "auto": true,
              "precision": 1,
              "minMove": 0.1
            },
            "priceLineVisible": true,
            "lastValueVisible": true,
            "borderVisible": true,
            "upColor": "rgba(255,255,255,0.76)",
            "downColor": "rgb(242,54,69)",
            "borderUpColor": "rgba(255,255,255,0.69)",
            "borderDownColor": "rgba(242,54,69,0.73)",
            "wickUpColor": "rgba(255,255,255,0.7)",
            "wickDownColor": "rgba(242,54,69,0.72)",
            "visible": true,
            "scaleMargins": {
              "top": 0.04,
              "bottom": 0.78
            }
          },
          "id": "price",
          "createdAt": 1648450392186,
          "updatedAt": 1649316348516,
          "series": [
            "price"
          ],
          "unsavedChanges": true,
          "navigationState": {
            "sections": [
              "position",
              "colors"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          },
          "uses": 1
        },
        "delta-binance-spot": {
          "script": "_vbuy = (BINANCE:btcusdt.vbuy+BINANCE:btcusdc.vbuy)\n\n_vsell = (BINANCE:btcusdt.vsell+BINANCE:btcusdc.vsell)\n\nvolume = _vbuy+_vsell\na = sma(Math.pow(volume,2),options.length)\nb = Math.pow(sum(volume,options.length),2)/Math.pow(options.length,2)\nstdev = Math.sqrt(a - b)\nbasis = sma(volume*1.5, 21)\ndev = 1 * stdev\ntreshold = basis\n\ndelta = _vbuy - _vsell\n\nplothistogram({ time: time, value: (delta), color: delta > 0 ? ( volume > treshold ? options.upColorHighVol : options.upColorLowVol) : ( volume > treshold ? options.downColorHighVol : options.downColorLowVol)}, title=\"Binance Spot\")",
          "id": "delta-binance-spot",
          "name": "Delta Binance Spot",
          "priceScaleId": "delta-binance-spot",
          "options": {
            "priceScaleId": "delta-binance-spot",
            "upColor": "rgb(0,150,136)",
            "downColor": "rgb(233,30,99)",
            "visible": true,
            "length": 7,
            "upColorHighVol": "rgb(255,255,255)",
            "upColorLowVol": "rgb(149,152,161)",
            "downColorHighVol": "rgb(242,54,69)",
            "downColorLowVol": "rgb(126,44,51)"
          },
          "series": [
            "delta-binance-spot"
          ],
          "displayName": "Delta Binance Spot",
          "navigationState": {
            "sections": [
              "position",
              "colors",
              "scriptOptions"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          },
          "unsavedChanges": false,
          "createdAt": 1649330197719,
          "updatedAt": 1657176479827
        },
        "delta-coinbase": {
          "script": "_vbuy = (COINBASE:BTC-USDC.vbuy+COINBASE:BTC-USD.vbuy+COINBASE:BTC-USDT.vbuy)\n\n_vsell = (COINBASE:BTC-USDC.vsell+COINBASE:BTC-USD.vsell+COINBASE:BTC-USDT.vsell)\n\nvolume = _vbuy+_vsell\na = sma(Math.pow(volume,2),options.length)\nb = Math.pow(sum(volume,options.length),2)/Math.pow(options.length,2)\nstdev = Math.sqrt(a - b)\nbasis = sma(volume*1.5, 21)\ndev = 1 * stdev\ntreshold = basis\n\ndelta = _vbuy - _vsell\n\nplothistogram({ time: time, value: (delta), color: delta > 0 ? ( volume > treshold ? options.upColorHighVol : options.upColorLowVol) : ( volume > treshold ? options.downColorHighVol : options.downColorLowVol)}, title=\"Coinbase Spot\")",
          "id": "delta-coinbase",
          "name": "Delta Coinbase",
          "priceScaleId": "delta-coinbase",
          "options": {
            "priceScaleId": "delta-coinbase",
            "color": "rgb(0,150,136)",
            "upColor": "rgb(0,150,136)",
            "downColor": "rgb(233,30,99)",
            "visible": true,
            "upColorHighVol": "rgb(254,254,254)",
            "upColorLowVol": "rgb(149,152,161)",
            "downColorHighVol": "rgb(242,54,69)",
            "downColorLowVol": "rgb(126,44,51)",
            "length": 7
          },
          "series": [
            "delta-coinbase"
          ],
          "displayName": "Delta Coinbase",
          "unsavedChanges": false,
          "createdAt": 1649329291710,
          "navigationState": {
            "sections": [
              "position",
              "colors",
              "scriptOptions",
              "defaultOptions"
            ],
            "tab": 0,
            "optionsQuery": "",
            "fontSize": 1
          },
          "updatedAt": 1657176486155
        },
        "delta-bybit-perps": {
          "script": "_vbuy = (BYBIT:BTCUSD.vbuy + BYBIT:BTCUSDT.vbuy)\n\n_vsell = (BYBIT:BTCUSD.vsell + BYBIT:BTCUSDT.vsell)\n\nvolume = _vbuy+_vsell\na = sma(Math.pow(volume,2),options.length)\nb = Math.pow(sum(volume,options.length),2)/Math.pow(options.length,2)\nstdev = Math.sqrt(a - b)\nbasis = sma(volume*1.5, 21)\ndev = 1 * stdev\ntreshold = basis\n\ndelta = _vbuy - _vsell\n\nplothistogram({ time: time, value: (delta), color: delta > 0 ? ( volume > treshold ? options.upColorHighVol : options.upColorLowVol) : ( volume > treshold ? options.downColorHighVol : options.downColorLowVol)}, title=\"Bybit Perp\")",
          "id": "delta-bybit-perps",
          "name": "Delta Bybit Perps",
          "priceScaleId": "delta-bybit-perps",
          "options": {
            "priceScaleId": "delta-bybit-perps",
            "upColor": "rgb(0,150,136)",
            "downColor": "rgb(233,30,99)",
            "visible": true,
            "upColorHighVol": "rgb(254,254,254)",
            "upColorLowVol": "rgb(149,152,161)",
            "downColorHighVol": "rgb(242,54,69)",
            "downColorLowVol": "rgb(126,44,51)",
            "length": 7
          },
          "series": [
            "delta-bybit-perps"
          ],
          "displayName": "Delta Bybit Perps",
          "unsavedChanges": true,
          "createdAt": 1649328916470,
          "updatedAt": 1657176496204,
          "navigationState": {
            "sections": [
              "position",
              "colors",
              "scriptOptions"
            ],
            "tab": 0,
            "optionsQuery": "",
            "fontSize": 1
          }
        },
        "delta-bitmex": {
          "script": "_vbuy = (BITMEX:XBTUSD.vbuy)\n\n_vsell = (BITMEX:XBTUSD.vsell)\n\n\nvolume = _vbuy+_vsell\na = sma(Math.pow(volume,2),options.length)\nb = Math.pow(sum(volume,options.length),2)/Math.pow(options.length,2)\nstdev = Math.sqrt(a - b)\nbasis = sma(volume*1.5, 21)\ndev = 1 * stdev\ntreshold = basis\n\ndelta = _vbuy - _vsell\n\nplothistogram({ time: time, value: (delta), color: delta > 0 ? ( volume > treshold ? options.upColorHighVol : options.upColorLowVol) : ( volume > treshold ? options.downColorHighVol : options.downColorLowVol)}, title=\"BitMex Perp\")",
          "id": "delta-bitmex",
          "name": "Delta BitMex",
          "priceScaleId": "delta-bitmex",
          "options": {
            "priceScaleId": "delta-bitmex",
            "upColor": "rgb(0,150,136)",
            "downColor": "rgb(233,30,99)",
            "visible": true,
            "length": 7,
            "upColorHighVol": "rgb(254,254,254)",
            "upColorLowVol": "rgb(149,152,161)",
            "downColorHighVol": "rgb(242,54,69)",
            "downColorLowVol": "rgb(126,44,51)"
          },
          "series": [
            "delta-bitmex"
          ],
          "displayName": "Delta BitMex",
          "unsavedChanges": false,
          "createdAt": 1649329019802,
          "navigationState": {
            "sections": [
              "position",
              "colors",
              "defaultOptions"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          },
          "updatedAt": 1657176506472
        },
        "delta-bitfinex-spot": {
          "script": "_vbuy = (BITFINEX:BTCUSD.vbuy)\n\n_vsell = (BITFINEX:BTCUSD.vsell)\n\n\nvolume = _vbuy+_vsell\na = sma(Math.pow(volume,2),options.length)\nb = Math.pow(sum(volume,options.length),2)/Math.pow(options.length,2)\nstdev = Math.sqrt(a - b)\nbasis = sma(volume*1.5, 21)\ndev = 1 * stdev\ntreshold = basis\n\ndelta = _vbuy - _vsell\n\nplothistogram({ time: time, value: (delta), color: delta > 0 ? ( volume > treshold ? options.upColorHighVol : options.upColorLowVol) : ( volume > treshold ? options.downColorHighVol : options.downColorLowVol)}, title=\"Bitfinex Perp\")",
          "id": "delta-bitfinex-spot",
          "name": "Delta BitFinex Spot",
          "priceScaleId": "delta-bitfinex-spot",
          "options": {
            "priceScaleId": "delta-bitfinex-spot",
            "upColor": "rgb(0,150,136)",
            "downColor": "rgb(233,30,99)",
            "visible": true,
            "upColorHighVol": "rgb(255,255,255)",
            "downColorLowVol": "rgb(126,44,51)",
            "upColorLowVol": "rgb(149,152,161)",
            "downColorHighVol": "rgb(242,54,69)",
            "length": 14
          },
          "series": [
            "delta-bitfinex-spot"
          ],
          "displayName": "Delta BitFinex Spot",
          "unsavedChanges": false,
          "createdAt": 1649419784878,
          "navigationState": {
            "sections": [
              "position",
              "colors"
            ],
            "tab": 0,
            "optionsQuery": "",
            "fontSize": 1
          },
          "updatedAt": 1657176525131
        }
      },
      "priceScales": {
        "right": {
          "scaleMargins": {
            "top": 0.04,
            "bottom": 0.78
          },
          "indicators": [
            "Price"
          ],
          "priceFormat": {
            "precision": 1,
            "minMove": 0.1
          }
        },
        "volume_liquidations": {
          "scaleMargins": {
            "top": 0.75,
            "bottom": 0.17
          }
        },
        "volume": {
          "scaleMargins": {
            "top": 0.84,
            "bottom": 0
          }
        },
        "delta-binance-spot": {
          "scaleMargins": {
            "top": 0.28,
            "bottom": 0.61
          },
          "indicators": [
            "Delta Binance Spot"
          ]
        },
        "cvd-coinbase": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "delta-coinbase": {
          "scaleMargins": {
            "top": 0.41,
            "bottom": 0.48
          },
          "indicators": [
            "Delta Coinbase"
          ]
        },
        "delta-bybit-perps": {
          "scaleMargins": {
            "top": 0.57,
            "bottom": 0.31
          },
          "indicators": [
            "Delta Bybit Perps"
          ]
        },
        "delta-bitmex": {
          "scaleMargins": {
            "top": 0.83,
            "bottom": 0.05
          },
          "indicators": [
            "Delta BitMex"
          ]
        },
        "delta-ftx-spot": {
          "scaleMargins": {
            "top": 0.4,
            "bottom": 0.49
          },
          "indicators": [
            "Delta FTX Spot"
          ]
        },
        "delta-ftx-perps": {
          "scaleMargins": {
            "top": 0.86,
            "bottom": 0.02
          },
          "indicators": [
            "Delta FTX Perps"
          ]
        },
        "delta-bitfinex-spot": {
          "scaleMargins": {
            "top": 0.69,
            "bottom": 0.19
          },
          "indicators": [
            "Delta BitFinex Spot"
          ]
        },
        "left": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        }
      },
      "layouting": false,
      "showIndicators": false,
      "timeframe": "180",
      "refreshRate": 1000,
      "showAlerts": true,
      "showAlertsLabel": true,
      "showLegend": false,
      "fillGapsWithEmpty": true,
      "showHorizontalGridlines": false,
      "horizontalGridlinesColor": "rgba(255,255,255,.1)",
      "showVerticalGridlines": false,
      "verticalGridlinesColor": "rgba(255,255,255,.1)",
      "showWatermark": false,
      "watermarkColor": "rgba(255,255,255,.1)",
      "showBorder": true,
      "borderColor": null,
      "showLeftScale": false,
      "showRightScale": true,
      "showTimeScale": true,
      "hiddenMarkets": {},
      "barSpacing": 4.292348758453026,
      "navigationState": {
        "tab": "script",
        "optionsQuery": "",
        "fontSizePx": 14
      },
      "_id": "chart8",
      "forceNormalizePrice": false
    },
    "stats2": {
      "granularity": 5000,
      "window": 60000,
      "enableChart": false,
      "buckets": {
        "trades": {
          "id": "trades",
          "name": "TRADES",
          "input": "cbuy + csell",
          "enabled": true,
          "color": "rgba(255, 255, 255, .25)",
          "precision": 2,
          "type": "line"
        },
        "vold": {
          "id": "vold",
          "name": "VOLUME",
          "input": "vbuy + vsell",
          "enabled": true,
          "color": "#40d745",
          "type": "area",
          "conditionnalColor": false
        },
        "tradesd": {
          "id": "tradesd",
          "name": "TRADES Δ",
          "input": "cbuy - csell",
          "enabled": false,
          "color": "#2196f3",
          "precision": 2,
          "type": "line"
        },
        "1hliq": {
          "id": "1hliq",
          "name": "1H LIQUIDATIONS Δ",
          "window": 3600000,
          "input": "lbuy-lsell",
          "enabled": false,
          "color": "value>0?'#43a047':'#f44336'",
          "conditionnalColor": true,
          "type": "histogram"
        }
      },
      "_id": "stats2"
    },
    "trades3": {
      "liquidations": [
        {
          "id": "liquidation_threshold",
          "amount": 246500,
          "buyColor": "rgba(65,0,33,0.25)",
          "sellColor": "rgba(134,136,135,0.24)",
          "buyAudio": "var srqtR = Math.min(1, gain / 4)\nplay(329.63, srqtR, srqtR*2,0,,,'sine')\nplay(329.63, srqtR, srqtR*4,0.08,,,'sine')",
          "sellAudio": "var srqtR = Math.min(1, gain / 6)\nplay(440, srqtR, srqtR*2,0,,,'sine')\nplay(440, srqtR, srqtR*4,0.08,,,'sine')"
        },
        {
          "id": "liquidation_significant",
          "amount": 493000,
          "buyColor": "rgba(65,0,33,0.5)",
          "sellColor": "rgba(209,212,220,0.33)",
          "buyAudio": "var srqtR = Math.min(1, gain / 4)\nplay(329.63, srqtR, srqtR*4,0,,,'sine')\nplay(329.63, srqtR, srqtR*6,0.08,,,'sine')",
          "sellAudio": "var srqtR = Math.min(1, gain / 6)\nplay(440, srqtR, srqtR*4,0,,,'sine')\nplay(440, srqtR, srqtR*6,0.08,,,'sine')"
        },
        {
          "id": "liquidation_huge",
          "amount": 986000,
          "buyGif": "flying money",
          "sellGif": "flying money",
          "buyColor": "rgba(65,0,33,0.8)",
          "sellColor": "rgba(255,255,255,0.68)",
          "buyAudio": "var srqtR = Math.min(1, gain / 4)\nplay(329.63, srqtR, srqtR*4,0,,,'sine')\nplay(329.63, srqtR, srqtR*8,0.08,,,'sine')",
          "sellAudio": "var srqtR = Math.min(1, gain / 6)\nplay(440, srqtR, srqtR*4,0,,,'sine')\nplay(440, srqtR, srqtR*8,0.08,,,'sine')"
        },
        {
          "id": "liquidation_rare",
          "amount": 4930000,
          "buyGif": "explosion",
          "sellGif": "explosion",
          "buyColor": "rgb(101,0,52)",
          "sellColor": "rgb(255,255,255)",
          "buyAudio": "var srqtR = Math.min(1, gain / 10)\nplay(329.63, srqtR, 1,0,,,'sine')\nplay(329.63, srqtR, srqtR*10,0.08,,,'sine')",
          "sellAudio": "var srqtR = Math.min(1, gain / 10)\nplay(440, srqtR, 1,0,,,'sine')\nplay(440, srqtR, srqtR*10,0.08,,,'sine')",
          "max": false
        }
      ],
      "thresholds": [
        {
          "id": "threshold",
          "amount": 50000,
          "buyColor": "rgba(128,130,135,0.5)",
          "sellColor": "rgba(169,47,58,0.5)",
          "buyAudio": "var srqtR = Math.min(1, gain / 4)\nplay(329.63, srqtR, srqtR*2,0,,,'sine')\nplay(329.63, srqtR, srqtR*4,0.08,,,'sine')",
          "sellAudio": "var srqtR = Math.min(1, gain / 6)\nplay(440, srqtR, srqtR*2,0,,,'sine')\nplay(440, srqtR, srqtR*4,0.08,,,'sine')"
        },
        {
          "id": "significant",
          "amount": 123250,
          "buyColor": "rgba(209,212,220,0.8)",
          "sellColor": "rgba(239,67,82,0.8)",
          "buyAudio": "var srqtR = Math.min(1, gain / 4)\nplay(329.63, srqtR, srqtR*4,0,,,'sine')\nplay(329.63, srqtR, srqtR*6,0.08,,,'sine')",
          "sellAudio": "var srqtR = Math.min(1, gain / 6)\nplay(440, srqtR, srqtR*4,0,,,'sine')\nplay(440, srqtR, srqtR*6,0.08,,,'sine')"
        },
        {
          "id": "huge",
          "amount": 493000,
          "gif": "rekt",
          "buyColor": "rgba(209,212,220,1)",
          "sellColor": "rgba(239,67,82,1)",
          "buyAudio": "var srqtR = Math.min(1, gain / 4)\nplay(329.63, srqtR, srqtR*4,0,,,'sine')\nplay(329.63, srqtR, srqtR*8,0.08,,,'sine')",
          "sellAudio": "var srqtR = Math.min(1, gain / 6)\nplay(440, srqtR, srqtR*4,0,,,'sine')\nplay(440, srqtR, srqtR*8,0.08,,,'sine')"
        },
        {
          "id": "rare",
          "amount": 4930000,
          "gif": "explosion",
          "buyColor": "rgba(221,224,229,1)",
          "sellColor": "rgba(243,140,146,1)",
          "buyAudio": "var srqtR = Math.min(1, gain / 10)\nplay(329.63, srqtR, 1,0,,,'sine')\nplay(329.63, srqtR, srqtR*10,0.08,,,'sine')",
          "sellAudio": "var srqtR = Math.min(1, gain / 10)\nplay(440, srqtR, 1,0,,,'sine')\nplay(440, srqtR, srqtR*10,0.08,,,'sine')",
          "max": false
        }
      ],
      "audioThreshold": "100%",
      "multipliers": {},
      "maxRows": 100,
      "muted": false,
      "audioPitch": null,
      "audioVolume": null,
      "showPairs": false,
      "showTrades": true,
      "showLiquidations": false,
      "showLogos": true,
      "monochromeLogos": false,
      "showTimeAgo": true,
      "showPrices": true,
      "showHistograms": true,
      "thresholdsMultipler": 4.93,
      "_id": "trades3",
      "showThresholdsAsTable": true
    },
    "chart copy 1": {
      "indicatorsErrors": {},
      "indicators": {
        "price": {
          "script": "plotcandlestick(avg_ohlc(bar))",
          "enabled": true,
          "name": "Price",
          "options": {
            "priceScaleId": "right",
            "priceFormat": {
              "auto": true,
              "precision": 1,
              "minMove": 0.1
            },
            "priceLineVisible": true,
            "lastValueVisible": true,
            "borderVisible": true,
            "upColor": "rgba(255,255,255,0.76)",
            "downColor": "rgb(242,54,69)",
            "borderUpColor": "rgba(255,255,255,0.69)",
            "borderDownColor": "rgba(242,54,69,0.73)",
            "wickUpColor": "rgba(255,255,255,0.7)",
            "wickDownColor": "rgba(242,54,69,0.72)",
            "visible": true,
            "scaleMargins": {
              "top": 0.1,
              "bottom": 0.25
            }
          },
          "id": "price",
          "createdAt": 1648450392186,
          "updatedAt": 1649247094510,
          "series": [
            "price"
          ],
          "unsavedChanges": true,
          "navigationState": {
            "sections": [
              "position",
              "colors"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          },
          "displayName": "Price"
        },
        "cvd-binance-spot": {
          "script": "plotline(sma(cum((BINANCE:btcusdt.vbuy) - (BINANCE:btcusdt.vsell)), 3), title=Binance Spot)",
          "id": "cvd-binance-spot",
          "name": "CVD Binance Spot",
          "priceScaleId": "cvd-binance-spot",
          "options": {
            "priceScaleId": "cvd-binance-spot",
            "color": "rgb(251,192,45)",
            "visible": true,
            "lineWidth": 1
          },
          "series": [
            "cvd-binance-spot"
          ],
          "displayName": "CVD Binance Spot",
          "unsavedChanges": false,
          "createdAt": 1649239311989,
          "navigationState": {
            "sections": [
              "position",
              "colors",
              "defaultOptions"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          },
          "updatedAt": 1650520845952,
          "uses": 1
        },
        "cvd-binance-perps": {
          "script": "plotline(sma(cum((BINANCE_FUTURES:btcusd_perp.vbuy + BINANCE_FUTURES:btcusdt.vbuy) - (BINANCE_FUTURES:btcusd_perp.vsell + BINANCE_FUTURES:btcusdt.vsell)), 3), title=Binance Perps)",
          "id": "cvd-binance-perps",
          "name": "CVD Binance Perps",
          "priceScaleId": "cvd-binance-perps",
          "options": {
            "priceScaleId": "cvd-binance-perps",
            "color": "rgb(251,192,45)",
            "lineStyle": 1,
            "visible": true,
            "lineWidth": 1
          },
          "series": [
            "cvd-binance-perps"
          ],
          "displayName": "CVD Binance Perps",
          "unsavedChanges": false,
          "createdAt": 1649239562565,
          "navigationState": {
            "sections": [
              "position",
              "colors",
              "defaultOptions",
              "format"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          },
          "updatedAt": 1650520852092,
          "uses": 1
        }
      },
      "priceScales": {
        "right": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.25
          },
          "indicators": [
            "Price"
          ],
          "priceFormat": {
            "precision": 1,
            "minMove": 0.1
          }
        },
        "volume_liquidations": {
          "scaleMargins": {
            "top": 0.75,
            "bottom": 0.17
          }
        },
        "volume": {
          "scaleMargins": {
            "top": 0.84,
            "bottom": 0
          }
        },
        "cvd-coinbase": {
          "scaleMargins": {
            "top": 0.11,
            "bottom": 0
          },
          "indicators": [
            "CVD Coinbase"
          ]
        },
        "cvd-binance-spot": {
          "scaleMargins": {
            "top": 0.77,
            "bottom": 0.04
          },
          "indicators": [
            "CVD Binance Spot"
          ]
        },
        "cvd-binance-perps": {
          "scaleMargins": {
            "top": 0.59,
            "bottom": 0.19
          },
          "indicators": [
            "CVD Binance Perps"
          ]
        },
        "left": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "price": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        }
      },
      "layouting": false,
      "showIndicators": false,
      "timeframe": "180",
      "refreshRate": 10000,
      "showAlerts": true,
      "showAlertsLabel": true,
      "showLegend": false,
      "fillGapsWithEmpty": true,
      "showHorizontalGridlines": false,
      "horizontalGridlinesColor": "rgba(255,255,255,.1)",
      "showVerticalGridlines": false,
      "verticalGridlinesColor": "rgba(255,255,255,.1)",
      "showWatermark": false,
      "watermarkColor": "rgba(255,255,255,.1)",
      "showBorder": true,
      "borderColor": null,
      "showLeftScale": false,
      "showRightScale": true,
      "showTimeScale": true,
      "hiddenMarkets": {
        "BITFINEX:BTCUSD": true,
        "BITMEX:XBTUSD": true,
        "BYBIT:BTCUSD": true,
        "COINBASE:BTC-USD": true,
        "DERIBIT:BTC-PERPETUAL": true,
        "FTX:BTC-PERP": true,
        "FTX:BTC/USD": true,
        "BITFINEX:BTCUST": true,
        "BITFINEX:BTCF0:USTF0": true,
        "BITMEX:XBTUSDT": true,
        "BYBIT:BTCUSDT": true,
        "COINBASE:BTC-USDT": true,
        "FTX:BTC/USDT": true,
        "BITSTAMP:btcusd": true,
        "POLONIEX:USDT_BTC": true,
        "KRAKEN:XBT/USDT": true,
        "KRAKEN:XBT/USD": true,
        "BINANCE_FUTURES:btcusd_perp": false,
        "BINANCE:btcusdt": false
      },
      "barSpacing": 1.973052336708332,
      "navigationState": {
        "tab": "script",
        "optionsQuery": "",
        "fontSizePx": 14
      },
      "_id": "chart copy 1",
      "forceNormalizePrice": false
    },
    "trades copy 1": {
      "liquidations": [
        {
          "id": "liquidation_threshold",
          "amount": 100000,
          "buyColor": "rgba(202,202,202,0.5)",
          "sellColor": "rgba(255,0,23,0.2)",
          "buyAudio": "playurl(https://d7d3471nr939s.cloudfront.net/DeepHouseSessions_Noiz_SP/MP3/One+Shots/Bongo_08_73_SP.mp3?cb=6cfb91bb-f15f-432a-bfae-17ef22b22005, gain * .75)",
          "sellAudio": "playurl(https://d7d3471nr939s.cloudfront.net/DeepHouseSessions_Noiz_SP/MP3/One+Shots/Bongo_13_73_SP.mp3?cb=6ff3b374-9c98-4d3e-9f8e-4f02eef40c8e, gain * .75)"
        },
        {
          "id": "liquidation_significant",
          "amount": 500000,
          "buyColor": "rgba(255,255,255,0.42)",
          "sellColor": "rgba(228,24,42,0.36)",
          "buyAudio": "playurl(https://d7d3471nr939s.cloudfront.net/SaharanRhythms_Noiz_SP/MP3/One+Shots/BongoHighFlam_SP_223_01.mp3?cb=4d88d832-850d-4ad1-9e89-a23b3cbdfb89, gain)",
          "sellAudio": "playurl(https://d7d3471nr939s.cloudfront.net/SaharanRhythms_Noiz_SP/MP3/One+Shots/BongoLowFlamQuiet_SP_223_01.mp3?cb=ae87962f-a948-484e-a2dc-392c41f14105, gain)",
          "buy": "rgba(255,255,255,0.27)"
        },
        {
          "id": "liquidation_huge",
          "amount": 1000000,
          "buyGif": "flying money",
          "sellGif": "flying money",
          "buyColor": "rgba(255,255,255,0.67)",
          "sellColor": "rgba(213,43,43,0.8)",
          "buyAudio": "playurl(https://d7d3471nr939s.cloudfront.net/SaharanRhythms_Noiz_SP/MP3/One+Shots/BongoHighRoll_SP_223_01.mp3?cb=6d81f0bb-9e13-4404-aae5-02bce10d2a0a, gain)",
          "sellAudio": "playurl(https://d7d3471nr939s.cloudfront.net/SaharanRhythms_Noiz_SP/MP3/One+Shots/BongoLowRoll_SP_223_01.mp3?cb=39110d56-d2cd-4be7-8e1f-d2f1c9f677cf, gain)"
        },
        {
          "id": "liquidation_rare",
          "amount": 2500000,
          "buyGif": "explosion",
          "sellGif": "explosion",
          "buyColor": "rgb(255,255,255)",
          "sellColor": "rgb(255,0,30)",
          "buyAudio": "playurl(https://d7d3471nr939s.cloudfront.net/CinematicPercussion_Noiiz_SP/MP3/One+Shots/Chimes+&+Bells/TubularBell_5_Mallet_395_SP.mp3?cb=2baef87d-892e-4704-8068-26d15072850c, gain / 2, 30)",
          "sellAudio": "playurl(https://d7d3471nr939s.cloudfront.net/CinematicPercussion_Noiiz_SP/MP3/One+Shots/Chimes+&+Bells/TubularBell_7_Mallet_395_SP.mp3?cb=dfd72abd-0bdc-4d0e-8085-dea85017a49c, gain / 2, 20)"
        }
      ],
      "thresholds": [
        {
          "id": "zf1lkbkk",
          "amount": 1984,
          "buyColor": "rgba(105,106,110,0.5)",
          "sellColor": "rgba(146,41,50,0.5)",
          "buyAudio": "play(659.26, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0,,0);\nplay(830.6, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0.08,,0);\nplay(987.76, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0.16,,0);\nplay(1318.52, 0.05 + gain / 10, 0.1 + ratio * 0.13, 0.24,,0)",
          "sellAudio": "play(493.88, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0,,0);\nplay(369.99, 0.05 + gain * 1.5 / 10, 0.2, 0.08,,0);\nplay(293.66, 0.05 + gain * 1.5 / 10, 0.2, 0.16,,0);\nplay(246.94, 0.05 + gain * 1.5 / 10, 0.1 + ratio * 0.13, 0.24,,0)",
          "buy": "rgba(105,106,110,0.5)"
        },
        {
          "id": "threshold",
          "amount": 5000,
          "buyColor": "rgba(209,212,220,0.8)",
          "sellColor": "rgba(239,67,82,0.8)",
          "buyAudio": "play(659.26, gain / 10, 0.1 + gain / 7)",
          "sellAudio": "play(493.88, gain * 1.5 / 10, 0.1 + gain / 7)",
          "buy": "rgba(119, 148, 92, 0.25)"
        },
        {
          "id": "significant",
          "amount": 30000,
          "buyColor": "rgba(196,198,206,1)",
          "sellColor": "rgba(224,63,77,1)",
          "buyAudio": "play(659.26, 0.05 + gain / 10, 0.2 + ratio * 0.23,0,,0);\nplay(830.6, 0.05 + gain / 10, 0.2 + ratio * 0.23, 0.08,,0)",
          "sellAudio": "play(493.88, 0.05 + gain * 1.5 / 10, 0.2 + ratio * 0.23,0,,0);\nplay(392, 0.05 + gain * 1.5 / 10, 0.2 + ratio * 0.23, 0.08,,0)"
        },
        {
          "id": "huge",
          "amount": 100000,
          "buyGif": "cash bullish",
          "sellGif": "cash bearish",
          "buyColor": "rgba(215,218,225,1)",
          "sellColor": "rgba(241,110,118,1)",
          "buyAudio": "play(659.26, 0.05 + gain / 25, 0.1 + ratio * 0.23, 0,,0);\nplay(830.6, 0.05 + gain / 25, 0.1 + ratio * 0.23, 0.08,,0);\nplay(987.76, 0.05 + gain / 25, 0.1 + ratio * 0.23, 0.16,,0);\nplay(1318.52, 0.05 + gain / 10, 0.1 + ratio * 0.23, 0.24,,0)",
          "sellAudio": "play(493.88, 0.05 + gain / 25, 0.1 + ratio * 0.23, 0,,0);\nplay(369.99, 0.05 + gain * 1.5 / 10, 0.2, 0.08,,0);\nplay(293.66, 0.05 + gain * 1.5 / 10, 0.2, 0.16,,0);\nplay(246.94, 0.05 + gain * 1.5 / 10, 0.1 + ratio * 0.23, 0.24,,0)"
        },
        {
          "id": "rare",
          "amount": 1000000,
          "buyGif": "explosion",
          "sellGif": "explosion",
          "buyColor": "rgba(227,229,234,1)",
          "sellColor": "rgba(245,165,169,1)",
          "buyAudio": "play(659.26, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0,,0);\nplay(830.6, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0.08,,0);\nplay(987.76, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0.16,,0);\nplay(1318.52, 0.05 + gain / 10, 0.1 + ratio * 0.13, 0.24,,0)",
          "sellAudio": "play(493.88, 0.05 + gain / 25, 0.1 + ratio * 0.13, 0,,0);\nplay(369.99, 0.05 + gain * 1.5 / 10, 0.2, 0.08,,0);\nplay(293.66, 0.05 + gain * 1.5 / 10, 0.2, 0.16,,0);\nplay(246.94, 0.05 + gain * 1.5 / 10, 0.1 + ratio * 0.13, 0.24,,0)"
        }
      ],
      "audioThreshold": "100%",
      "multipliers": {
        "BITSTAMP:btcusdt": 0.86
      },
      "maxRows": 100,
      "muted": false,
      "audioPitch": null,
      "audioVolume": null,
      "showPairs": false,
      "showTrades": false,
      "showLiquidations": true,
      "showLogos": true,
      "monochromeLogos": false,
      "showTimeAgo": true,
      "showPrices": true,
      "showHistograms": true,
      "thresholdsMultipler": 0.1,
      "_id": "trades copy 1",
      "showThresholdsAsTable": true
    },
    "prices": {
      "animateSort": true,
      "showPairs": false,
      "showVolume": true,
      "showVolumeDelta": true,
      "period": "0",
      "showChange": false,
      "showPrice": false,
      "sortType": "volume",
      "sortOrder": -1,
      "_id": "prices"
    },
    "prices copy 1": {
      "animateSort": false,
      "showPairs": false,
      "showVolume": true,
      "showVolumeDelta": true,
      "period": "0",
      "showChange": false,
      "showPrice": false,
      "sortType": "volume",
      "sortOrder": -1,
      "_id": "prices copy 1"
    },
    "chart copy 2": {
      "indicatorsErrors": {},
      "indicators": {
        "price": {
          "enabled": true,
          "name": "Price",
          "script": "plotcandlestick(avg_ohlc(bar))",
          "options": {
            "priceScaleId": "right",
            "priceFormat": {
              "auto": true,
              "precision": 1,
              "minMove": 0.1
            },
            "priceLineVisible": true,
            "lastValueVisible": true,
            "borderVisible": true,
            "upColor": "rgba(255,255,255,0.76)",
            "downColor": "rgb(242,54,69)",
            "borderUpColor": "rgba(255,255,255,0.69)",
            "borderDownColor": "rgba(242,54,69,0.73)",
            "wickUpColor": "rgba(255,255,255,0.7)",
            "wickDownColor": "rgba(242,54,69,0.72)",
            "visible": true,
            "scaleMargins": {
              "top": 0.2,
              "bottom": 0.22
            }
          },
          "id": "price",
          "createdAt": 1648450392186,
          "updatedAt": 1649247094510,
          "series": [
            "price"
          ],
          "unsavedChanges": true,
          "navigationState": {
            "sections": [
              "position",
              "colors"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          }
        },
        "cvd-btc-spot": {
          "script": "// removed Binance given persistent negative flow\n// BINANCE:btcusdt.vbuy+BINANCE:btcusdc.vbuy+\n//BINANCE:btcusdt.vsell+BINANCE:btcusdc.vsell+\n\nline(cum((BINANCE:btcusdt.vbuy+BINANCE:btcusdc.vbuy+BITFINEX:BTCUSD.vbuy+BITSTAMP:btcusd.vbuy+BITSTAMP:btcusdt.vbuy+BITSTAMP:btcusdc.vbuy+COINBASE:BTC-USDC.vbuy+COINBASE:BTC-USD.vbuy+COINBASE:BTC-USDT.vbuy+FTX:BTC/USD.vbuy+FTX:BTC/USDT.vbuy+HUOBI:btcusdt.vbuy+HUOBI:btcusdc.vbuy+KRAKEN:XBT/USDC.vbuy+KRAKEN:XBT/USDT.vbuy+KRAKEN:XBT/USD.vbuy+OKEX:BTC-USDT.vbuy+OKEX:BTC-USDC.vbuy+POLONIEX:USDT_BTC.vbuy+POLONIEX:USDC_BTC.vbuy)-(BINANCE:btcusdt.vsell+BINANCE:btcusdc.vsell+BITFINEX:BTCUSD.vsell+BITSTAMP:btcusd.vsell+BITSTAMP:btcusdt.vsell+BITSTAMP:btcusdc.vsell+COINBASE:BTC-USDC.vsell+COINBASE:BTC-USD.vsell+COINBASE:BTC-USDT.vsell+FTX:BTC/USD.vsell+FTX:BTC/USDT.vsell+HUOBI:btcusdt.vsell+HUOBI:btcusdc.vsell+KRAKEN:XBT/USDC.vsell+KRAKEN:XBT/USDT.vsell+KRAKEN:XBT/USD.vsell+OKEX:BTC-USDT.vsell+OKEX:BTC-USDC.vsell+POLONIEX:USDT_BTC.vsell+POLONIEX:USDC_BTC.vsell)), title=SPOT)",
          "id": "cvd-btc-spot",
          "name": "CVD BTC Spot",
          "priceScaleId": "cvd-btc-spot",
          "options": {
            "priceScaleId": "cvd-btc-spot",
            "color": "rgb(209,212,220)",
            "lineStyle": 1,
            "lineWidth": 1,
            "visible": false
          },
          "series": [
            "cvd-btc-spot"
          ],
          "displayName": "CVD BTC Spot",
          "unsavedChanges": false,
          "createdAt": 1649233314184,
          "navigationState": {
            "sections": [
              "position",
              "format",
              "defaultOptions",
              "colors"
            ],
            "tab": "#options",
            "optionsQuery": "",
            "fontSize": 1
          },
          "updatedAt": 1650372212170
        },
        "cvd-btc-perp": {
          "script": "line(cum((BINANCE_FUTURES:btcusdt.vbuy+BINANCE_FUTURES:btcusd_perp.vbuy+BITFINEX:BTCF0:USTF0.vbuy+BITMEX:XBTUSD.vbuy+BYBIT:BTCUSD.vbuy+BYBIT:BTCUSDT.vbuy+DERIBIT:BTC-PERPETUAL.vbuy+FTX:BTC-PERP.vbuy+HUOBI:BTC-USD.vbuy+KRAKEN:PI_XBTUSD.vbuy+OKEX:BTC-USDT-SWAP.vbuy+OKEX:BTC-USD-SWAP.vbuy)- (BINANCE_FUTURES:btcusdt.vsell+BINANCE_FUTURES:btcusd_perp.vsell+BITFINEX:BTCF0:USTF0.vsell+BITMEX:XBTUSD.vsell+BYBIT:BTCUSD.vsell+BYBIT:BTCUSDT.vsell+DERIBIT:BTC-PERPETUAL.vsell+FTX:BTC-PERP.vsell+HUOBI:BTC-USD.vsell+KRAKEN:PI_XBTUSD.vsell+OKEX:BTC-USDT-SWAP.vsell+OKEX:BTC-USD-SWAP.vsell)), title=PERP)",
          "id": "cvd-btc-perp",
          "name": "CVD BTC Perp",
          "priceScaleId": "cvd-btc-perp",
          "options": {
            "priceScaleId": "cvd-btc-perp",
            "color": "rgb(255,241,118)",
            "lineStyle": 1,
            "lineWidth": 1,
            "visible": false,
            "scaleMargins": {
              "top": 0.27,
              "bottom": 0.46
            }
          },
          "series": [
            "cvd-btc-perp"
          ],
          "displayName": "CVD BTC Perp",
          "unsavedChanges": false,
          "createdAt": 1649233375756,
          "navigationState": {
            "sections": [
              "position",
              "format",
              "defaultOptions",
              "colors"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          },
          "updatedAt": 1649408437745
        },
        "delta-spot": {
          "script": "_vbuy = (BINANCE:btcusdt.vbuy+BINANCE:btcusdc.vbuy+BITFINEX:BTCUSD.vbuy+BITSTAMP:btcusd.vbuy+BITSTAMP:btcusdt.vbuy+BITSTAMP:btcusdc.vbuy+COINBASE:BTC-USDC.vbuy+COINBASE:BTC-USD.vbuy+COINBASE:BTC-USDT.vbuy+FTX:BTC/USD.vbuy+FTX:BTC/USDT.vbuy+HUOBI:btcusdt.vbuy+HUOBI:btcusdc.vbuy+KRAKEN:XBT/USDC.vbuy+KRAKEN:XBT/USDT.vbuy+KRAKEN:XBT/USD.vbuy+OKEX:BTC-USDT.vbuy+OKEX:BTC-USDC.vbuy+POLONIEX:USDT_BTC.vbuy+POLONIEX:USDC_BTC.vbuy)\n\n_vsell = (BINANCE:btcusdt.vsell+BINANCE:btcusdc.vsell+BITFINEX:BTCUSD.vsell+BITSTAMP:btcusd.vsell+BITSTAMP:btcusdt.vsell+BITSTAMP:btcusdc.vsell+COINBASE:BTC-USDC.vsell+COINBASE:BTC-USD.vsell+COINBASE:BTC-USDT.vsell+FTX:BTC/USD.vsell+FTX:BTC/USDT.vsell+HUOBI:btcusdt.vsell+HUOBI:btcusdc.vsell+KRAKEN:XBT/USDC.vsell+KRAKEN:XBT/USDT.vsell+KRAKEN:XBT/USD.vsell+OKEX:BTC-USDT.vsell+OKEX:BTC-USDC.vsell+POLONIEX:USDT_BTC.vsell+POLONIEX:USDC_BTC.vsell)\n\nvolume = _vbuy+_vsell\na = sma(Math.pow(volume,2),options.length)\nb = Math.pow(sum(volume,options.length),2)/Math.pow(options.length,2)\nstdev = Math.sqrt(a - b)\nbasis = sma(volume*1.5, 21)\ndev = 1 * stdev\ntreshold = basis\n\ndelta = _vbuy - _vsell\n\nplothistogram({ time: time, value: (delta), color: delta > 0 ? ( volume > treshold ? options.upColorHighVol : options.upColorLowVol) : ( volume > treshold ? options.downColorHighVol : options.downColorLowVol)}, title=\"Delta Spot\")",
          "id": "delta-spot",
          "name": "Delta Spot",
          "priceScaleId": "delta-spot",
          "options": {
            "priceScaleId": "delta-spot",
            "upColor": "rgb(0,150,136)",
            "downColor": "rgb(236,64,122)",
            "visible": false,
            "upColorLowVol": "rgb(149,152,161)",
            "downColorLowVol": "rgb(126,44,51)",
            "upColorHighVol": "rgb(255,255,255)",
            "downColorHighVol": "rgb(242,54,69)",
            "length": 7
          },
          "series": [
            "delta-spot"
          ],
          "displayName": "Delta Spot",
          "unsavedChanges": false,
          "createdAt": 1649243605267,
          "navigationState": {
            "sections": [
              "position",
              "colors",
              "defaultOptions",
              "scriptOptions"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          },
          "updatedAt": 1657176243836
        },
        "delta-perps": {
          "script": "_vbuy = (BINANCE_FUTURES:btcusdt.vbuy+BINANCE_FUTURES:btcusd_perp.vbuy+BITFINEX:BTCF0:USTF0.vbuy+BITMEX:XBTUSD.vbuy+BYBIT:BTCUSD.vbuy+BYBIT:BTCUSDT.vbuy+DERIBIT:BTC-PERPETUAL.vbuy+FTX:BTC-PERP.vbuy+HUOBI:BTC-USD.vbuy+KRAKEN:PI_XBTUSD.vbuy+OKEX:BTC-USDT-SWAP.vbuy+OKEX:BTC-USD-SWAP.vbuy)\n\n_vsell = (BINANCE_FUTURES:btcusdt.vsell+BINANCE_FUTURES:btcusd_perp.vsell+BITFINEX:BTCF0:USTF0.vsell+BITMEX:XBTUSD.vsell+BYBIT:BTCUSD.vsell+BYBIT:BTCUSDT.vsell+DERIBIT:BTC-PERPETUAL.vsell+FTX:BTC-PERP.vsell+HUOBI:BTC-USD.vsell+KRAKEN:PI_XBTUSD.vsell+OKEX:BTC-USDT-SWAP.vsell+OKEX:BTC-USD-SWAP.vsell)\n\nvolume = _vbuy+_vsell\na = sma(Math.pow(volume,2),options.length)\nb = Math.pow(sum(volume,options.length),2)/Math.pow(options.length,2)\nstdev = Math.sqrt(a - b)\nbasis = sma(volume*1.5, 21)\ndev = 1 * stdev\ntreshold = basis\n\ndelta = _vbuy - _vsell\n\nplothistogram({ time: time, value: (delta), color: delta > 0 ? ( volume > treshold ? options.upColorHighVol : options.upColorLowVol) : ( volume > treshold ? options.downColorHighVol : options.downColorLowVol)}, title=\"Delta Perps\")",
          "id": "delta-perps",
          "name": "Delta Perps",
          "priceScaleId": "delta-perps",
          "options": {
            "priceScaleId": "delta-perps",
            "upColor": "rgb(100,181,246)",
            "downColor": "rgb(239,83,80)",
            "visible": false,
            "upColorHighVol": "rgb(254,254,254)",
            "upColorLowVol": "rgb(149,152,161)",
            "downColorHighVol": "rgb(126,44,51)",
            "downColorLowVol": "rgb(242,54,69)",
            "length": 7,
            "lastValueVisible": false,
            "priceLineVisible": false
          },
          "series": [
            "delta-perps"
          ],
          "displayName": "Delta Perps",
          "unsavedChanges": false,
          "createdAt": 1649243704762,
          "navigationState": {
            "sections": [
              "position",
              "colors",
              "scriptOptions",
              "format",
              "defaultOptions"
            ],
            "tab": "#script",
            "optionsQuery": "",
            "fontSize": 1
          },
          "updatedAt": 1657176280517
        },
        "liquidations1": {
          "script": "plothistogram(lbuy, color=options.upColor)\nplothistogram(-lsell, color=options.downColor)\nplotline(800000)\nplotline(-800000)\nplotline(4000000)\nplotline(-4000000)",
          "name": "Liquidations",
          "options": {
            "priceScaleId": "volume_liquidations",
            "priceFormat": {
              "type": "volume"
            },
            "upColor": "rgb(209,212,220)",
            "downColor": "rgb(218,18,34)",
            "scaleMargins": {
              "top": 0.6,
              "bottom": 0.15
            },
            "color": "rgb(255,255,255)",
            "lineWidth": 1,
            "visible": false
          },
          "id": "liquidations1",
          "priceScaleId": "right",
          "series": [
            "liquidations1",
            "2fytyhe2",
            "qjcvhzyv",
            "vu2omf56",
            "0t79zxzq",
            "btqtabrz"
          ],
          "displayName": "Liquidations",
          "unsavedChanges": false,
          "preview": {},
          "createdAt": 1681846002679,
          "updatedAt": 1681846178510
        },
        "volume1": {
          "script": "plothistogram({ time: time, value: Math.abs(vbuy-vsell), color: vbuy - vsell > 0 ? options.upColor : options.downColor})\nplotline(65000000)",
          "name": "Volume Δ",
          "options": {
            "priceScaleId": "volume",
            "priceFormat": {
              "type": "volume",
              "minMove": "0.01",
              "precision": 2
            },
            "upColor": "rgb(231,231,231)",
            "downColor": "#EB1E2F",
            "priceLineVisible": false,
            "lastValueVisible": false,
            "visible": false,
            "scaleMargins": {
              "top": 0.88,
              "bottom": 0
            }
          },
          "id": "volume1",
          "priceScaleId": "right",
          "series": [
            "volume1",
            "141b0kto"
          ],
          "displayName": "Volume Δ",
          "unsavedChanges": false
        },
        "shm": {
          "script": "// © Violent\n// https://www.tradingview.com/script/7PRbCBjk-Stochastic-Heat-Map/\n\nvar stoch1 = ema(stoch($price.close, $price.high, $price.low, 1 * options.stochMultiplier), 1 + options.emaLength)\nvar stoch2 = ema(stoch($price.close, $price.high, $price.low, 2 * options.stochMultiplier), 2 + options.emaLength)\nvar stoch3 = ema(stoch($price.close, $price.high, $price.low, 3 * options.stochMultiplier), 3 + options.emaLength)\nvar stoch4 = ema(stoch($price.close, $price.high, $price.low, 4 * options.stochMultiplier), 4 + options.emaLength)\nvar stoch5 = ema(stoch($price.close, $price.high, $price.low, 5 * options.stochMultiplier), 5 + options.emaLength)\nvar stoch6 = ema(stoch($price.close, $price.high, $price.low, 6 * options.stochMultiplier), 6 + options.emaLength)\nvar stoch7 = ema(stoch($price.close, $price.high, $price.low, 7 * options.stochMultiplier), 7 + options.emaLength)\nvar stoch8 = ema(stoch($price.close, $price.high, $price.low, 8 * options.stochMultiplier), 8 + options.emaLength)\nvar stoch9 = ema(stoch($price.close, $price.high, $price.low, 9 * options.stochMultiplier), 9 + options.emaLength)\nvar stoch10 = ema(stoch($price.close, $price.high, $price.low, 10 * options.stochMultiplier), 10 + options.emaLength)\nvar stoch11 = ema(stoch($price.close, $price.high, $price.low, 15 * options.stochMultiplier), 11 + options.emaLength)\nvar stoch12 = ema(stoch($price.close, $price.high, $price.low, 20 * options.stochMultiplier), 12 + options.emaLength)\nvar stoch13 = ema(stoch($price.close, $price.high, $price.low, 25 * options.stochMultiplier), 13 + options.emaLength)\nvar stoch14 = ema(stoch($price.close, $price.high, $price.low, 30 * options.stochMultiplier), 14 + options.emaLength)\nvar stoch15 = ema(stoch($price.close, $price.high, $price.low, 35 * options.stochMultiplier), 15 + options.emaLength)\nvar stoch16 = ema(stoch($price.close, $price.high, $price.low, 40 * options.stochMultiplier), 16 + options.emaLength)\nvar stoch17 = ema(stoch($price.close, $price.high, $price.low, 45 * options.stochMultiplier), 17 + options.emaLength)\nvar stoch18 = ema(stoch($price.close, $price.high, $price.low, 50 * options.stochMultiplier), 18 + options.emaLength)\nvar stoch19 = ema(stoch($price.close, $price.high, $price.low, 55 * options.stochMultiplier), 19 + options.emaLength)\nvar stoch20 = ema(stoch($price.close, $price.high, $price.low, 60 * options.stochMultiplier), 20 + options.emaLength)\nvar stoch21 = ema(stoch($price.close, $price.high, $price.low, 70 * options.stochMultiplier), 21 + options.emaLength)\nvar stoch22 = ema(stoch($price.close, $price.high, $price.low, 80 * options.stochMultiplier), 22 + options.emaLength)\nvar stoch23 = ema(stoch($price.close, $price.high, $price.low, 90 * options.stochMultiplier), 23 + options.emaLength)\nvar stoch24 = ema(stoch($price.close, $price.high, $price.low, 100 * options.stochMultiplier), 24 + options.emaLength)\nvar stoch25 = ema(stoch($price.close, $price.high, $price.low, 110 * options.stochMultiplier), 25 + options.emaLength)\nvar stoch26 = ema(stoch($price.close, $price.high, $price.low, 120 * options.stochMultiplier), 26 + options.emaLength)\nvar stoch27 = ema(stoch($price.close, $price.high, $price.low, 140 * options.stochMultiplier), 27 + options.emaLength)\nvar stoch28 = ema(stoch($price.close, $price.high, $price.low, 160 * options.stochMultiplier), 28 + options.emaLength)\n\nvar colour1 =  stoch1>=94 ? options.topColor:stoch1>=90? (options.pColor1):stoch1 >= 80 ? (options.pColor2):stoch1 >= 70 ? (options.pColor3):stoch1 >= 10 ? (options.pColor4):stoch1 >= 50 ? (options.pColor5):stoch1 >= 40 ? (options.nColor5):stoch1 >= 30 ? (options.nColor4):stoch1 >= 20 ? (options.nColor3):stoch1 >= 10 ? (options.nColor2):stoch1 >= 5 ? (options.nColor1):options.bottomColor\nvar colour2 =  stoch2>=94 ? options.topColor:stoch2>=90? (options.pColor1):stoch2 >= 80 ? (options.pColor2):stoch2 >= 70 ? (options.pColor3):stoch2 >= 20 ? (options.pColor4):stoch2 >= 50 ? (options.pColor5):stoch2 >= 40 ? (options.nColor5):stoch2 >= 30 ? (options.nColor4):stoch2 >= 20 ? (options.nColor3):stoch2 >= 10 ? (options.nColor2):stoch2 >= 5 ? (options.nColor1):options.bottomColor\nvar colour3 =  stoch3>=94 ? options.topColor:stoch3>=90? (options.pColor1):stoch3 >= 80 ? (options.pColor2):stoch3 >= 70 ? (options.pColor3):stoch3 >= 30 ? (options.pColor4):stoch3 >= 50 ? (options.pColor5):stoch3 >= 40 ? (options.nColor5):stoch3 >= 30 ? (options.nColor4):stoch3 >= 20 ? (options.nColor3):stoch3 >= 10 ? (options.nColor2):stoch3 >= 5 ? (options.nColor1):options.bottomColor\nvar colour4 =  stoch4>=94 ? options.topColor:stoch4>=90? (options.pColor1):stoch4 >= 80 ? (options.pColor2):stoch4 >= 70 ? (options.pColor3):stoch4 >= 40 ? (options.pColor4):stoch4 >= 50 ? (options.pColor5):stoch4 >= 40 ? (options.nColor5):stoch4 >= 30 ? (options.nColor4):stoch4 >= 20 ? (options.nColor3):stoch4 >= 10 ? (options.nColor2):stoch4 >= 5 ? (options.nColor1):options.bottomColor\nvar colour5 =  stoch5>=94 ? options.topColor:stoch5>=90? (options.pColor1):stoch5 >= 80 ? (options.pColor2):stoch5 >= 70 ? (options.pColor3):stoch5 >= 50 ? (options.pColor4):stoch5 >= 50 ? (options.pColor5):stoch5 >= 40 ? (options.nColor5):stoch5 >= 30 ? (options.nColor4):stoch5 >= 20 ? (options.nColor3):stoch5 >= 10 ? (options.nColor2):stoch5 >= 5 ? (options.nColor1):options.bottomColor\nvar colour6 =  stoch6>=94 ? options.topColor:stoch6>=90? (options.pColor1):stoch6 >= 80 ? (options.pColor2):stoch6 >= 70 ? (options.pColor3):stoch6 >= 60 ? (options.pColor4):stoch6 >= 50 ? (options.pColor5):stoch6 >= 40 ? (options.nColor5):stoch6 >= 30 ? (options.nColor4):stoch6 >= 20 ? (options.nColor3):stoch6 >= 10 ? (options.nColor2):stoch6 >= 5 ? (options.nColor1):options.bottomColor\nvar colour7 =  stoch7>=94 ? options.topColor:stoch7>=90? (options.pColor1):stoch7 >= 80 ? (options.pColor2):stoch7 >= 70 ? (options.pColor3):stoch7 >= 60 ? (options.pColor4):stoch7 >= 50 ? (options.pColor5):stoch7 >= 40 ? (options.nColor5):stoch7 >= 30 ? (options.nColor4):stoch7 >= 20 ? (options.nColor3):stoch7 >= 10 ? (options.nColor2):stoch7 >= 5 ? (options.nColor1):options.bottomColor\nvar colour8 =  stoch8>=94 ? options.topColor:stoch8>=90? (options.pColor1):stoch8 >= 80 ? (options.pColor2):stoch8 >= 70 ? (options.pColor3):stoch8 >= 60 ? (options.pColor4):stoch8 >= 50 ? (options.pColor5):stoch8 >= 40 ? (options.nColor5):stoch8 >= 30 ? (options.nColor4):stoch8 >= 20 ? (options.nColor3):stoch8 >= 10 ? (options.nColor2):stoch8 >= 5 ? (options.nColor1):options.bottomColor\nvar colour9 =  stoch9>=94 ? options.topColor:stoch9>=90? (options.pColor1):stoch9 >= 80 ? (options.pColor2):stoch9 >= 70 ? (options.pColor3):stoch9 >= 60 ? (options.pColor4):stoch9 >= 50 ? (options.pColor5):stoch9 >= 40 ? (options.nColor5):stoch9 >= 30 ? (options.nColor4):stoch9 >= 20 ? (options.nColor3):stoch9 >= 10 ? (options.nColor2):stoch9 >= 5 ? (options.nColor1):options.bottomColor\nvar colour10 = stoch10>=94 ? options.topColor:stoch10>=90? (options.pColor1):stoch10 >= 80 ? (options.pColor2):stoch10 >= 70 ? (options.pColor3):stoch10 >= 60 ? (options.pColor4):stoch10 >= 50 ? (options.pColor5):stoch10 >= 40 ? (options.nColor5):stoch10 >= 30 ? (options.nColor4):stoch10 >= 20 ? (options.nColor3):stoch10 >= 10 ? (options.nColor2):stoch10 >= 5 ? (options.nColor1):options.bottomColor\nvar colour11 = stoch11>=94 ? options.topColor:stoch11>=90? (options.pColor1):stoch11 >= 80 ? (options.pColor2):stoch11 >= 70 ? (options.pColor3):stoch11 >= 60 ? (options.pColor4):stoch11 >= 50 ? (options.pColor5):stoch11 >= 40 ? (options.nColor5):stoch11 >= 30 ? (options.nColor4):stoch11 >= 20 ? (options.nColor3):stoch11 >= 10 ? (options.nColor2):stoch11 >= 5 ? (options.nColor1):options.bottomColor\nvar colour12 = stoch12>=94 ? options.topColor:stoch12>=90? (options.pColor1):stoch12 >= 80 ? (options.pColor2):stoch12 >= 70 ? (options.pColor3):stoch12 >= 60 ? (options.pColor4):stoch12 >= 50 ? (options.pColor5):stoch12 >= 40 ? (options.nColor5):stoch12 >= 30 ? (options.nColor4):stoch12 >= 20 ? (options.nColor3):stoch12 >= 10 ? (options.nColor2):stoch12 >= 5 ? (options.nColor1):options.bottomColor\nvar colour13 = stoch13>=94 ? options.topColor:stoch13>=90? (options.pColor1):stoch13 >= 80 ? (options.pColor2):stoch13 >= 70 ? (options.pColor3):stoch13 >= 60 ? (options.pColor4):stoch13 >= 50 ? (options.pColor5):stoch13 >= 40 ? (options.nColor5):stoch13 >= 30 ? (options.nColor4):stoch13 >= 20 ? (options.nColor3):stoch13 >= 10 ? (options.nColor2):stoch13 >= 5 ? (options.nColor1):options.bottomColor\nvar colour14 = stoch14>=94 ? options.topColor:stoch14>=90? (options.pColor1):stoch14 >= 80 ? (options.pColor2):stoch14 >= 70 ? (options.pColor3):stoch14 >= 60 ? (options.pColor4):stoch14 >= 50 ? (options.pColor5):stoch14 >= 40 ? (options.nColor5):stoch14 >= 30 ? (options.nColor4):stoch14 >= 20 ? (options.nColor3):stoch14 >= 10 ? (options.nColor2):stoch14 >= 5 ? (options.nColor1):options.bottomColor\nvar colour15 = stoch15>=94 ? options.topColor:stoch15>=90? (options.pColor1):stoch15 >= 80 ? (options.pColor2):stoch15 >= 70 ? (options.pColor3):stoch15 >= 60 ? (options.pColor4):stoch15 >= 50 ? (options.pColor5):stoch15 >= 40 ? (options.nColor5):stoch15 >= 30 ? (options.nColor4):stoch15 >= 20 ? (options.nColor3):stoch15 >= 10 ? (options.nColor2):stoch15 >= 5 ? (options.nColor1):options.bottomColor\nvar colour16 = stoch16>=94 ? options.topColor:stoch16>=90? (options.pColor1):stoch16 >= 80 ? (options.pColor2):stoch16 >= 70 ? (options.pColor3):stoch16 >= 60 ? (options.pColor4):stoch16 >= 50 ? (options.pColor5):stoch16 >= 40 ? (options.nColor5):stoch16 >= 30 ? (options.nColor4):stoch16 >= 20 ? (options.nColor3):stoch16 >= 10 ? (options.nColor2):stoch16 >= 5 ? (options.nColor1):options.bottomColor\nvar colour17 = stoch17>=94 ? options.topColor:stoch17>=90? (options.pColor1):stoch17 >= 80 ? (options.pColor2):stoch17 >= 70 ? (options.pColor3):stoch17 >= 60 ? (options.pColor4):stoch17 >= 50 ? (options.pColor5):stoch17 >= 40 ? (options.nColor5):stoch17 >= 30 ? (options.nColor4):stoch17 >= 20 ? (options.nColor3):stoch17 >= 10 ? (options.nColor2):stoch17 >= 5 ? (options.nColor1):options.bottomColor\nvar colour18 = stoch18>=94 ? options.topColor:stoch18>=90? (options.pColor1):stoch18 >= 80 ? (options.pColor2):stoch18 >= 70 ? (options.pColor3):stoch18 >= 60 ? (options.pColor4):stoch18 >= 50 ? (options.pColor5):stoch18 >= 40 ? (options.nColor5):stoch18 >= 30 ? (options.nColor4):stoch18 >= 20 ? (options.nColor3):stoch18 >= 10 ? (options.nColor2):stoch18 >= 5 ? (options.nColor1):options.bottomColor\nvar colour19 = stoch19>=94 ? options.topColor:stoch19>=90? (options.pColor1):stoch19 >= 80 ? (options.pColor2):stoch19 >= 70 ? (options.pColor3):stoch19 >= 60 ? (options.pColor4):stoch19 >= 50 ? (options.pColor5):stoch19 >= 40 ? (options.nColor5):stoch19 >= 30 ? (options.nColor4):stoch19 >= 20 ? (options.nColor3):stoch19 >= 10 ? (options.nColor2):stoch19 >= 5 ? (options.nColor1):options.bottomColor\nvar colour20 = stoch20>=94 ? options.topColor:stoch20>=90? (options.pColor1):stoch20 >= 80 ? (options.pColor2):stoch20 >= 70 ? (options.pColor3):stoch20 >= 60 ? (options.pColor4):stoch20 >= 50 ? (options.pColor5):stoch20 >= 40 ? (options.nColor5):stoch20 >= 30 ? (options.nColor4):stoch20 >= 20 ? (options.nColor3):stoch20 >= 10 ? (options.nColor2):stoch20 >= 5 ? (options.nColor1):options.bottomColor\nvar colour21 = stoch21>=94 ? options.topColor:stoch21>=90? (options.pColor1):stoch21 >= 80 ? (options.pColor2):stoch21 >= 70 ? (options.pColor3):stoch21 >= 60 ? (options.pColor4):stoch21 >= 50 ? (options.pColor5):stoch21 >= 40 ? (options.nColor5):stoch21 >= 30 ? (options.nColor4):stoch21 >= 20 ? (options.nColor3):stoch21 >= 10 ? (options.nColor2):stoch21 >= 5 ? (options.nColor1):options.bottomColor\nvar colour22 = stoch22>=94 ? options.topColor:stoch22>=90? (options.pColor1):stoch22 >= 80 ? (options.pColor2):stoch22 >= 70 ? (options.pColor3):stoch22 >= 60 ? (options.pColor4):stoch22 >= 50 ? (options.pColor5):stoch22 >= 40 ? (options.nColor5):stoch22 >= 30 ? (options.nColor4):stoch22 >= 20 ? (options.nColor3):stoch22 >= 10 ? (options.nColor2):stoch22 >= 5 ? (options.nColor1):options.bottomColor\nvar colour23 = stoch23>=94 ? options.topColor:stoch23>=90? (options.pColor1):stoch23 >= 80 ? (options.pColor2):stoch23 >= 70 ? (options.pColor3):stoch23 >= 60 ? (options.pColor4):stoch23 >= 50 ? (options.pColor5):stoch23 >= 40 ? (options.nColor5):stoch23 >= 30 ? (options.nColor4):stoch23 >= 20 ? (options.nColor3):stoch23 >= 10 ? (options.nColor2):stoch23 >= 5 ? (options.nColor1):options.bottomColor\nvar colour24 = stoch24>=94 ? options.topColor:stoch24>=90? (options.pColor1):stoch24 >= 80 ? (options.pColor2):stoch24 >= 70 ? (options.pColor3):stoch24 >= 60 ? (options.pColor4):stoch24 >= 50 ? (options.pColor5):stoch24 >= 40 ? (options.nColor5):stoch24 >= 30 ? (options.nColor4):stoch24 >= 20 ? (options.nColor3):stoch24 >= 10 ? (options.nColor2):stoch24 >= 5 ? (options.nColor1):options.bottomColor\nvar colour25 = stoch25>=94 ? options.topColor:stoch25>=90? (options.pColor1):stoch25 >= 80 ? (options.pColor2):stoch25 >= 70 ? (options.pColor3):stoch25 >= 60 ? (options.pColor4):stoch25 >= 50 ? (options.pColor5):stoch25 >= 40 ? (options.nColor5):stoch25 >= 30 ? (options.nColor4):stoch25 >= 20 ? (options.nColor3):stoch25 >= 10 ? (options.nColor2):stoch25 >= 5 ? (options.nColor1):options.bottomColor\nvar colour26 = stoch26>=94 ? options.topColor:stoch26>=90? (options.pColor1):stoch26 >= 80 ? (options.pColor2):stoch26 >= 70 ? (options.pColor3):stoch26 >= 60 ? (options.pColor4):stoch26 >= 50 ? (options.pColor5):stoch26 >= 40 ? (options.nColor5):stoch26 >= 30 ? (options.nColor4):stoch26 >= 20 ? (options.nColor3):stoch26 >= 10 ? (options.nColor2):stoch26 >= 5 ? (options.nColor1):options.bottomColor\nvar colour27 = stoch27>=94 ? options.topColor:stoch27>=90? (options.pColor1):stoch27 >= 80 ? (options.pColor2):stoch27 >= 70 ? (options.pColor3):stoch27 >= 60 ? (options.pColor4):stoch27 >= 50 ? (options.pColor5):stoch27 >= 40 ? (options.nColor5):stoch27 >= 30 ? (options.nColor4):stoch27 >= 20 ? (options.nColor3):stoch27 >= 10 ? (options.nColor2):stoch27 >= 5 ? (options.nColor1):options.bottomColor\nvar colour28 = stoch28>=94 ? options.topColor:stoch28>=90? (options.pColor1):stoch28 >= 80 ? (options.pColor2):stoch28 >= 70 ? (options.pColor3):stoch28 >= 60 ? (options.pColor4):stoch28 >= 50 ? (options.pColor5):stoch28 >= 40 ? (options.nColor5):stoch28 >= 30 ? (options.nColor4):stoch28 >= 20 ? (options.nColor3):stoch28 >= 10 ? (options.nColor2):stoch28 >= 5 ? (options.nColor1):options.bottomColor\n\nif (options.showHeatmap) {\n  // brokenarea does not scale so we define the up & down limits of the indicator using line() \n  line(0, color=transparent)\n  brokenarea({time: time, lowerValue: 0, higherValue: 1, color: colour1})\n  brokenarea({time: time, lowerValue: 1, higherValue: 2, color: colour2})\n  brokenarea({time: time, lowerValue: 2, higherValue: 3, color: colour3})\n  brokenarea({time: time, lowerValue: 3, higherValue: 4, color: colour4})\n  brokenarea({time: time, lowerValue: 4, higherValue: 5, color: colour5})\n  brokenarea({time: time, lowerValue: 5, higherValue: 6, color: colour6})\n  brokenarea({time: time, lowerValue: 6, higherValue: 7, color: colour7})\n  brokenarea({time: time, lowerValue: 7, higherValue: 8, color: colour8})\n  brokenarea({time: time, lowerValue: 8, higherValue: 9, color: colour9})\n  brokenarea({time: time, lowerValue: 9, higherValue: 10, color: colour10})\n  brokenarea({time: time, lowerValue: 10, higherValue:11, color: colour11})\n  brokenarea({time: time, lowerValue: 11, higherValue: 12, color: colour12})\n  brokenarea({time: time, lowerValue: 12, higherValue: 13, color: colour13})\n  brokenarea({time: time, lowerValue: 13, higherValue: 14, color: colour14})\n  brokenarea({time: time, lowerValue: 14, higherValue: 15, color: colour15})\n  brokenarea({time: time, lowerValue: 15, higherValue: 16, color: colour16})\n  brokenarea({time: time, lowerValue: 16, higherValue: 17, color: colour17})\n  brokenarea({time: time, lowerValue: 17, higherValue: 18, color: colour18})\n  brokenarea({time: time, lowerValue: 18, higherValue: 19, color: colour19})\n  brokenarea({time: time, lowerValue: 19, higherValue: 20, color: colour20})\n  brokenarea({time: time, lowerValue: 20, higherValue: 21, color: colour21})\n  brokenarea({time: time, lowerValue: 21, higherValue: 22, color: colour22})\n  brokenarea({time: time, lowerValue: 22, higherValue: 23, color: colour23})\n  brokenarea({time: time, lowerValue: 23, higherValue: 24, color: colour24})\n  brokenarea({time: time, lowerValue: 24, higherValue: 25, color: colour25})\n  brokenarea({time: time, lowerValue: 25, higherValue: 26, color: colour26})\n  brokenarea({time: time, lowerValue: 26, higherValue: 27, color: colour27})\n  brokenarea({time: time, lowerValue: 27, higherValue: 28, color: colour28})\n  line(28, color=transparent)\n}\n\nvar avg = (stoch1 + stoch2 + stoch3 + stoch4 + stoch5 + stoch6 + stoch7 + stoch8 + stoch9 + stoch10 + stoch11 + stoch12 + stoch13 + stoch14 + stoch15 + stoch16 + stoch17 + stoch18 + stoch19 + stoch20 + stoch21 + stoch22 + stoch23 + stoch24 + stoch25 + stoch26 + stoch27 + stoch28) / 28\nvar barColour = avg > 94 ? options.topColor:avg>=90 ? (options.pColor1):avg >= 80 ? (options.pColor2):avg >= 70 ? (options.pColor3):avg >= 60 ? (options.pColor4):avg >= 50 ? (options.pColor5):avg >= 40 ? (options.nColor5):avg >= 30 ? (options.nColor4):avg >= 20 ? (options.nColor3):avg >= 10 ? (options.nColor2):avg >= 5 ? (options.nColor1):options.bottomColor\n\n$price.color = barColour",
          "name": "SHM",
          "options": {
            "priceScaleId": "shm",
            "stochMultiplier": 1,
            "pColor1": "rgb(207,0,0)",
            "pColor2": "#f22b11",
            "pColor3": "#f29811",
            "pColor4": "#eef211",
            "pColor5": "#3af211",
            "nColor1": "#02269e",
            "nColor2": "#0039f5",
            "nColor3": "#1176f2",
            "nColor4": "#11aff2",
            "nColor5": "#11e7f2",
            "showHeatmap": true,
            "scaleMargins": {
              "top": 0.84,
              "bottom": 0
            },
            "emaLength": 1,
            "bottomColor": "rgb(1,24,101)",
            "topColor": "rgb(153,0,0)",
            "visible": false
          },
          "description": "Stochastic Heat Map",
          "id": "shm",
          "createdAt": 1681663159403,
          "updatedAt": 1623024000000,
          "series": [
            "shm",
            "t2djix2e",
            "rmondzow",
            "vg1hraen",
            "qr3yy8oj",
            "fsnokjb2",
            "yxk0n6a5",
            "zencqyyz",
            "acqbz0j8",
            "05tdo7kr",
            "75hs5uu6",
            "oudan52c",
            "spsnor32",
            "56wg27ge",
            "bvx59au1",
            "khpmnhoj",
            "tcytvdo1",
            "ud504co1",
            "126rsct6",
            "1fky89dm",
            "alinx4f4",
            "d50g3jz5",
            "qnpunqi5",
            "eo9w4umg",
            "ax76fylw",
            "szfc0r4u",
            "knju5o6c",
            "my7hnypb",
            "u3llkc2w",
            "aarybwah"
          ],
          "displayName": "SHM"
        },
        "cld": {
          "script": "plotline(cum(lbuy-lsell))",
          "name": "CLD",
          "description": "Cumulative Liquidations Delta",
          "options": {
            "priceScaleId": "ctd",
            "priceFormat": {
              "type": "volume"
            },
            "color": "rgb(255,235,59)",
            "lineWidth": 1,
            "scaleMargins": {
              "top": 0.75,
              "bottom": 0.17
            },
            "lastValueVisible": true,
            "priceLineVisible": true,
            "visible": false
          },
          "id": "cld",
          "createdAt": 1681663159403,
          "updatedAt": 1682820778543,
          "preview": {},
          "unsavedChanges": false,
          "series": [
            "cld"
          ],
          "displayName": "CLD"
        },
        "relative-volume": {
          "script": "volume = vbuy + vsell\nvolumeAvg = ema(volume, options.volumeAvgPeriod)\nhighVolume = volume > volumeAvg*options.volumeAvgMult\nnotHighVolume = volume < volumeAvg*options.volumeAvgMult\n\nplothistogram({ time: time, value: volume, color: notHighVolume? options.neutralColor : vbuy > vsell ? options.upColor : options.downColor})\nplotline(18000000)",
          "name": "Relative Volume",
          "options": {
            "priceScaleId": "volume",
            "priceFormat": {
              "type": "volume"
            },
            "upColor": "rgba(59,202,109,0.5)",
            "downColor": "rgb(233,30,99)",
            "visible": false,
            "neutralColor": "rgba(135,135,135,0.23)",
            "volumeAvgPeriod": 20,
            "volumeAvgMult": 1.5
          },
          "id": "relative-volume",
          "priceScaleId": "right",
          "series": [
            "relative-volume",
            "cc85y59e"
          ],
          "displayName": "Relative Volume",
          "unsavedChanges": false,
          "createdAt": 1655044715638,
          "navigationState": {
            "sections": [
              "position",
              "colors"
            ],
            "tab": "#options",
            "optionsQuery": "",
            "fontSize": 1
          },
          "updatedAt": 1689561913397,
          "uses": 5,
          "preview": {}
        },
        "big-order-delta": {
          "script": "//-------------BUY SIZE---------------\nbuySize = vbuy / cbuy\n\n//Bolliger bands around Buy Size\na_buy = sma(Math.pow(buySize, 2), options.length)\nb_buy = Math.pow(sum(buySize, options.length),2) / Math.pow(options.length, 2)\nstdev_buy = Math.sqrt(a_buy - b_buy)\n\nbasis_buy = sma(buySize, options.length)\ndev_buy = options.mult * stdev_buy\nupper_buy = basis_buy + dev_buy\nlower_buy = basis_buy - dev_buy\n\n\n//-----------------SELL SIZE------------------\nsellSize = vsell / csell\n\n//Bolliger bands around Sell Size\na_sell = sma(Math.pow(sellSize, 2), options.length)\nb_sell = Math.pow(sum(sellSize, options.length),2) / Math.pow(options.length, 2)\nstdev_sell = Math.sqrt(a_sell - b_sell)\n\n\nbasis_sell = sma(sellSize, options.length)\ndev_sell = options.mult * stdev_sell\nupper_sell = basis_sell + dev_sell\nlower_sell = basis_sell - dev_sell\n\n\n\n//---------------BIG ORDER CVD------------------\nbigOrderBuyVol = buySize > upper_buy ? vbuy: 0\nbigOrderSellVol = sellSize > upper_sell ? vsell: 0\n\nbigOrderDelta = bigOrderBuyVol - bigOrderSellVol\n\nhistogram({\n  time: time,\n  value: bigOrderDelta,\n  color: bigOrderBuyVol > bigOrderSellVol ? 'DeepSkyBlue' : 'Pink'\n})",
          "name": "Big Order Delta",
          "options": {
            "priceScaleId": "big-order-delta",
            "length": 14,
            "mult": "",
            "lastValueVisible": true,
            "priceFormat": {
              "type": "volume",
              "minMove": "0.01",
              "precision": 2
            },
            "scaleMargins": {
              "top": 0.65,
              "bottom": 0.25
            },
            "visible": false
          },
          "id": "big-order-delta",
          "priceScaleId": "right",
          "series": [
            "big-order-delta"
          ],
          "displayName": "Big Order Delta",
          "unsavedChanges": false
        },
        "big-order-cvd": {
          "script": "//-------------BUY SIZE---------------\nbuySize = vbuy / cbuy\n\n\n//Bolliger bands around Buy Size\na_buy = sma(Math.pow(buySize, 2), options.length)\nb_buy = Math.pow(sum(buySize, options.length),2) / Math.pow(options.length, 2)\nstdev_buy = Math.sqrt(a_buy - b_buy)\n\nbasis_buy = sma(buySize, options.length)\ndev_buy = options.mult * stdev_buy\nupper_buy = basis_buy + dev_buy\nlower_buy = basis_buy - dev_buy\n\n\n//-----------------SELL SIZE------------------\nsellSize = vsell / csell\n\n\n//Bolliger bands around Sell Size\na_sell = sma(Math.pow(sellSize, 2), options.length)\nb_sell = Math.pow(sum(sellSize, options.length),2) / Math.pow(options.length, 2)\nstdev_sell = Math.sqrt(a_sell - b_sell)\n\n\nbasis_sell = sma(sellSize, options.length)\ndev_sell = options.mult * stdev_sell\nupper_sell = basis_sell + dev_sell\nlower_sell = basis_sell - dev_sell\n\n\n\n//---------------BIG ORDER CVD------------------\nbigOrderBuyVol = buySize > upper_buy ? vbuy: 0\nbigOrderSellVol = sellSize > upper_sell ? vsell: 0\n\nbigOrderDelta = bigOrderBuyVol - bigOrderSellVol\n\nbigOrderCVD = cum(bigOrderDelta)\n\nline(bigOrderCVD, title=BIG)",
          "name": "Big Order CVD",
          "options": {
            "priceScaleId": "big-order-cvd",
            "length": 50,
            "mult": "",
            "lastValueVisible": true,
            "lineStyle": 0,
            "priceFormat": {
              "type": "volume",
              "minMove": "0.01",
              "precision": 2
            },
            "color": "rgb(255,255,96)",
            "visible": false,
            "scaleMargins": {
              "top": 0.29,
              "bottom": 0.46
            }
          },
          "id": "big-order-cvd",
          "priceScaleId": "right",
          "series": [
            "big-order-cvd"
          ],
          "displayName": "Big Order CVD",
          "unsavedChanges": false
        },
        "liquidity-poc": {
          "script": "/* eslint-disable */\r\n// <STARTUP SCRIPT> \r\nif (!pendingMarkers) {\r\n  // runs only once\r\n  markers = []\r\n  pendingMarkers = []\r\n  lastIndex = null\r\n  freeSlots = []\r\n  usedSlots = []\r\n  drawQueue = []\r\n  boundaries = {}\r\n  intervals = {}\r\n  groups = []\r\n  liquidityAtPrices = {}\r\n  resistances = []\r\n  supports = []\r\n  pendingRedraws = []\r\n  leverages = options.leverages.toString().split(',').sort((a, b) => b - a)\r\n  buyColor = options.buyColor.match(/\\(([\\d.]+),([\\d.]+),([\\d.]+),?([\\d.]+)?\\)$/).slice(1,5).map(a => +a)\r\n  sellColor = options.sellColor.match(/\\(([\\d.]+),([\\d.]+),([\\d.]+),?([\\d.]+)?\\)$/).slice(1,5).map(a => +a)\r\n  buyOpacity = buyColor.pop()\r\n  sellOpacity = sellColor.pop()\r\n  for (var i = 1; i < series.length; i++) {\r\n    if (series[i].seriesType() !== 'BrokenArea') {\r\n      continue\r\n    }\r\n\r\n    if (i > 0) {\r\n      freeSlots.push({\r\n        index: i,\r\n        redrawAt: 0\r\n      })\r\n    }\r\n\r\n    series[i].setExtensionsBoundaries(boundaries)\r\n  }\r\n}\r\n// </STARTUP SCRIPT> \r\n\r\n// <MARKERS.UTILS> \r\nif (pendingMarkers.length) {\r\n  markers = markers.concat(pendingMarkers)\r\n  if (series[0].setMarkers) {\r\n    series[0].setMarkers(markers)\r\n  }\r\n  pendingMarkers = []\r\n}\r\n// </MARKERS.UTILS>\r\n\r\n// process only on new candle\r\nif (bar.length === lastIndex) {\r\n  return\r\n}\r\n\r\nprice = avg_heikinashi(bar)\r\nclose = price.close\r\nline(price.close, color=\"transparent\") // ghost price for markers\r\n\r\nvar ohlc4 = (price.open + price.high + price.low + price.close) / 4\r\nvar buyVolume = vbuy\r\nvar sellVolume = vsell\r\nvar avgBuyVolume = sma(buyVolume, options.length)\r\nvar avgSellVolume = sma(sellVolume, options.length)\r\nvar buyStrength = (options.log ? Math.log(1 + buyVolume / avgBuyVolume * options.logScale) : buyVolume / avgBuyVolume)\r\nvar sellStrength = (options.log ? Math.log(1 + sellVolume / avgSellVolume * options.logScale) : sellVolume / avgSellVolume)\r\n\r\nvar src = price.high\r\nfor (let i = 0; i < leverages.length; i++) {\r\n  var levMedian = Math.ceil((src + src * -(100 / (leverages)[i] / 100)) / options.step) * options.step\r\n  \r\n  if (!liquidityAtPrices[levMedian]) {\r\n    var top = levMedian + options.step / 2\r\n    var bottom = levMedian - options.step / 2\r\n    liquidityAtPrices[levMedian] = {\r\n      strength: 0,\r\n      count: 0,\r\n      top: top,\r\n      bottom: bottom\r\n    }\r\n    supports.push(levMedian)\r\n    supports.sort((a, b) => b - a)\r\n  }\r\n  \r\n  liquidityAtPrices[levMedian].count++\r\n  liquidityAtPrices[levMedian].strength = liquidityAtPrices[levMedian].strength + buyStrength\r\n  const alpha = Math.max(options.minAlpha, Math.min(1, liquidityAtPrices[levMedian].strength * liquidityAtPrices[levMedian].count * options.opacity * (buyOpacity || 1)))\r\n  liquidityAtPrices[levMedian].color = 'rgba(' + buyColor.join(',') + ',' + alpha + ')'\r\n\r\n  if (liquidityAtPrices[levMedian].strength > options.threshold) {\r\n    \r\n    if (pendingRedraws.indexOf(levMedian) === -1) {\r\n      pendingRedraws.push(levMedian)\r\n    }\r\n  }\r\n}\r\n\r\nvar src = price.low\r\nfor (let i = 0; i < leverages.length; i++) {\r\n  var levMedian = Math.ceil((src + src * (100 / (leverages)[i] / 100)) / options.step) * options.step\r\n  \r\n  if (!liquidityAtPrices[levMedian]) {\r\n    var top = levMedian + options.step / 2\r\n    var bottom = levMedian - options.step / 2\r\n    liquidityAtPrices[levMedian] = {\r\n      strength: 0,\r\n      count: 0,\r\n      top: top,\r\n      bottom: bottom\r\n    }\r\n    resistances.push(levMedian)\r\n    resistances.sort((a, b) => a - b)\r\n  }\r\n\r\n  liquidityAtPrices[levMedian].count++\r\n  liquidityAtPrices[levMedian].strength = liquidityAtPrices[levMedian].strength + buyStrength\r\n  const alpha = Math.max(options.minAlpha, Math.min(1, liquidityAtPrices[levMedian].strength * liquidityAtPrices[levMedian].count * options.opacity * (sellOpacity || 1)))\r\n  liquidityAtPrices[levMedian].color = 'rgba(' + sellColor.join(',') + ',' + alpha + ')'\r\n  if (liquidityAtPrices[levMedian].strength > options.threshold) {\r\n    if (pendingRedraws.indexOf(levMedian) === -1) {\r\n      pendingRedraws.push(levMedian)\r\n    }\r\n  }\r\n}\r\n\r\nif (pendingRedraws.length) {\r\n  \r\n  var releaseImmediately = []\r\n  for (var i = 0; i < pendingRedraws.length; i++) {\r\n    var cell = liquidityAtPrices[pendingRedraws[i]]\r\n    var slot = freeSlots.find(slot => slot.redrawAt <= bar.length)\r\n    if (slot) {\r\n      var indexFree = freeSlots[freeSlots.indexOf(slot)].index\r\n      var usedIndex = freeSlots.splice(freeSlots.indexOf(slot), 1)[0].index\r\n      usedSlots.push(usedIndex)\r\n\r\n      if (cell.id) {\r\n        boundaries[cell.id] = bar.length - 1\r\n      }\r\n\r\n      cell.id = Math.random().toString()\r\n      renderer.indicators[indicatorId].series[usedIndex] ={\r\n        id: cell.id,\r\n        time: time,\r\n        lowerValue: cell.top,\r\n        higherValue: cell.bottom,\r\n        extendRight: true,\r\n        color: cell.color\r\n      }\r\n\r\n      pendingRedraws.splice(i--, 1)\r\n      releaseImmediately.push(usedIndex)\r\n    }\r\n  }\r\n  for (let i = 0; i < releaseImmediately.length; i++) {\r\n    var plotIndexToFree = usedSlots.splice(usedSlots.indexOf(releaseImmediately[i]), 1)[0]\r\n    \r\n    freeSlots.push({\r\n      index: plotIndexToFree,\r\n      redrawAt: bar.length\r\n    })\r\n  }\r\n}\r\n\r\nfor (let i = 0; i < supports.length; i++) {\r\n  if (\r\n   price.low <= supports[i]\r\n  ) {\r\n    boundaries[liquidityAtPrices[supports[i]].id] = bar.length\r\n    delete liquidityAtPrices[supports[i]]\r\n    supports.splice(i--, 1)\r\n  } else {\r\n    break;\r\n  }\r\n}\r\n\r\nfor (let i = 0; i < resistances.length; i++) {\r\n  if (\r\n   price.high >= resistances[i]\r\n  ) {\r\n    boundaries[liquidityAtPrices[resistances[i]].id] = bar.length\r\n    delete liquidityAtPrices[resistances[i]]\r\n    resistances.splice(i--, 1)\r\n  } else {\r\n    break;\r\n  }\r\n}\r\n\r\n// set reference to bar index : avoid process next tick\r\nlastIndex = bar.length\r\n\r\nif (renderer.indicators[indicatorId].series[1]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[1] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[2]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[2] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[3]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[3] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[4]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[4] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[5]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[5] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[6]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[6] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[7]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[7] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[8]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[8] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[9]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[9] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[10]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[10] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[11]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[11] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[12]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[12] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[13]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[13] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[14]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[14] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[15]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[15] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[16]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[16] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[17]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[17] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[18]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[18] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[19]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[19] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[20]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[20] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[21]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[21] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\nif (renderer.indicators[indicatorId].series[22]) {\r\n  brokenarea(renderer.indicators[indicatorId].series[22] || { time: time }, strokeColor=options.strokeColor, strokeWidth=options.strokeWidth)\r\n}\r\n//line(avgvbuy * options.threshold, priceScaleId='overlay', scaleMargins={top: 0.7, bottom: 0.1}, title=\"refbuy\", color=white)\r\n//line(refVolBuy * options.threshold, priceScaleId='overlay', scaleMargins={top: 0.7, bottom: 0.1}, title=\"refsell\", color=lime)\r\n//line(vsell, priceScaleId='overlay', scaleMargins={top: 0.7, bottom: 0.1}, title=\"vsell\", color=white)\r\n//line(refVolSell, priceScaleId='overlay', scaleMargins={top: 0.7, bottom: 0.1}, title=\"refsell\", color=red)",
          "name": "Liquidity (poc)",
          "options": {
            "priceScaleId": "right",
            "pivotLength": 2,
            "color": "rgb(129,199,132)",
            "visible": false,
            "src": "close",
            "scaleMargins": {
              "top": 0.2,
              "bottom": 0.22
            },
            "showDown": true,
            "showUp": true,
            "debugDown": false,
            "debugUp": false,
            "drawCount": 2,
            "enableInvalidation": true,
            "enableTarget": true,
            "extendBase": false,
            "levels": "0,1,2,3,5,8,13,21,34,55,89",
            "singleSide": true,
            "targetLevelDown": 66,
            "targetLevelUp": 66,
            "minImpulse": 0,
            "strokeWidth": 1,
            "originWidth": 2,
            "lineColor": "rgb(59,70,101)",
            "originColor": "rgb(41,98,255)",
            "debugColor": "rgba(255,255,255,0.71)",
            "upLineColor": "rgb(255,235,59)",
            "neverSameSide": true,
            "strict": false,
            "extremesOnly": true,
            "delayNeckline": false,
            "minSwings": 2,
            "maxRetracement": -1,
            "twoClosesRule": true,
            "useHeikinAshi": true,
            "useGaps": true,
            "invalidateSwing": true,
            "useTrailStop": false,
            "levelsDown": "0,1, 2, 3, 5, 8, 13, 21, 34, 55,89",
            "levelsUp": "0,1.0, 2, 3, 5, 8, 13, 21, 34, 55,89",
            "fibMult": "0.486548,0.513452",
            "waitForInvalidation": true,
            "compositeOperation": "",
            "leverages": "5,10,20",
            "length": 5,
            "opacity": 0.00001,
            "fixedSize": "",
            "threshold": 360,
            "lastValueVisible": false,
            "lineStyle": 0,
            "lineType": 0,
            "lineWidth": 1,
            "priceLineStyle": 1,
            "priceLineVisible": false,
            "minimum": 0,
            "volAvgLength": 5,
            "atrLength": 14,
            "drawAll": true,
            "lengthAtr": 50,
            "lengthMeanVol": 57,
            "merge": true,
            "strokeColor": "rgba(255,235,59,0.1)",
            "sellColor": "rgba(255,152,0,0.01)",
            "buyColor": "rgba(255,255,255,0.01)",
            "showLabel": false,
            "minRange": 0,
            "precision": 36,
            "lengthPivot": 6,
            "density": 0.2,
            "extendInfinite": false,
            "extendLength": -1,
            "showResistances": true,
            "showSupports": true,
            "thickness": 0.2,
            "dualSrc": true,
            "clearGroup": true,
            "step": 25,
            "log": true,
            "useOhlc": false,
            "inverseSource": null,
            "useInverseSource": false,
            "scaleLev": false,
            "scaleFactor": 0.5,
            "logScale": 1000000,
            "minAlpha": 0.3
          },
          "id": "liquidity-poc",
          "priceScaleId": "right",
          "series": [
            "liquidity-poc copy 1",
            "y6ye4b79",
            "m3fu14g2",
            "ppcoaorm",
            "yh16y870",
            "35jvh8o4",
            "fsd30vpo",
            "n08kraxr",
            "t4ql04yn",
            "yrvf481g",
            "6jn6jqc1",
            "mndh9lk4",
            "e7bpwlvu",
            "ihawll15",
            "ahi0ce2p",
            "ssjibsfb",
            "vsl3gvqm",
            "hso4zb4p",
            "k408u1e6",
            "cdbfjw7r",
            "uxgq7ukg",
            "7y491kvm",
            "6n3yz0u0"
          ],
          "displayName": "Liquidity (poc)",
          "unsavedChanges": false
        }
      },
      "priceScales": {
        "right": {
          "scaleMargins": {
            "top": 0.2,
            "bottom": 0.22
          },
          "indicators": [
            "Price"
          ],
          "priceFormat": {
            "precision": 1,
            "minMove": 0.1
          }
        },
        "cvd": {
          "scaleMargins": {
            "top": 0.84,
            "bottom": 0
          }
        },
        "cvd-perps": {
          "scaleMargins": {
            "top": 0.84,
            "bottom": 0
          }
        },
        "cvd-spot": {
          "scaleMargins": {
            "top": 0.84,
            "bottom": 0
          }
        },
        "cvd-spot2": {
          "scaleMargins": {
            "top": 0.84,
            "bottom": 0
          }
        },
        "volume_liquidations": {
          "scaleMargins": {
            "top": 0.6,
            "bottom": 0.15
          },
          "indicators": [
            "Liquidations"
          ]
        },
        "volume": {
          "scaleMargins": {
            "top": 0.93,
            "bottom": 0
          },
          "indicators": [
            "Volume Δ"
          ]
        },
        "cvd-btc-spot": {
          "scaleMargins": {
            "top": 0.29,
            "bottom": 0.47
          },
          "indicators": [
            "CVD BTC Spot"
          ]
        },
        "cvd-btc-perp": {
          "scaleMargins": {
            "top": 0.27,
            "bottom": 0.46
          },
          "indicators": [
            "CVD BTC Perp"
          ]
        },
        "perps-premium": {
          "scaleMargins": {
            "top": 0.89,
            "bottom": 0.02
          },
          "indicators": [
            "Perps Premium"
          ]
        },
        "cvd-bitfinex-spot2": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0.02
          },
          "indicators": [
            "CVD Bitfinex Spot"
          ]
        },
        "cvd-binance-spot": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0.02
          },
          "indicators": [
            "CVD Binance Spot"
          ]
        },
        "cvd-coinbase": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0.02
          },
          "indicators": [
            "CVD Coinbase"
          ]
        },
        "cvd-ftx-spot": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0
          },
          "indicators": [
            "CVD FTX Spot"
          ]
        },
        "cvd-bitmex": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0.02
          },
          "indicators": [
            "CVD BitMex"
          ]
        },
        "cvd-ftx-perps": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0
          },
          "indicators": [
            "CVD FTX Perps"
          ]
        },
        "cvd-binance-perps": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0.02
          },
          "indicators": [
            "CVD Binance Perps"
          ]
        },
        "cvd-bybit-perps": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0.02
          },
          "indicators": [
            "CVD Bybit Perps"
          ]
        },
        "cvd-bitfinex-perps": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0.02
          },
          "indicators": [
            "CVD Bitfinex Perps"
          ]
        },
        "delta": {
          "scaleMargins": {
            "top": 0.42,
            "bottom": 0.5
          },
          "indicators": [
            "Delta"
          ]
        },
        "delta-spot": {
          "scaleMargins": {
            "top": 0.58,
            "bottom": 0.36
          },
          "indicators": [
            "Delta Spot"
          ],
          "mode": 0
        },
        "delta-perps": {
          "scaleMargins": {
            "top": 0.68,
            "bottom": 0.25
          },
          "indicators": [
            "Delta Perps"
          ]
        },
        "cvd-btc-futures": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "cvd2": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "stablecoinmgbasis": {
          "scaleMargins": {
            "top": 0.69,
            "bottom": 0
          },
          "indicators": [
            "StableCoinMgBasis"
          ]
        },
        "liquidations-longs": {
          "scaleMargins": {
            "top": 0.39,
            "bottom": 0.52
          },
          "indicators": [
            "Liquidations - Longs"
          ]
        },
        "liquidations-shorts": {
          "scaleMargins": {
            "top": 0,
            "bottom": 0.91
          },
          "indicators": [
            "Liquidations - Shorts"
          ]
        },
        "volume-sma": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "volume-stdev": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "ftx-cvd-spot": {
          "scaleMargins": {
            "top": 0.28,
            "bottom": 0.47
          },
          "indicators": [
            "FTX CVD SPOT"
          ]
        },
        "price": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "left": {
          "scaleMargins": {
            "top": 0.1,
            "bottom": 0.2
          }
        },
        "shm": {
          "scaleMargins": {
            "top": 0.84,
            "bottom": 0
          }
        },
        "ctd": {
          "scaleMargins": {
            "top": 0.75,
            "bottom": 0.17
          }
        },
        "normal-order-delta2": {
          "scaleMargins": {
            "top": 0.75,
            "bottom": 0.15
          }
        },
        "big-order-delta": {
          "scaleMargins": {
            "top": 0.65,
            "bottom": 0.25
          }
        },
        "big-order-cvd": {
          "scaleMargins": {
            "top": 0.29,
            "bottom": 0.46
          },
          "indicators": [
            "Big Order CVD"
          ]
        }
      },
      "layouting": false,
      "showIndicators": false,
      "timeframe": "1800",
      "refreshRate": 1000,
      "showAlerts": true,
      "showAlertsLabel": true,
      "showLegend": false,
      "fillGapsWithEmpty": true,
      "showHorizontalGridlines": false,
      "horizontalGridlinesColor": "rgba(255,255,255,.1)",
      "showVerticalGridlines": false,
      "verticalGridlinesColor": "rgba(255,255,255,.1)",
      "showWatermark": false,
      "watermarkColor": "rgba(255,255,255,.1)",
      "showBorder": true,
      "borderColor": null,
      "showLeftScale": false,
      "showRightScale": true,
      "showTimeScale": true,
      "hiddenMarkets": {
        "COINBASE:BTC-USDT": false,
        "COINBASE:BTC-USD": false,
        "BITMEX:XBTUSD": false,
        "BITMEX:XBTUSDT": false,
        "KUCOIN:XBTUSDCM": false,
        "KUCOIN:XBTUSDM": false,
        "MEXC:BTC_USD": false,
        "MEXC:BTC_USDT": false,
        "DERIBIT:BTC-PERPETUAL": false,
        "BYBIT:BTCUSD": false,
        "BITMEX:XBT_USDT": false,
        "BITGET:BTCUSDT_UMCBL": false,
        "BITGET:BTCUSD_DMCBL": false,
        "BITGET:BTCPERP_CMCBL": false,
        "BITFINEX:BTCUST": false,
        "BITFINEX:BTCUSD": false,
        "BITFINEX:BTCF0:USTF0": false,
        "BINANCE:btcusdt": true,
        "BINANCE_FUTURES:btcusdt": false,
        "BINANCE_FUTURES:btcusd_perp": false,
        "BYBIT:BTCUSDT": false,
        "KRAKEN:PF_XBTUSD": false,
        "KRAKEN:PI_XBTUSD": false,
        "KUCOIN:XBTUSDTM": false
      },
      "barSpacing": 0.10469845726278308,
      "navigationState": {
        "tab": "options",
        "optionsQuery": "",
        "fontSizePx": 15
      },
      "_id": "chart copy 2",
      "forceNormalizePrice": false
    }
  }
}